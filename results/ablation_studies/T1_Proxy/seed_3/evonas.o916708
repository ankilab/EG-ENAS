### Starting TaskPrologue of job 916708 on tg095 at Wed 23 Oct 2024 09:28:03 AM CEST
Running on cores 0-31 with governor ondemand
Wed Oct 23 09:28:03 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 560.28.03              Driver Version: 560.28.03      CUDA Version: 12.6     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-40GB          On  |   00000000:01:00.0 Off |                    0 |
| N/A   40C    P0             53W /  400W |       1MiB /  40960MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
### Finished TaskPrologue

Loading python/pytorch-1.13py3.10
  Loading requirement: cuda/11.6.1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/predictions
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/datasets
rsync -ar --exclude='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/datasets/
cp -R evaluation/main.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/main.py
cp -R anki_lab_submission/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1; python3 main.py --mode T1 --select_augment Proxy
ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| unique_values: array([0.02745098, 0.05098039, 0.05490196, 0.05882353, 0.0627451 ,
                          0.07058824, 0.07450981, 0.07843138, 0.08627451, 0.09019608,
                          0.09411765, 0.09803922, 0.10196079, 0.10980392, 0.11372549,
                          0.11764706, 0.12156863, 0.1254902 , 0.12941177, 0.13333334,
                          0.13725491, 0.14117648, 0.14509805, 0.14901961, 0.15294118,
                          0.15686275, 0.16078432, 0.16470589, 0.16862746, 0.17254902,
                          0.1764706 , 0.18039216, 0.18431373, 0.1882353 , 0.19215687,
                          0.19607843, 0.2       , 0.20392157, 0.21176471, 0.21568628,
                          0.21960784, 0.22352941, 0.22745098, 0.23137255, 0.23529412,
                          0.23921569, 0.24313726, 0.24705882, 0.2509804 , 0.25490198,
                          0.25882354, 0.2627451 , 0.26666668, 0.27058825, 0.27450982,
                          0.2784314 , 0.2901961 , 0.29411766, 0.29803923, 0.3019608 ,
                          0.3137255 , 0.31764707, 0.3254902 , 0.32941177, 0.33333334,
                          0.3372549 , 0.34117648, 0.34509805, 0.34901962, 0.3529412 ,
                          0.35686275, 0.36078432, 0.3647059 , 0.36862746, 0.37254903,
                          0.3764706 , 0.38039216, 0.38431373, 0.3882353 , 0.39215687,
                          0.39607844, 0.40392157, 0.40784314, 0.4117647 , 0.41568628,
                          0.41960785, 0.42352942, 0.43137255, 0.43529412, 0.4392157 ,
                          0.44313726, 0.44705883, 0.4509804 , 0.45490196, 0.45882353,
                          0.4627451 , 0.46666667, 0.47058824, 0.4745098 , 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7372549 ,
                          0.7411765 , 0.74509805, 0.7490196 , 0.7529412 , 0.75686276,
                          0.7607843 , 0.7647059 , 0.76862746, 0.77254903, 0.7764706 ,
                          0.78039217, 0.78431374, 0.7882353 , 0.7921569 , 0.79607844,
                          0.8       , 0.8039216 , 0.80784315, 0.8117647 , 0.8156863 ,
                          0.8235294 , 0.83137256, 0.8352941 , 0.8392157 , 0.84313726,
                          0.85882354, 0.8666667 , 0.87058824, 0.8745098 , 0.8784314 ,
                          0.88235295, 0.8980392 , 0.90588236, 0.9098039 , 0.9137255 ,
                          0.91764706, 0.92156863, 0.9254902 , 0.92941177, 0.93333334,
                          0.9372549 , 0.9411765 , 0.94509804, 0.95686275, 0.9607843 ],
                         dtype=float32)
ic| C: 3
ic| H: 16
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning: The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.
  warnings.warn(
ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f5066af9cc0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f5066af99c0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f5066afb0a0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f5066afb010>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f5066afaad0>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f5066afb250>,
                 ToTensor(),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f5066afad40>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['devious_fossa',
                  'xanthic_ara',
                  'poised_dachshund',
                  'bronze_angelfish',
                  'russet_orca',
                  'gay_mink',
                  'sensible_dragon',
                  'enchanted_cockatoo',
                  'remarkable_jaguar',
                  'omniscient_chachalaca',
                  'ruby_turaco',
                  'astonishing_hedgehog',
                  'wisteria_dolphin',
                  'quartz_rat',
                  'carrot_hawk',
                  'foamy_uakari',
                  'roaring_coucal',
                  'clay_bulldog',
                  'bouncy_coyote',
                  'imported_galago']
ic| params: [48.0, 80, 2.249999999999999, 13, 8]
ic| params: [16.0, 88, 2.05, 22, 8]
ic| params: [48.0, 112, 2.3499999999999988, 19, 8]
ic| params: [40.0, 64, 2.249999999999999, 11, 8]
ic| params: [40.0, 104, 2.05, 18, 8]
ic| params: [64.0, 88, 2.0999999999999996, 12, 8]
ic| params: [40.0, 88, 2.6499999999999977, 19, 8]
ic| params: [56.0, 112, 2.7499999999999973, 22, 8]
ic| params: [16.0, 16, 2.249999999999999, 15, 8]
ic| params: [56.0, 64, 2.4999999999999982, 14, 8]
ic| params: [32.0, 80, 2.6999999999999975, 17, 8]
ic| params: [56.0, 96, 2.4499999999999984, 17, 8]
ic| params: [48.0, 88, 2.1999999999999993, 19, 8]
ic| params: [32.0, 48, 2.1999999999999993, 9, 8]
ic| params: [16.0, 56, 2.1499999999999995, 14, 8]
ic| params: [32.0, 64, 2.6999999999999975, 21, 8]
ic| params: [48.0, 88, 2.0999999999999996, 14, 8]
ic| params: [32.0, 80, 2.3999999999999986, 8, 8]
ic| params: [16.0, 24, 2.899999999999997, 8, 8]
ic| params: [32.0, 88, 2.4499999999999984, 10, 8]
ic| individuals: ['devious_fossa',
                  'xanthic_ara',
                  'poised_dachshund',
                  'bronze_angelfish',
                  'russet_orca',
                  'gay_mink',
                  'sensible_dragon',
                  'enchanted_cockatoo',
                  'remarkable_jaguar',
                  'omniscient_chachalaca',
                  'ruby_turaco',
                  'astonishing_hedgehog',
                  'wisteria_dolphin',
                  'quartz_rat',
                  'carrot_hawk',
                  'foamy_uakari',
                  'roaring_coucal',
                  'clay_bulldog',
                  'bouncy_coyote',
                  'imported_galago']
ic| params_dict: {'astonishing_hedgehog': [56.0, 96, 2.4499999999999984, 17, 8],
                  'bouncy_coyote': [16.0, 24, 2.899999999999997, 8, 8],
                  'bronze_angelfish': [40.0, 64, 2.249999999999999, 11, 8],
                  'carrot_hawk': [16.0, 56, 2.1499999999999995, 14, 8],
                  'clay_bulldog': [32.0, 80, 2.3999999999999986, 8, 8],
                  'devious_fossa': [48.0, 80, 2.249999999999999, 13, 8],
                  'enchanted_cockatoo': [56.0, 112, 2.7499999999999973, 22, 8],
                  'foamy_uakari': [32.0, 64, 2.6999999999999975, 21, 8],
                  'gay_mink': [64.0, 88, 2.0999999999999996, 12, 8],
                  'imported_galago': [32.0, 88, 2.4499999999999984, 10, 8],
                  'omniscient_chachalaca': [56.0, 64, 2.4999999999999982, 14, 8],
                  'poised_dachshund': [48.0, 112, 2.3499999999999988, 19, 8],
                  'quartz_rat': [32.0, 48, 2.1999999999999993, 9, 8],
                  'remarkable_jaguar': [16.0, 16, 2.249999999999999, 15, 8],
                  'roaring_coucal': [48.0, 88, 2.0999999999999996, 14, 8],
                  'ruby_turaco': [32.0, 80, 2.6999999999999975, 17, 8],
                  'russet_orca': [40.0, 104, 2.05, 18, 8],
                  'sensible_dragon': [40.0, 88, 2.6499999999999977, 19, 8],
                  'wisteria_dolphin': [48.0, 88, 2.1999999999999993, 19, 8],
                  'xanthic_ara': [16.0, 88, 2.05, 22, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5066af9cc0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5066af99c0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5066afb0a0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5066afb010>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5066afaad0>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5066afb250>,
                                                ToTensor(),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5066afad40>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
ic| f"best_augmentation: {best_aug}": 'best_augmentation: 5'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=15)]')
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| mode: 'T1'
ic| f"Mode {mode}": 'Mode T1'
ic| get_gpu_memory(0): 41727164416
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 107408.82038331032
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
Mode: T1
===========================================================================
=============    Your Unseen Data 2024 Submission is running     =============
===========================================================================
========== Dataset    in16    =============================================
  Metadata:
   - input_shape         : [148700, 3, 16, 16]
   - codename            : in16
   - benchmark           : 46.38
   - num_classes         : 120
   - time_remaining      : 107999.49866628647

=== Processing Data ===
  Allotted compute time remaining: ~29h,59m,59s

=== Performing NAS ===
  Allotted compute time remaining: ~29h,50m,8s
None
Created model:  excellent_reindeer
Created model:  prehistoric_adder
Created model:  magenta_inchworm
Created model:  strange_wombat
Created model:  chubby_coyote
Created model:  large_chachalaca
Created model:  important_bear
Created model:  fuzzy_potoo
Created model:  mighty_ara
Created model:  perky_swan
Created model:  nimble_tench
Created model:  orchid_wombat
Created model:  sensible_marmoset
Created model:  meek_shrew
Created model:  tested_pogona
Created model:  vivacious_prawn
Created model:  masked_nyala
Created model:  excellent_salmon
Created model:  large_marten
Created model:  pastel_griffin
[2K[2Kchubby_coyote
[31m[EVAL] Best accuracy:17.03333282470703[0m
[2K[2Kexcellent_reindeer
[31m[EVAL] Best accuracy:9.766666412353516[0m
[2K[2Kexcellent_salmon
[31m[EVAL] Best accuracy:9.59999942779541[0m
[2K[2Kfuzzy_potoo
[31m[EVAL] Best accuracy:16.566665649414062[0m
[2K[2Kimportant_bear
[31m[EVAL] Best accuracy:10.666666984558105[0m
[2K[2Klarge_chachalaca
[31m[EVAL] Best accuracy:10.699999809265137[0m
[2K[2Klarge_marten
[31m[EVAL] Best accuracy:14.300000190734863[0m
[2K[2Kmagenta_inchworm
[31m[EVAL] Best accuracy:9.466666221618652[0m
[2K[2Kmasked_nyala
[31m[EVAL] Best accuracy:11.133333206176758[0m
[2K[2Kmeek_shrew
[31m[EVAL] Best accuracy:18.866666793823242[0m
[2K[2Kmighty_ara
[31m[EVAL] Best accuracy:17.566665649414062[0m
[2K[2Knimble_tench
[31m[EVAL] Best accuracy:9.766666412353516[0m
[2K[2Korchid_wombat
[31m[EVAL] Best accuracy:18.5[0m
[2K[2Kpastel_griffin
[31m[EVAL] Best accuracy:18.83333396911621[0m
[2K[2Kperky_swan
[31m[EVAL] Best accuracy:13.09999942779541[0m
[2K[2Kprehistoric_adder
[31m[EVAL] Best accuracy:18.366666793823242[0m
[2K[2Ksensible_marmoset
[31m[EVAL] Best accuracy:13.966666221618652[0m
[2K[2Kstrange_wombat
[31m[EVAL] Best accuracy:15.866666793823242[0m
[2K[2Ktested_pogona
[31m[EVAL] Best accuracy:17.700000762939453[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 8057.694140434265
ic| self.metadata["time_remaining"]: 107408.82038331032
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvivacious_prawn
[31m[EVAL] Best accuracy:17.433332443237305[0m
['excellent_reindeer', 'prehistoric_adder', 'magenta_inchworm', 'strange_wombat', 'chubby_coyote', 'large_chachalaca', 'important_bear', 'fuzzy_potoo', 'mighty_ara', 'perky_swan', 'nimble_tench', 'orchid_wombat', 'sensible_marmoset', 'meek_shrew', 'tested_pogona', 'vivacious_prawn', 'masked_nyala', 'excellent_salmon', 'large_marten', 'pastel_griffin', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 18.87
Child: [28.0, 104, 2.7, 14]
Old_chrom: [32.0, 96, 2.6999999999999975, 12]
Diff: 0.07577840227559193
[36.0, 96, 2.6500000000000004, 15]
Child: [36.0, 96, 2.6500000000000004, 15]
Old_chrom: [24.0, 96, 2.6500000000000004, 13]
Diff: 0.09821428571428571
[36.0, 88, 2.7, 14]
Child: [44.0, 104, 2.5, 12]
Old_chrom: [40.0, 104, 2.45, 11]
Diff: 0.09932438244955943
[52.0, 112, 2.5, 11]
Child: [48.0, 112, 2.5, 11]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.020833333333333332
[56.0, 104, 2.5, 10]
Child: [56.0, 104, 2.5, 10]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.05792124542124542
[56.0, 112, 2.5, 9]
Child: [56.0, 112, 2.5, 9]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.05654761904761904
[56.0, 104, 2.45, 8]
Child: [60.0, 112, 2.3000000000000003, 11]
Old_chrom: [64.0, 120, 2.299999999999999, 9]
Diff: 0.0757783981759059
[68.0, 104, 2.2500000000000004, 10]
Child: [68.0, 104, 2.2500000000000004, 10]
Old_chrom: [56.0, 104, 2.249999999999999, 12]
Diff: 0.09821429561180334
[68.0, 96, 2.2000000000000006, 10]
Child: [40.0, 120, 2.549999999999998, 13]
Old_chrom: [48.0, 112, 2.5500000000000003, 13]
Diff: 0.0608974486750762
[48.0, 128, 2.549999999999998, 12]
Child: [48.0, 128, 2.549999999999998, 12]
Old_chrom: [48.0, 112, 2.5500000000000003, 13]
Diff: 0.05631869409632163
[48.0, 120, 2.549999999999998, 13]
Child: [48.0, 120, 2.549999999999998, 13]
Old_chrom: [48.0, 112, 2.5500000000000003, 13]
Diff: 0.01923078200840954
[56.0, 128, 2.549999999999998, 12]
Child: [56.0, 128, 2.549999999999998, 12]
Old_chrom: [48.0, 112, 2.5500000000000003, 13]
Diff: 0.09798536076298828
[56.0, 128, 2.4999999999999982, 11]
Child: [64.0, 88, 2.549999999999998, 9]
Old_chrom: [64.0, 64, 2.549999999999998, 8]
Diff: 0.07554945054945056
[56.0, 80, 2.4999999999999982, 8]
Child: [32.0, 120, 2.849999999999997, 12]
Old_chrom: [40.0, 120, 2.849999999999997, 14]
Diff: 0.07738095238095238
[24.0, 120, 2.799999999999997, 13]
Child: [24.0, 120, 2.799999999999997, 13]
Old_chrom: [36.0, 112, 2.8000000000000003, 13]
Diff: 0.08173078434947713
[16.0, 128, 2.849999999999997, 13]
Child: [64.0, 120, 2.6999999999999975, 12]
Old_chrom: [56.0, 96, 2.6999999999999975, 12]
Diff: 0.09935897435897437
[64.0, 112, 2.6999999999999975, 11]
Child: [64.0, 104, 2.249999999999999, 9]
Old_chrom: [56.0, 104, 2.249999999999999, 12]
Diff: 0.09523809523809523
[64.0, 104, 2.299999999999999, 9]
Child: [40.0, 120, 2.299999999999999, 14]
Old_chrom: [40.0, 120, 2.249999999999999, 12]
Diff: 0.09634819197336895
[48.0, 120, 2.299999999999999, 14]
Created model:  quixotic_zebu
Created model:  arcane_spider
Created model:  cyber_turkey
Created model:  secret_chimpanzee
Created model:  naughty_panda
Created model:  vivacious_rabbit
Created model:  attentive_cheetah
Created model:  jade_wolverine
Created model:  benign_dormouse
Created model:  stylish_dingo
Created model:  apricot_lorikeet
Created model:  myrtle_gecko
Created model:  exuberant_zebu
Created model:  burgundy_crane
Created model:  gregarious_moth
Created model:  sociable_junglefowl
Created model:  clay_hornet
Created model:  gifted_starfish
Created model:  literate_cuckoo
Created model:  elegant_shark
[2K[2Kapricot_lorikeet
[31m[EVAL] Best accuracy:16.566665649414062[0m
[2K[2Karcane_spider
[31m[EVAL] Best accuracy:20.866666793823242[0m
[2K[2Kattentive_cheetah
[31m[EVAL] Best accuracy:9.199999809265137[0m
[2K[2Kbenign_dormouse
[31m[EVAL] Best accuracy:15.733333587646484[0m
[2K[2Kburgundy_crane
[31m[EVAL] Best accuracy:13.5[0m
[2K[2Kclay_hornet
[31m[EVAL] Best accuracy:15.266666412353516[0m
[2K[2Kcyber_turkey
[31m[EVAL] Best accuracy:18.0[0m
[2K[2Kelegant_shark
[31m[EVAL] Best accuracy:11.233333587646484[0m
[2K[2Kexuberant_zebu
[31m[EVAL] Best accuracy:18.633333206176758[0m
[2K[2Kgifted_starfish
[31m[EVAL] Best accuracy:19.19999885559082[0m
[2K[2Kgregarious_moth
[31m[EVAL] Best accuracy:20.866666793823242[0m
[2K[2Kjade_wolverine
[31m[EVAL] Best accuracy:19.866666793823242[0m
[2K[2Kliterate_cuckoo
[31m[EVAL] Best accuracy:18.866666793823242[0m
[2K[2Kmyrtle_gecko
[31m[EVAL] Best accuracy:18.69999885559082[0m
[2K[2Knaughty_panda
[31m[EVAL] Best accuracy:17.566665649414062[0m
[2K[2Kquixotic_zebu
[31m[EVAL] Best accuracy:15.899999618530273[0m
[2K[2Ksecret_chimpanzee
[31m[EVAL] Best accuracy:14.5[0m
[2K[2Ksociable_junglefowl
[31m[EVAL] Best accuracy:9.733333587646484[0m
[2K[2Kstylish_dingo
[31m[EVAL] Best accuracy:16.299999237060547[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 15987.439443588257
ic| self.metadata["time_remaining"]: 107408.82038331032
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 104, 'WA': 48.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvivacious_rabbit
[31m[EVAL] Best accuracy:7.8333330154418945[0m
['parents.csv', 'quixotic_zebu', 'arcane_spider', 'cyber_turkey', 'secret_chimpanzee', 'naughty_panda', 'vivacious_rabbit', 'attentive_cheetah', 'jade_wolverine', 'benign_dormouse', 'stylish_dingo', 'apricot_lorikeet', 'myrtle_gecko', 'exuberant_zebu', 'burgundy_crane', 'gregarious_moth', 'sociable_junglefowl', 'clay_hornet', 'gifted_starfish', 'literate_cuckoo', 'elegant_shark', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 20.87
Child: [64.0, 120, 2.4000000000000004, 9]
Old_chrom: [64.0, 120, 2.299999999999999, 9]
Diff: 0.08574929257125519
[64.0, 112, 2.4000000000000004, 9]
Child: [40.0, 120, 2.6500000000000004, 13]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.07849104911622637
[40.0, 112, 2.6000000000000005, 14]
Child: [40.0, 112, 2.6000000000000005, 14]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.05494506065938941
[40.0, 104, 2.6000000000000005, 14]
Child: [40.0, 104, 2.6000000000000005, 14]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.07417582989015864
[32.0, 104, 2.6500000000000004, 14]
Child: [32.0, 104, 2.6500000000000004, 14]
Old_chrom: [32.0, 88, 2.6499999999999977, 13]
Diff: 0.05631869531588498
[40.0, 112, 2.6000000000000005, 14]
Child: [40.0, 112, 2.6000000000000005, 14]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.05494506065938941
[48.0, 120, 2.6500000000000004, 13]
Child: [44.0, 112, 2.45, 12]
Old_chrom: [44.0, 112, 2.35, 12]
Diff: 0.0857492925712546
[44.0, 120, 2.4000000000000004, 12]
Child: [48.0, 104, 2.5500000000000003, 11]
Old_chrom: [48.0, 88, 2.549999999999998, 10]
Diff: 0.05631869409632163
[56.0, 96, 2.5500000000000003, 10]
Child: [56.0, 96, 2.5500000000000003, 10]
Old_chrom: [48.0, 88, 2.549999999999998, 10]
Diff: 0.0608974486750762
[48.0, 104, 2.6, 11]
Child: [48.0, 104, 2.6, 11]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.09798534798534797
[40.0, 96, 2.6, 10]
Child: [28.0, 96, 2.5500000000000003, 14]
Old_chrom: [16.0, 88, 2.549999999999998, 13]
Diff: 0.0995879248655524
[20.0, 96, 2.5000000000000004, 13]
Child: [64.0, 120, 2.299999999999999, 8]
Old_chrom: [64.0, 120, 2.299999999999999, 9]
Diff: 0.017857142857142856
[72.0, 128, 2.3499999999999988, np.int64(8)]
Child: [24.0, 112, 2.849999999999997, 15]
Old_chrom: [16.0, 112, 2.849999999999997, 16]
Diff: 0.05952380952380952
[24.0, 104, 2.799999999999997, 15]
Child: [24.0, 104, 2.799999999999997, 15]
Old_chrom: [24.0, 104, 2.75, 15]
Diff: 0.060633906259081626
[16.0, 104, 2.7499999999999973, 16]
Child: [16.0, 104, 2.7499999999999973, 16]
Old_chrom: [24.0, 104, 2.75, 15]
Diff: 0.05952382352101318
[np.int64(16), 96, 2.6999999999999975, 16]
Child: [32.0, 112, 2.849999999999997, 13]
Old_chrom: [40.0, 120, 2.849999999999997, 14]
Diff: 0.07875457875457875
[32.0, 104, 2.849999999999997, 13]
Child: [32.0, 104, 2.849999999999997, 13]
Old_chrom: [40.0, 120, 2.849999999999997, 14]
Diff: 0.09798534798534797
[40.0, 112, 2.899999999999997, 13]
Child: [64.0, 96, 2.3999999999999986, 9]
Old_chrom: [64.0, 112, 2.4000000000000004, 9]
Diff: 0.03846154989020739
[56.0, 88, 2.3999999999999986, 9]
Child: [56.0, 88, 2.3999999999999986, 9]
Old_chrom: [64.0, 112, 2.4000000000000004, 9]
Diff: 0.0993589857876433
[56.0, 88, 2.3999999999999986, 8]
Child: [32.0, 88, 2.3999999999999986, 15]
Old_chrom: [24.0, 96, 2.3999999999999986, 15]
Diff: 0.060897435897435896
[24.0, 96, 2.4499999999999984, 16]
Child: [24.0, 96, 2.4499999999999984, 16]
Old_chrom: [24.0, 96, 2.3999999999999986, 15]
Diff: 0.07849104911622609
[24.0, 96, 2.3999999999999986, 17]
Child: [24.0, 96, 2.3999999999999986, 17]
Old_chrom: [24.0, 96, 2.3999999999999986, 15]
Diff: 0.03571428571428571
[24.0, 88, 2.3999999999999986, 16]
Child: [24.0, 88, 2.3999999999999986, 16]
Old_chrom: [24.0, 96, 2.3999999999999986, 15]
Diff: 0.03708791208791209
[32.0, 88, 2.3499999999999988, 16]
Created model:  silver_puffin
Created model:  wonderful_bug
Created model:  sociable_clam
Created model:  maize_pillbug
Created model:  evasive_mustang
Created model:  jasper_goldfish
Created model:  polite_giraffe
Created model:  adorable_porpoise
Created model:  monumental_sheep
Created model:  delicate_jackal
Created model:  paper_sambar
Created model:  important_badger
Created model:  little_wren
Created model:  passionate_mouse
Created model:  miniature_trout
Created model:  silver_piculet
Created model:  wondrous_woodpecker
Created model:  auspicious_ostrich
Created model:  tangerine_elk
Created model:  lean_quoll
[2K[2Kadorable_porpoise
[31m[EVAL] Best accuracy:18.433332443237305[0m
[2K[2Kauspicious_ostrich
[31m[EVAL] Best accuracy:17.53333282470703[0m
[2K[2Kdelicate_jackal
[31m[EVAL] Best accuracy:17.83333396911621[0m
[2K[2Kevasive_mustang
[31m[EVAL] Best accuracy:17.399999618530273[0m
[2K[2Kimportant_badger
[31m[EVAL] Best accuracy:19.899999618530273[0m
[2K[2Kjasper_goldfish
[31m[EVAL] Best accuracy:13.766666412353516[0m
[2K[2Klean_quoll
[31m[EVAL] Best accuracy:19.0[0m
[2K[2Klittle_wren
[31m[EVAL] Best accuracy:17.100000381469727[0m
[2K[2Kmaize_pillbug
[31m[EVAL] Best accuracy:16.299999237060547[0m
[2K[2Kminiature_trout
[31m[EVAL] Best accuracy:14.866666793823242[0m
[2K[2Kmonumental_sheep
[31m[EVAL] Best accuracy:15.899999618530273[0m
[2K[2Kpaper_sambar
[31m[EVAL] Best accuracy:16.33333396911621[0m
[2K[2Kpassionate_mouse
[31m[EVAL] Best accuracy:13.699999809265137[0m
[2K[2Kpolite_giraffe
[31m[EVAL] Best accuracy:9.866666793823242[0m
[2K[2Ksilver_piculet
[31m[EVAL] Best accuracy:19.5[0m
[2K[2Ksilver_puffin
[31m[EVAL] Best accuracy:19.566665649414062[0m
[2K[2Ksociable_clam
[31m[EVAL] Best accuracy:16.600000381469727[0m
[2K[2Ktangerine_elk
[31m[EVAL] Best accuracy:10.899999618530273[0m
[2K[2Kwonderful_bug
[31m[EVAL] Best accuracy:11.166666984558105[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 104, 'WA': 48.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 104, 'WA': 48.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 104, 'WA': 48.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 24307.070981025696
ic| self.metadata["time_remaining"]: 107408.82038331032
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 46.38,
               'codename': 'in16',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_3/tests_in16_23_10_2024_09_39/Generation_3/wondrous_woodpecker',
               'input_shape': [148700, 3, 16, 16],
               'mode': 'NAS',
               'num_classes': 120,
               'test_type': 'T1_Proxy/seed_3',
               'time_remaining': 83101.02383089066,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| unique_values: array([0., 1.], dtype=float32)
ic| C: 20
ic| H: 20
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f50641a3af0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f50641a2a70>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f50641a30a0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f50641a2530>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f50081bc4f0>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f4f95fdef20>,
                 ToTensor(),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f50641a16c0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['just_gecko',
                  'tangerine_echidna',
                  'olive_tuatara',
                  'gregarious_crab',
                  'convivial_ibex',
                  'crouching_ibis',
                  'curly_pigeon',
                  'fantastic_coati',
                  'able_flamingo',
                  'impossible_petrel',
                  'economic_junglefowl',
                  'tasteful_civet',
                  'fluorescent_alligator',
                  'crystal_chowchow',
                  'vigilant_sidewinder',
                  'thankful_turkey',
                  'tuscan_squirrel',
                  'enormous_capuchin',
                  'devout_orangutan',
                  'passionate_quoll']
ic| params: [48.0, 96, 2.7499999999999973, 11, 8]
ic| params: [24.0, 32, 2.849999999999997, 22, 8]
ic| params: [32.0, 96, 2.249999999999999, 10, 8]
ic| params: [48.0, 112, 2.05, 13, 8]
ic| params: [40.0, 80, 2.05, 22, 8]
ic| params: [32.0, 120, 2.599999999999998, 19, 8]
ic| params: [64.0, 120, 2.0999999999999996, 19, 8]
ic| params: [64.0, 112, 2.1499999999999995, 21, 8]
ic| params: [40.0, 56, 2.1999999999999993, 20, 8]
ic| params: [16.0, 120, 2.3499999999999988, 19, 8]
ic| params: [40.0, 72, 2.1499999999999995, 16, 8]
ic| params: [56.0, 72, 2.4999999999999982, 8, 8]
ic| params: [64.0, 104, 2.6499999999999977, 15, 8]
ic| params: [16.0, 104, 2.4499999999999984, 13, 8]
ic| params: [48.0, 56, 2.6499999999999977, 11, 8]
ic| params: [32.0, 112, 2.599999999999998, 10, 8]
ic| params: [24.0, 32, 2.3499999999999988, 8, 8]
ic| params: [40.0, 80, 2.299999999999999, 18, 8]
ic| params: [16.0, 88, 2.299999999999999, 15, 8]
ic| params: [16.0, 120, 2.05, 14, 8]
ic| individuals: ['just_gecko',
                  'tangerine_echidna',
                  'olive_tuatara',
                  'gregarious_crab',
                  'convivial_ibex',
                  'crouching_ibis',
                  'curly_pigeon',
                  'fantastic_coati',
                  'able_flamingo',
                  'impossible_petrel',
                  'economic_junglefowl',
                  'tasteful_civet',
                  'fluorescent_alligator',
                  'crystal_chowchow',
                  'vigilant_sidewinder',
                  'thankful_turkey',
                  'tuscan_squirrel',
                  'enormous_capuchin',
                  'devout_orangutan',
                  'passionate_quoll']
ic| params_dict: {'able_flamingo': [40.0, 56, 2.1999999999999993, 20, 8],
                  'convivial_ibex': [40.0, 80, 2.05, 22, 8],
                  'crouching_ibis': [32.0, 120, 2.599999999999998, 19, 8],
                  'crystal_chowchow': [16.0, 104, 2.4499999999999984, 13, 8],
                  'curly_pigeon': [64.0, 120, 2.0999999999999996, 19, 8],
                  'devout_orangutan': [16.0, 88, 2.299999999999999, 15, 8],
                  'economic_junglefowl': [40.0, 72, 2.1499999999999995, 16, 8],
                  'enormous_capuchin': [40.0, 80, 2.299999999999999, 18, 8],
                  'fantastic_coati': [64.0, 112, 2.1499999999999995, 21, 8],
                  'fluorescent_alligator': [64.0, 104, 2.6499999999999977, 15, 8],
                  'gregarious_crab': [48.0, 112, 2.05, 13, 8],
                  'impossible_petrel': [16.0, 120, 2.3499999999999988, 19, 8],
                  'just_gecko': [48.0, 96, 2.7499999999999973, 11, 8],
                  'olive_tuatara': [32.0, 96, 2.249999999999999, 10, 8],
                  'passionate_quoll': [16.0, 120, 2.05, 14, 8],
                  'tangerine_echidna': [24.0, 32, 2.849999999999997, 22, 8],
                  'tasteful_civet': [56.0, 72, 2.4999999999999982, 8, 8],
                  'thankful_turkey': [32.0, 112, 2.599999999999998, 10, 8],
                  'tuscan_squirrel': [24.0, 32, 2.3499999999999988, 8, 8],
                  'vigilant_sidewinder': [48.0, 56, 2.6499999999999977, 11, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50641a3af0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50641a2a70>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50641a30a0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50641a2530>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50081bc4f0>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f4f95fdef20>,
                                                ToTensor(),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50641a16c0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 14'
ic| f"selected transform {train_transform}": ('selected transform [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, '
                                              '3.3), value=[0.0], inplace=False), RandomCrop(size=(20, 20), padding=[2, 2, '
                                              '2, 2], pad_if_needed=False, fill=0, padding_mode=constant), '
                                              'RandomHorizontalFlip(p=0.5)]')
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| mode: 'T1'
ic| f"Mode {mode}": 'Mode T1'
ic| get_gpu_memory(0): 41450340352
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 80590.49790620804
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwondrous_woodpecker
[31m[EVAL] Best accuracy:8.0[0m
['parents.csv', 'silver_puffin', 'wonderful_bug', 'sociable_clam', 'maize_pillbug', 'evasive_mustang', 'jasper_goldfish', 'polite_giraffe', 'adorable_porpoise', 'monumental_sheep', 'delicate_jackal', 'paper_sambar', 'important_badger', 'little_wren', 'passionate_mouse', 'miniature_trout', 'silver_piculet', 'wondrous_woodpecker', 'auspicious_ostrich', 'tangerine_elk', 'lean_quoll', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 19.9
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_3/tests_in16_23_10_2024_09_39/Generation_2/arcane_spider/config.yaml

=== Training ===
  Allotted compute time remaining: ~23h,5m,1s
Early stopping at epoch 36
[31m[EVAL] Best accuracy:31.333332061767578[0m

=== Predicting ===
  Allotted compute time remaining: ~22h,30m,20s

========== Dataset   Volga    =============================================
  Metadata:
   - input_shape         : [50000, 20, 20, 20]
   - codename            : Volga
   - benchmark           : 71.35
   - num_classes         : 7
   - time_remaining      : 81017.24562263489

=== Processing Data ===
  Allotted compute time remaining: ~22h,30m,17s

=== Performing NAS ===
  Allotted compute time remaining: ~22h,23m,10s
spawn
Created model:  precise_orca
Created model:  finicky_raven
Created model:  artichoke_raccoon
Created model:  fortunate_tortoise
Created model:  smart_dog
Created model:  lime_termite
Created model:  interesting_tortoise
Created model:  sexy_crab
Created model:  jasmine_pheasant
Created model:  sly_oarfish
Created model:  imposing_cricket
Created model:  energetic_seagull
Created model:  asparagus_elephant
Created model:  cornflower_dragon
Created model:  tested_rattlesnake
Created model:  innocent_boa
Created model:  festive_mouflon
Created model:  hilarious_lizard
Created model:  nano_snake
Created model:  wandering_booby
[2K[2Kartichoke_raccoon
[31m[EVAL] Best accuracy:44.5099983215332[0m
[2K[2Kasparagus_elephant
[31m[EVAL] Best accuracy:64.20999908447266[0m
[2K[2Kcornflower_dragon
[31m[EVAL] Best accuracy:44.5[0m
[2K[2Kenergetic_seagull
[31m[EVAL] Best accuracy:66.68000030517578[0m
[2K[2Kfestive_mouflon
[31m[EVAL] Best accuracy:58.84000015258789[0m
[2K[2Kfinicky_raven
[31m[EVAL] Best accuracy:60.68000030517578[0m
[2K[2Kfortunate_tortoise
[31m[EVAL] Best accuracy:54.90999984741211[0m
[2K[2Khilarious_lizard
[31m[EVAL] Best accuracy:56.87999725341797[0m
[2K[2Kimposing_cricket
[31m[EVAL] Best accuracy:54.82999801635742[0m
[2K[2Kinnocent_boa
[31m[EVAL] Best accuracy:59.48999786376953[0m
[2K[2Kinteresting_tortoise
[31m[EVAL] Best accuracy:64.81999969482422[0m
[2K[2Kjasmine_pheasant
[31m[EVAL] Best accuracy:63.39999771118164[0m
[2K[2Klime_termite
[31m[EVAL] Best accuracy:55.13999938964844[0m
[2K[2Knano_snake
[31m[EVAL] Best accuracy:42.38999938964844[0m
[2K[2Kprecise_orca
[31m[EVAL] Best accuracy:52.189998626708984[0m
[2K[2Ksexy_crab
[31m[EVAL] Best accuracy:61.41999816894531[0m
[2K[2Ksly_oarfish
[31m[EVAL] Best accuracy:47.28999710083008[0m
[2K[2Ksmart_dog
[31m[EVAL] Best accuracy:51.7599983215332[0m
[2K[2Ktested_rattlesnake
[31m[EVAL] Best accuracy:58.75[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2917.71164226532
ic| self.metadata["time_remaining"]: 80590.49790620804
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 48, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwandering_booby
[31m[EVAL] Best accuracy:61.349998474121094[0m
['precise_orca', 'finicky_raven', 'artichoke_raccoon', 'fortunate_tortoise', 'smart_dog', 'lime_termite', 'interesting_tortoise', 'sexy_crab', 'jasmine_pheasant', 'sly_oarfish', 'imposing_cricket', 'energetic_seagull', 'asparagus_elephant', 'cornflower_dragon', 'tested_rattlesnake', 'innocent_boa', 'festive_mouflon', 'hilarious_lizard', 'nano_snake', 'wandering_booby', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 66.68
Child: [20.0, 112, 2.7, 9]
Old_chrom: [24.0, 120, 2.6999999999999975, 9]
Diff: 0.04006411656130622
[np.int64(16), 120, 2.6500000000000004, 8]
Child: [28.0, 104, 2.7, 10]
Old_chrom: [24.0, 120, 2.6999999999999975, 9]
Diff: 0.0771520286492183
[20.0, 112, 2.6500000000000004, 9]
Child: [20.0, 112, 2.6500000000000004, 9]
Old_chrom: [np.int64(16), 120, 2.6500000000000004, 8]
Diff: 0.05792124542124542
[np.int64(16), 112, 2.6000000000000005, 8]
Child: [np.int64(16), 112, 2.6000000000000005, 8]
Old_chrom: [np.int64(16), 120, 2.6500000000000004, 8]
Diff: 0.07986467548985247
[np.int64(16), 112, 2.5500000000000007, 9]
Child: [24.0, 88, 2.7, 10]
Old_chrom: [24.0, 120, 2.6999999999999975, 9]
Diff: 0.09478023377742345
[32.0, 80, 2.75, 10]
Child: [16.0, 88, 2.4000000000000004, 10]
Old_chrom: [20.0, 96, 2.4000000000000004, 10]
Diff: 0.04006410256410256
[24.0, 96, 2.4000000000000004, 10]
Child: [24.0, 96, 2.4000000000000004, 10]
Old_chrom: [20.0, 96, 2.4000000000000004, 10]
Diff: 0.020833333333333332
[32.0, 104, 2.4000000000000004, 9]
Child: [32.0, 104, 2.4000000000000004, 9]
Old_chrom: [20.0, 96, 2.4000000000000004, 10]
Diff: 0.0995879120879121
[32.0, 112, 2.4000000000000004, 9]
Child: [16.0, 96, 2.45, 9]
Old_chrom: [20.0, 96, 2.4000000000000004, 10]
Diff: 0.09932438244955943
[np.int64(16), 88, 2.5, 8]
Child: [24.0, 80, 2.4000000000000004, 11]
Old_chrom: [20.0, 96, 2.4000000000000004, 10]
Diff: 0.07715201465201466
[24.0, 80, 2.45, 12]
Child: [24.0, 88, 2.4000000000000004, 9]
Old_chrom: [20.0, 96, 2.4000000000000004, 10]
Diff: 0.05792124542124542
[16.0, 88, 2.4000000000000004, 8]
Child: [16.0, 88, 2.4000000000000004, 8]
Old_chrom: [20.0, 96, 2.4000000000000004, 10]
Diff: 0.07577838827838827
[16.0, 80, 2.45, 9]
Child: [16.0, 80, 2.45, 9]
Old_chrom: [20.0, 112, 2.45, 9]
Diff: 0.09775641025641026
[24.0, 80, 2.45, 10]
Child: [16.0, 88, 2.15, 10]
Old_chrom: [16.0, 96, 2.1499999999999995, 8]
Diff: 0.05494506065938941
[np.int64(16), 96, 2.1999999999999997, 9]
Child: [np.int64(16), 96, 2.1999999999999997, 9]
Old_chrom: [16.0, 96, 2.1499999999999995, 8]
Diff: 0.07849104911622637
[np.int64(16), 96, 2.15, 9]
Child: [np.int64(16), 96, 2.15, 9]
Old_chrom: [16.0, 96, 2.1499999999999995, 8]
Diff: 0.01785714857147732
[np.int64(16), 96, 2.15, 8]
Child: [np.int64(16), 96, 2.15, 8]
Old_chrom: [16.0, 96, 2.1499999999999995, 8]
Diff: 5.714334464426129e-09
[np.int64(16), 88, 2.15, np.int64(8)]
Child: [np.int64(16), 88, 2.15, np.int64(8)]
Old_chrom: [16.0, 96, 2.1499999999999995, 8]
Diff: 0.019230774945103696
[np.int64(24), 80, 2.1999999999999997, np.int64(8)]
Child: [24.0, 96, 2.6999999999999975, 9]
Old_chrom: [24.0, 120, 2.6999999999999975, 9]
Diff: 0.057692307692307696
[32.0, 104, 2.6999999999999975, 10]
Child: [32.0, 104, 2.6999999999999975, 10]
Old_chrom: [24.0, 120, 2.6999999999999975, 9]
Diff: 0.09798534798534797
[40.0, 104, 2.6999999999999975, 9]
Child: [32.0, 120, 2.6999999999999975, 10]
Old_chrom: [24.0, 120, 2.6999999999999975, 9]
Diff: 0.05952380952380952
[40.0, 120, 2.6999999999999975, 10]
Child: [40.0, 120, 2.6999999999999975, 10]
Old_chrom: [40.0, 104, 2.6999999999999975, 9]
Diff: 0.05631868131868132
[40.0, 128, 2.6499999999999977, 10]
Child: [16.0, 72, 2.6999999999999975, 9]
Old_chrom: [16.0, 96, 2.6999999999999975, 9]
Diff: 0.057692307692307696
[np.int64(16), 64, 2.6499999999999977, 8]
Child: [24.0, 96, 2.1499999999999995, 9]
Old_chrom: [16.0, 96, 2.1499999999999995, 8]
Diff: 0.05952380952380952
[32.0, 88, 2.1499999999999995, 10]
Child: [16.0, 96, 2.6499999999999977, 10]
Old_chrom: [16.0, 96, 2.6999999999999975, 9]
Diff: 0.07849104911622609
[24.0, 88, 2.6999999999999975, 10]
Child: [24.0, 88, 2.6999999999999975, 10]
Old_chrom: [24.0, 120, 2.6999999999999975, 9]
Diff: 0.09478021978021978
[16.0, 80, 2.7499999999999973, 9]
Child: [16.0, 96, 2.0999999999999996, 11]
Old_chrom: [16.0, 72, 2.0999999999999996, 11]
Diff: 0.057692307692307696
[16.0, 96, 2.0999999999999996, 10]
Child: [16.0, 96, 2.0999999999999996, 10]
Old_chrom: [16.0, 72, 2.0999999999999996, 11]
Diff: 0.07554945054945056
[16.0, 96, 2.1499999999999995, 9]
Child: [16.0, 96, 2.1499999999999995, 9]
Old_chrom: [16.0, 96, 2.1499999999999995, 8]
Diff: 0.017857142857142856
[24.0, 96, 2.0999999999999996, 8]
Child: [16.0, 96, 2.1499999999999995, 9]
Old_chrom: [16.0, 96, 2.1499999999999995, 8]
Diff: 0.017857142857142856
[16.0, 96, 2.1499999999999995, 9]
Child: [16.0, 96, 2.1499999999999995, 9]
Old_chrom: [16.0, 96, 2.1499999999999995, 8]
Diff: 0.017857142857142856
[np.int64(16), 88, 2.0999999999999996, 9]
Child: [np.int64(16), 88, 2.0999999999999996, 9]
Old_chrom: [16.0, 72, 2.0999999999999996, 11]
Diff: 0.07417582417582418
[np.int64(24), 88, 2.0999999999999996, 10]
Child: [np.int64(24), 88, 2.0999999999999996, 10]
Old_chrom: [16.0, 72, 2.0999999999999996, 11]
Diff: 0.09798534798534797
[np.int64(24), 80, 2.0999999999999996, 10]
Child: [16.0, 72, 2.6499999999999977, 10]
Old_chrom: [np.int64(16), 64, 2.6499999999999977, 8]
Diff: 0.054945054945054944
[16.0, 72, 2.6999999999999975, 11]
Child: [16.0, 72, 2.6999999999999975, 11]
Old_chrom: [16.0, 96, 2.6999999999999975, 9]
Diff: 0.09340659340659341
[np.int64(16), 72, 2.6999999999999975, 11]
Child: [32.0, 96, 2.1499999999999995, 10]
Old_chrom: [32.0, 88, 2.1499999999999995, 10]
Diff: 0.019230769230769232
[24.0, 96, 2.1499999999999995, 10]
Child: [24.0, 96, 2.1499999999999995, 10]
Old_chrom: [16.0, 96, 2.1499999999999995, 8]
Diff: 0.07738095238095238
[24.0, 104, 2.0999999999999996, 11]
Child: [24.0, 104, 2.0999999999999996, 11]
Old_chrom: [24.0, 96, 2.0999999999999996, 8]
Diff: 0.0728021978021978
[16.0, 96, 2.05, 12]
Child: [16.0, 72, 2.0999999999999996, 8]
Old_chrom: [16.0, 72, 2.0999999999999996, 11]
Diff: 0.05357142857142857
[24.0, 64, 2.1499999999999995, np.int64(8)]
Child: [24.0, 64, 2.1499999999999995, np.int64(8)]
Old_chrom: [np.int64(24), 80, 2.1999999999999997, np.int64(8)]
Diff: 0.09909544472062198
[16.0, 56, 2.0999999999999996, np.int64(8)]
Created model:  sparkling_hog
Created model:  cinnamon_markhor
Created model:  awesome_quail
Created model:  strong_gorilla
Created model:  delectable_oyster
Created model:  myrtle_orca
Created model:  coral_impala
Created model:  flashy_beluga
Created model:  striped_avocet
Created model:  pistachio_wrasse
Created model:  asparagus_penguin
Created model:  succinct_trout
Created model:  didactic_seagull
Created model:  gigantic_corgi
Created model:  cherry_grasshopper
Created model:  cherubic_muskrat
Created model:  strong_mackerel
Created model:  wealthy_warthog
Created model:  meticulous_mongoose
Created model:  cryptic_marten
[2K[2Kasparagus_penguin
[31m[EVAL] Best accuracy:60.8599967956543[0m
[2K[2Kawesome_quail
[31m[EVAL] Best accuracy:51.14999771118164[0m
[2K[2Kcherry_grasshopper
[31m[EVAL] Best accuracy:58.29999923706055[0m
[2K[2Kcherubic_muskrat
[31m[EVAL] Best accuracy:56.7599983215332[0m
[2K[2Kcinnamon_markhor
[31m[EVAL] Best accuracy:52.3599967956543[0m
[2K[2Kcoral_impala
[31m[EVAL] Best accuracy:54.94999694824219[0m
[2K[2Kcryptic_marten
[31m[EVAL] Best accuracy:45.57999801635742[0m
[2K[2Kdelectable_oyster
[31m[EVAL] Best accuracy:51.03999710083008[0m
[2K[2Kdidactic_seagull
[31m[EVAL] Best accuracy:59.3599967956543[0m
[2K[2Kflashy_beluga
[31m[EVAL] Best accuracy:49.69999694824219[0m
[2K[2Kgigantic_corgi
[31m[EVAL] Best accuracy:47.57999801635742[0m
[2K[2Kmeticulous_mongoose
[31m[EVAL] Best accuracy:57.40999984741211[0m
[2K[2Kmyrtle_orca
[31m[EVAL] Best accuracy:52.05999755859375[0m
[2K[2Kpistachio_wrasse
[31m[EVAL] Best accuracy:59.599998474121094[0m
[2K[2Ksparkling_hog
[31m[EVAL] Best accuracy:61.65999984741211[0m
[2K[2Kstriped_avocet
[31m[EVAL] Best accuracy:53.93000030517578[0m
[2K[2Kstrong_gorilla
[31m[EVAL] Best accuracy:47.40999984741211[0m
[2K[2Kstrong_mackerel
[31m[EVAL] Best accuracy:39.09000015258789[0m
[2K[2Ksuccinct_trout
[31m[EVAL] Best accuracy:61.0[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 48, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 48, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 48, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 5806.794701099396
ic| self.metadata["time_remaining"]: 80590.49790620804
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 48, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 48, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 48, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 24.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwealthy_warthog
[31m[EVAL] Best accuracy:60.0[0m
['parents.csv', 'sparkling_hog', 'cinnamon_markhor', 'awesome_quail', 'strong_gorilla', 'delectable_oyster', 'myrtle_orca', 'coral_impala', 'flashy_beluga', 'striped_avocet', 'pistachio_wrasse', 'asparagus_penguin', 'succinct_trout', 'didactic_seagull', 'gigantic_corgi', 'cherry_grasshopper', 'cherubic_muskrat', 'strong_mackerel', 'wealthy_warthog', 'meticulous_mongoose', 'cryptic_marten', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 61.66
Child: [48.0, 112, 2.7, 14]
Old_chrom: [48.0, 104, 2.6499999999999977, 15]
Diff: 0.09772181834699695
[40.0, 104, 2.75, 13]
Child: [24.0, 88, 2.6, 16]
Old_chrom: [32.0, 112, 2.599999999999998, 16]
Diff: 0.09935898713661467
[24.0, 80, 2.65, 15]
Child: [44.0, 96, 2.5500000000000003, 13]
Old_chrom: [40.0, 120, 2.549999999999998, 13]
Diff: 0.07852565380328133
[36.0, 88, 2.6, 12]
Child: [40.0, 88, 2.7, 14]
Old_chrom: [48.0, 104, 2.6999999999999975, 15]
Diff: 0.09798536198255164
[48.0, 80, 2.7, 13]
Child: [60.0, 88, 2.6500000000000004, 11]
Old_chrom: [56.0, 64, 2.6499999999999977, 12]
Diff: 0.09638279787998755
[60.0, 88, 2.6000000000000005, 10]
Child: [16.0, 56, 2.5, 12]
Old_chrom: [24.0, 80, 2.5, 12]
Diff: 0.09935897435897437
[16.0, 48, 2.45, 11]
Child: [36.0, 72, 2.5500000000000003, 13]
Old_chrom: [40.0, 80, 2.5500000000000003, 10]
Diff: 0.09363553113553114
[28.0, 72, 2.5000000000000004, 13]
Child: [32.0, 72, 2.4999999999999982, 16]
Old_chrom: [32.0, 72, 2.549999999999998, 18]
Diff: 0.09634819197336895
[32.0, 80, 2.4499999999999984, 15]
Child: [64.0, 72, 2.4999999999999982, 12]
Old_chrom: [64.0, 72, 2.4999999999999982, 15]
Diff: 0.05357142857142857
[56.0, 72, 2.4499999999999984, 12]
Child: [56.0, 72, 2.4499999999999984, 12]
Old_chrom: [56.0, 72, 2.4999999999999982, 10]
Diff: 0.09634819197336895
[48.0, 64, 2.4499999999999984, 13]
Child: [16.0, 64, 2.3499999999999988, 8]
Old_chrom: [16.0, 48, 2.3499999999999988, 8]
Diff: 0.038461538461538464
[16.0, 56, 2.3999999999999986, 8]
Child: [16.0, 56, 2.3999999999999986, 8]
Old_chrom: [16.0, 48, 2.3499999999999988, 8]
Diff: 0.07986467548985247
[16.0, 48, 2.4499999999999984, 8]
Child: [16.0, 48, 2.4499999999999984, 8]
Old_chrom: [16.0, 48, 2.3499999999999988, 8]
Diff: 0.08574929257125442
[24.0, 56, 2.4499999999999984, 9]
Child: [16.0, 72, 2.4999999999999982, 15]
Old_chrom: [28.0, 72, 2.5000000000000004, 13]
Diff: 0.09821429849192602
[16.0, 72, 2.549999999999998, 16]
Created model:  resilient_robin
Created model:  small_jaybird
Created model:  meticulous_dragonfly
Created model:  ultra_rooster
Created model:  gabby_dalmatian
Created model:  hot_herring
Created model:  little_tamarin
Created model:  massive_lionfish
Created model:  witty_woodpecker
Created model:  exotic_cougar
Created model:  resourceful_aardwark
Created model:  tan_ostrich
Created model:  piquant_gharial
Created model:  archetypal_dormouse
Created model:  spicy_flounder
Created model:  lemon_goshawk
Created model:  therapeutic_limpet
Created model:  encouraging_pillbug
Created model:  acrid_bittern
Created model:  uptight_sidewinder
[2K[2Kacrid_bittern
[31m[EVAL] Best accuracy:47.21999740600586[0m
[2K[2Karchetypal_dormouse
[31m[EVAL] Best accuracy:52.0[0m
[2K[2Kencouraging_pillbug
[31m[EVAL] Best accuracy:51.40999984741211[0m
[2K[2Kexotic_cougar
[31m[EVAL] Best accuracy:60.44999694824219[0m
[2K[2Kgabby_dalmatian
[31m[EVAL] Best accuracy:56.38999938964844[0m
[2K[2Khot_herring
[31m[EVAL] Best accuracy:58.40999984741211[0m
[2K[2Klemon_goshawk
[31m[EVAL] Best accuracy:60.31999969482422[0m
[2K[2Klittle_tamarin
[31m[EVAL] Best accuracy:59.019996643066406[0m
[2K[2Kmassive_lionfish
[31m[EVAL] Best accuracy:56.47999954223633[0m
[2K[2Kmeticulous_dragonfly
[31m[EVAL] Best accuracy:60.959999084472656[0m
[2K[2Kpiquant_gharial
[31m[EVAL] Best accuracy:62.69999694824219[0m
[2K[2Kresilient_robin
[31m[EVAL] Best accuracy:59.04999923706055[0m
[2K[2Kresourceful_aardwark
[31m[EVAL] Best accuracy:60.619998931884766[0m
[2K[2Ksmall_jaybird
[31m[EVAL] Best accuracy:60.47999954223633[0m
[2K[2Kspicy_flounder
[31m[EVAL] Best accuracy:54.28999710083008[0m
[2K[2Ktan_ostrich
[31m[EVAL] Best accuracy:58.78999710083008[0m
[2K[2Ktherapeutic_limpet
[31m[EVAL] Best accuracy:54.959999084472656[0m
[2K[2Kultra_rooster
[31m[EVAL] Best accuracy:59.41999816894531[0m
[2K[2Kuptight_sidewinder
[31m[EVAL] Best accuracy:57.75[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 24.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 24.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 24.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 8637.327909231186
ic| self.metadata["time_remaining"]: 80590.49790620804
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 71.35,
               'codename': 'Volga',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_3/tests_Volga_23_10_2024_17_06/Generation_3/witty_woodpecker',
               'input_shape': [50000, 20, 20, 20],
               'mode': 'NAS',
               'num_classes': 7,
               'test_type': 'T1_Proxy/seed_3',
               'time_remaining': 71952.7486770153,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| unique_values: array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ],
                         dtype=float32)
ic| C: 1
ic| H: 9
ic| PH: 1
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f5003fca4a0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f5003fc8130>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f5003fc8cd0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f5003fc85e0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f5003c3f700>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f4f95fdd690>,
                 ToTensor(),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f4f95fde410>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['vagabond_pegasus',
                  'enormous_toucanet',
                  'devout_ibis',
                  'lively_sawfish',
                  'bouncy_slug',
                  'didactic_otter',
                  'great_ocelot',
                  'meek_cuttlefish',
                  'airborne_cricket',
                  'nostalgic_urchin',
                  'burrowing_viper',
                  'pistachio_centipede',
                  'optimistic_barnacle',
                  'versed_cuttlefish',
                  'quartz_duck',
                  'pistachio_mouflon',
                  'tall_tuatara',
                  'cyan_silkworm',
                  'dazzling_cheetah',
                  'rich_dove']
ic| params: [56.0, 56, 2.3499999999999988, 15, 8]
ic| params: [16.0, 80, 2.6499999999999977, 11, 8]
ic| params: [32.0, 48, 2.899999999999997, 11, 8]
ic| params: [48.0, 96, 2.6999999999999975, 8, 8]
ic| params: [40.0, 120, 2.299999999999999, 15, 8]
ic| params: [40.0, 40, 2.849999999999997, 18, 8]
ic| params: [56.0, 96, 2.4999999999999982, 14, 8]
ic| params: [56.0, 104, 2.1499999999999995, 9, 8]
ic| params: [16.0, 120, 2.05, 13, 8]
ic| params: [56.0, 80, 2.549999999999998, 18, 8]
ic| params: [24.0, 96, 2.6499999999999977, 9, 8]
ic| params: [16.0, 80, 2.849999999999997, 11, 8]
ic| params: [24.0, 120, 2.799999999999997, 21, 8]
ic| params: [32.0, 72, 2.849999999999997, 11, 8]
ic| params: [32.0, 56, 2.249999999999999, 17, 8]
ic| params: [32.0, 56, 2.849999999999997, 11, 8]
ic| params: [56.0, 64, 2.4999999999999982, 18, 8]
ic| params: [64.0, 120, 2.3499999999999988, 10, 8]
ic| params: [16.0, 80, 2.6499999999999977, 21, 8]
ic| params: [24.0, 112, 2.0999999999999996, 13, 8]
ic| individuals: ['vagabond_pegasus',
                  'enormous_toucanet',
                  'devout_ibis',
                  'lively_sawfish',
                  'bouncy_slug',
                  'didactic_otter',
                  'great_ocelot',
                  'meek_cuttlefish',
                  'airborne_cricket',
                  'nostalgic_urchin',
                  'burrowing_viper',
                  'pistachio_centipede',
                  'optimistic_barnacle',
                  'versed_cuttlefish',
                  'quartz_duck',
                  'pistachio_mouflon',
                  'tall_tuatara',
                  'cyan_silkworm',
                  'dazzling_cheetah',
                  'rich_dove']
ic| params_dict: {'airborne_cricket': [16.0, 120, 2.05, 13, 8],
                  'bouncy_slug': [40.0, 120, 2.299999999999999, 15, 8],
                  'burrowing_viper': [24.0, 96, 2.6499999999999977, 9, 8],
                  'cyan_silkworm': [64.0, 120, 2.3499999999999988, 10, 8],
                  'dazzling_cheetah': [16.0, 80, 2.6499999999999977, 21, 8],
                  'devout_ibis': [32.0, 48, 2.899999999999997, 11, 8],
                  'didactic_otter': [40.0, 40, 2.849999999999997, 18, 8],
                  'enormous_toucanet': [16.0, 80, 2.6499999999999977, 11, 8],
                  'great_ocelot': [56.0, 96, 2.4999999999999982, 14, 8],
                  'lively_sawfish': [48.0, 96, 2.6999999999999975, 8, 8],
                  'meek_cuttlefish': [56.0, 104, 2.1499999999999995, 9, 8],
                  'nostalgic_urchin': [56.0, 80, 2.549999999999998, 18, 8],
                  'optimistic_barnacle': [24.0, 120, 2.799999999999997, 21, 8],
                  'pistachio_centipede': [16.0, 80, 2.849999999999997, 11, 8],
                  'pistachio_mouflon': [32.0, 56, 2.849999999999997, 11, 8],
                  'quartz_duck': [32.0, 56, 2.249999999999999, 17, 8],
                  'rich_dove': [24.0, 112, 2.0999999999999996, 13, 8],
                  'tall_tuatara': [56.0, 64, 2.4999999999999982, 18, 8],
                  'vagabond_pegasus': [56.0, 56, 2.3499999999999988, 15, 8],
                  'versed_cuttlefish': [32.0, 72, 2.849999999999997, 11, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5003fca4a0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5003fc8130>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5003fc8cd0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5003fc85e0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5003c3f700>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f4f95fdd690>,
                                                ToTensor(),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f4f95fde410>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 1'
ic| f"selected transform {train_transform}": ('selected transform [RandAugment(interpolation=InterpolationMode.NEAREST, '
                                              'num_ops=2, magnitude=9, num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| mode: 'T1'
ic| f"Mode {mode}": 'Mode T1'
ic| get_gpu_memory(0): 41603432448
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 69209.53692626953
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwitty_woodpecker
[31m[EVAL] Best accuracy:57.03999710083008[0m
['parents.csv', 'resilient_robin', 'small_jaybird', 'meticulous_dragonfly', 'ultra_rooster', 'gabby_dalmatian', 'hot_herring', 'little_tamarin', 'massive_lionfish', 'witty_woodpecker', 'exotic_cougar', 'resourceful_aardwark', 'tan_ostrich', 'piquant_gharial', 'archetypal_dormouse', 'spicy_flounder', 'lemon_goshawk', 'therapeutic_limpet', 'encouraging_pillbug', 'acrid_bittern', 'uptight_sidewinder', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 62.7
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_3/tests_Volga_23_10_2024_17_06/Generation_1/energetic_seagull/config.yaml

=== Training ===
  Allotted compute time remaining: ~19h,59m,12s
Early stopping at epoch 99
[31m[EVAL] Best accuracy:83.36000061035156[0m

=== Predicting ===
  Allotted compute time remaining: ~19h,22m,36s

========== Dataset   Sokoto   =============================================
  Metadata:
   - input_shape         : [50000, 1, 9, 9]
   - codename            : Sokoto
   - benchmark           : 0.0
   - num_classes         : 9
   - time_remaining      : 69755.46759080887

=== Processing Data ===
  Allotted compute time remaining: ~19h,22m,35s

=== Performing NAS ===
  Allotted compute time remaining: ~19h,13m,29s
spawn
Created model:  ingenious_hippo
Created model:  splendid_hummingbird
Created model:  fortunate_dragonfly
Created model:  zippy_sponge
Created model:  impartial_shark
Created model:  rainbow_wapiti
Created model:  mega_booby
Created model:  spiked_cassowary
Created model:  cinnamon_chamois
Created model:  daffodil_wallaby
Created model:  illegal_mammoth
Created model:  delectable_earwig
Created model:  spiffy_heron
Created model:  beige_axolotl
Created model:  ancient_manul
Created model:  interesting_sloth
Created model:  enormous_junglefowl
Created model:  caped_mandrill
Created model:  optimal_rooster
Created model:  proud_muskrat
[2K[2Kancient_manul
[31m[EVAL] Best accuracy:12.84999942779541[0m
[2K[2Kbeige_axolotl
[31m[EVAL] Best accuracy:11.569999694824219[0m
[2K[2Kcaped_mandrill
[31m[EVAL] Best accuracy:11.639999389648438[0m
[2K[2Kcinnamon_chamois
[31m[EVAL] Best accuracy:16.44999885559082[0m
[2K[2Kdaffodil_wallaby
[31m[EVAL] Best accuracy:12.489999771118164[0m
[2K[2Kdelectable_earwig
[31m[EVAL] Best accuracy:11.960000038146973[0m
[2K[2Kenormous_junglefowl
[31m[EVAL] Best accuracy:13.339999198913574[0m
[2K[2Kfortunate_dragonfly
[31m[EVAL] Best accuracy:11.619999885559082[0m
[2K[2Killegal_mammoth
[31m[EVAL] Best accuracy:15.210000038146973[0m
[2K[2Kimpartial_shark
[31m[EVAL] Best accuracy:13.789999961853027[0m
[2K[2Kingenious_hippo
[31m[EVAL] Best accuracy:11.289999961853027[0m
[2K[2Kinteresting_sloth
[31m[EVAL] Best accuracy:11.149999618530273[0m
[2K[2Kmega_booby
[31m[EVAL] Best accuracy:12.299999237060547[0m
[2K[2Koptimal_rooster
[31m[EVAL] Best accuracy:12.75[0m
[2K[2Kproud_muskrat
[31m[EVAL] Best accuracy:13.059999465942383[0m
[2K[2Krainbow_wapiti
[31m[EVAL] Best accuracy:12.299999237060547[0m
[2K[2Kspiffy_heron
[31m[EVAL] Best accuracy:11.479999542236328[0m
[2K[2Kspiked_cassowary
[31m[EVAL] Best accuracy:13.380000114440918[0m
[2K[2Ksplendid_hummingbird
[31m[EVAL] Best accuracy:11.549999237060547[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 3345.1389470100403
ic| self.metadata["time_remaining"]: 69209.53692626953
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 56, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kzippy_sponge
[31m[EVAL] Best accuracy:11.710000038146973[0m
['ingenious_hippo', 'splendid_hummingbird', 'fortunate_dragonfly', 'zippy_sponge', 'impartial_shark', 'rainbow_wapiti', 'mega_booby', 'spiked_cassowary', 'cinnamon_chamois', 'daffodil_wallaby', 'illegal_mammoth', 'delectable_earwig', 'spiffy_heron', 'beige_axolotl', 'ancient_manul', 'interesting_sloth', 'enormous_junglefowl', 'caped_mandrill', 'optimal_rooster', 'proud_muskrat', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 16.45
Child: [32.0, 80, 2.3000000000000003, 11]
Old_chrom: [40.0, 56, 2.299999999999999, 11]
Diff: 0.09935898425649199
[32.0, 80, 2.35, 11]
Child: [28.0, 96, 2.35, 12]
Old_chrom: [40.0, 104, 2.3499999999999988, 11]
Diff: 0.0995879219854297
[20.0, 96, 2.3000000000000003, 11]
Child: [44.0, 88, 2.35, 10]
Old_chrom: [40.0, 104, 2.3499999999999988, 11]
Diff: 0.07715202454953227
[36.0, 88, 2.35, 10]
Child: [36.0, 88, 2.35, 10]
Old_chrom: [40.0, 104, 2.3499999999999988, 11]
Diff: 0.07715202454953227
[28.0, 88, 2.35, 11]
Child: [28.0, 88, 2.35, 11]
Old_chrom: [32.0, 80, 2.35, 11]
Diff: 0.04006410256410256
[20.0, 88, 2.4, 12]
Child: [32.0, 96, 2.6, 15]
Old_chrom: [36.0, 88, 2.6, 13]
Diff: 0.07577838827838827
[24.0, 104, 2.5500000000000003, 14]
Child: [24.0, 104, 2.5500000000000003, 14]
Old_chrom: [24.0, 96, 2.4999999999999982, 15]
Diff: 0.09772181834699667
[24.0, 104, 2.6, 14]
Child: [36.0, 104, 2.9000000000000004, 17]
Old_chrom: [40.0, 96, 2.899999999999997, 19]
Diff: 0.07577840444096687
[28.0, 96, 2.95, 16]
Child: [16.0, 88, 2.299999999999999, 9]
Old_chrom: [16.0, 88, 2.299999999999999, 12]
Diff: 0.05357142857142857
[np.int64(16), 80, 2.299999999999999, 9]
Child: [np.int64(16), 80, 2.299999999999999, 9]
Old_chrom: [16.0, 88, 2.299999999999999, 12]
Diff: 0.0728021978021978
[np.int64(16), 80, 2.249999999999999, 8]
Child: [40.0, 88, 2.299999999999999, 11]
Old_chrom: [40.0, 104, 2.3499999999999988, 11]
Diff: 0.0990954447206217
[32.0, 96, 2.299999999999999, 11]
Child: [16.0, 88, 2.899999999999997, 21]
Old_chrom: [16.0, 112, 2.899999999999997, 21]
Diff: 0.057692307692307696
[24.0, 80, 2.899999999999997, 21]
Child: [40.0, 72, 2.299999999999999, 11]
Old_chrom: [48.0, 72, 2.299999999999999, 9]
Diff: 0.07738095238095238
[48.0, 72, 2.3499999999999988, 12]
Child: [16.0, 112, 2.299999999999999, 9]
Old_chrom: [20.0, 96, 2.3000000000000003, 11]
Diff: 0.09500916740667513
[24.0, 120, 2.299999999999999, 9]
Child: [56.0, 88, 2.299999999999999, 9]
Old_chrom: [48.0, 72, 2.299999999999999, 9]
Diff: 0.08012820512820512
[56.0, 88, 2.3499999999999988, 9]
Child: [56.0, 88, 2.3499999999999988, 11]
Old_chrom: [56.0, 88, 2.299999999999999, 12]
Diff: 0.07849104911622609
[64.0, 88, 2.299999999999999, 10]
Child: [64.0, 88, 2.299999999999999, 10]
Old_chrom: [56.0, 88, 2.299999999999999, 12]
Diff: 0.07738095238095238
[56.0, 80, 2.299999999999999, 11]
Child: [56.0, 80, 2.299999999999999, 11]
Old_chrom: [48.0, 72, 2.299999999999999, 9]
Diff: 0.0966117216117216
[48.0, 72, 2.249999999999999, 12]
Created model:  swinging_flounder
Created model:  golden_bonobo
Created model:  garrulous_trout
Created model:  active_walrus
Created model:  poised_mongoose
Created model:  laughing_sponge
Created model:  dark_toucan
Created model:  amorphous_rooster
Created model:  lumpy_ringtail
Created model:  poetic_cassowary
Created model:  ultraviolet_cobra
Created model:  uncovered_caterpillar
Created model:  certain_wasp
Created model:  rich_seal
Created model:  meek_coua
Created model:  astute_seagull
Created model:  thankful_eel
Created model:  thundering_axolotl
Created model:  versed_bird
Created model:  speedy_antelope
[2K[2Kactive_walrus
[31m[EVAL] Best accuracy:12.309999465942383[0m
[2K[2Kamorphous_rooster
[31m[EVAL] Best accuracy:13.979999542236328[0m
[2K[2Kastute_seagull
[31m[EVAL] Best accuracy:14.40999984741211[0m
[2K[2Kcertain_wasp
[31m[EVAL] Best accuracy:13.09999942779541[0m
[2K[2Kdark_toucan
[31m[EVAL] Best accuracy:12.819999694824219[0m
[2K[2Kgarrulous_trout
[31m[EVAL] Best accuracy:11.59999942779541[0m
[2K[2Kgolden_bonobo
[31m[EVAL] Best accuracy:11.979999542236328[0m
[2K[2Klaughing_sponge
[31m[EVAL] Best accuracy:11.579999923706055[0m
[2K[2Klumpy_ringtail
[31m[EVAL] Best accuracy:12.329999923706055[0m
[2K[2Kmeek_coua
[31m[EVAL] Best accuracy:11.399999618530273[0m
[2K[2Kpoetic_cassowary
[31m[EVAL] Best accuracy:11.729999542236328[0m
[2K[2Kpoised_mongoose
[31m[EVAL] Best accuracy:11.549999237060547[0m
[2K[2Krich_seal
[31m[EVAL] Best accuracy:11.59999942779541[0m
[2K[2Kspeedy_antelope
[31m[EVAL] Best accuracy:11.34999942779541[0m
[2K[2Kswinging_flounder
[31m[EVAL] Best accuracy:12.09999942779541[0m
[2K[2Kthankful_eel
[31m[EVAL] Best accuracy:12.139999389648438[0m
[2K[2Kthundering_axolotl
[31m[EVAL] Best accuracy:14.65999984741211[0m
[2K[2Kultraviolet_cobra
[31m[EVAL] Best accuracy:11.889999389648438[0m
[2K[2Kuncovered_caterpillar
[31m[EVAL] Best accuracy:11.25[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 56, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 56, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 56, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6653.156063556671
ic| self.metadata["time_remaining"]: 69209.53692626953
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 56, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 56, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 56, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 96, 'WA': 24.0, 'WM': 2.899999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kversed_bird
[31m[EVAL] Best accuracy:11.949999809265137[0m
['parents.csv', 'swinging_flounder', 'golden_bonobo', 'garrulous_trout', 'active_walrus', 'poised_mongoose', 'laughing_sponge', 'dark_toucan', 'amorphous_rooster', 'lumpy_ringtail', 'poetic_cassowary', 'ultraviolet_cobra', 'uncovered_caterpillar', 'certain_wasp', 'rich_seal', 'meek_coua', 'astute_seagull', 'thankful_eel', 'thundering_axolotl', 'versed_bird', 'speedy_antelope', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 14.66
Child: [24.0, 72, 2.75, 11]
Old_chrom: [20.0, 80, 2.75, 13]
Diff: 0.07577838827838827
[32.0, 64, 2.7, 10]
Child: [20.0, 56, 2.7, 10]
Old_chrom: [16.0, 48, 2.6999999999999975, 10]
Diff: 0.04006411656130622
[np.int64(16), 64, 2.7, 11]
Child: [np.int64(16), 64, 2.7, 11]
Old_chrom: [16.0, 48, 2.6999999999999975, 10]
Diff: 0.05631869531588498
[np.int64(24), 72, 2.75, 10]
Child: [np.int64(24), 72, 2.75, 10]
Old_chrom: [20.0, 80, 2.75, 13]
Diff: 0.09363553113553114
[np.int64(32), 64, 2.7, 11]
Child: [32.0, 72, 2.75, 11]
Old_chrom: [32.0, 64, 2.7, 10]
Diff: 0.09772181834699534
[32.0, 80, 2.8, 10]
Child: [36.0, 80, 2.7, 11]
Old_chrom: [32.0, 64, 2.7, 10]
Diff: 0.07715201465201466
[36.0, 72, 2.7, 12]
Child: [36.0, 72, 2.7, 12]
Old_chrom: [32.0, 64, 2.7, 10]
Diff: 0.07577838827838827
[36.0, 64, 2.7, 13]
Child: [36.0, 64, 2.7, 13]
Old_chrom: [32.0, 64, 2.7, 10]
Diff: 0.0744047619047619
[44.0, 64, 2.75, 13]
Child: [24.0, 72, 2.849999999999997, 16]
Old_chrom: [24.0, 64, 2.849999999999997, 15]
Diff: 0.03708791208791209
[24.0, 72, 2.849999999999997, 17]
Child: [24.0, 72, 2.849999999999997, 17]
Old_chrom: [24.0, 64, 2.849999999999997, 15]
Diff: 0.054945054945054944
[16.0, 72, 2.849999999999997, 17]
Child: [16.0, 72, 2.849999999999997, 17]
Old_chrom: [24.0, 64, 2.849999999999997, 15]
Diff: 0.0966117216117216
[24.0, 80, 2.849999999999997, 17]
Child: [48.0, 96, 2.7499999999999973, 16]
Old_chrom: [48.0, 96, 2.7499999999999973, 12]
Diff: 0.07142857142857142
[56.0, 96, 2.6999999999999975, 16]
Child: [56.0, 96, 2.6999999999999975, 16]
Old_chrom: [48.0, 88, 2.6999999999999975, 18]
Diff: 0.0966117216117216
[48.0, 104, 2.6999999999999975, 17]
Child: [16.0, 72, 2.849999999999997, 10]
Old_chrom: [24.0, 72, 2.849999999999997, 12]
Diff: 0.07738095238095238
[16.0, 72, 2.849999999999997, 9]
Child: [16.0, 72, 2.849999999999997, 9]
Old_chrom: [24.0, 72, 2.849999999999997, 12]
Diff: 0.09523809523809523
[24.0, 72, 2.899999999999997, 8]
Child: [24.0, 64, 2.849999999999997, 12]
Old_chrom: [24.0, 64, 2.849999999999997, 15]
Diff: 0.05357142857142857
[32.0, 56, 2.899999999999997, 11]
Child: [24.0, 96, 2.7499999999999973, 12]
Old_chrom: [24.0, 96, 2.8000000000000003, 14]
Diff: 0.09634819197337084
[32.0, 96, 2.6999999999999975, 12]
Child: [16.0, 64, 2.6499999999999977, 10]
Old_chrom: [16.0, 48, 2.6999999999999975, 10]
Diff: 0.0990954447206217
[np.int64(16), 64, 2.599999999999998, 11]
Created model:  nice_flamingo
Created model:  nickel_dogfish
Created model:  private_albatross
Created model:  slick_frog
Created model:  loud_raccoon
Created model:  black_beetle
Created model:  satisfied_macaque
Created model:  furry_pug
Created model:  esoteric_monkey
Created model:  small_capuchin
Created model:  nostalgic_cougar
Created model:  rich_lion
Created model:  logical_cat
Created model:  aspiring_gharial
Created model:  enlightened_wildcat
Created model:  jade_spider
Created model:  jasper_viper
Created model:  expert_centipede
Created model:  judicious_dove
Created model:  vehement_dalmatian
[2K[2Kaspiring_gharial
[31m[EVAL] Best accuracy:12.1899995803833[0m
[2K[2Kblack_beetle
[31m[EVAL] Best accuracy:11.889999389648438[0m
[2K[2Kenlightened_wildcat
[31m[EVAL] Best accuracy:11.519999504089355[0m
[2K[2Kesoteric_monkey
[31m[EVAL] Best accuracy:11.479999542236328[0m
[2K[2Kexpert_centipede
[31m[EVAL] Best accuracy:11.609999656677246[0m
[2K[2Kfurry_pug
[31m[EVAL] Best accuracy:13.279999732971191[0m
[2K[2Kjade_spider
[31m[EVAL] Best accuracy:12.719999313354492[0m
[2K[2Kjasper_viper
[31m[EVAL] Best accuracy:11.289999961853027[0m
[2K[2Kjudicious_dove
[31m[EVAL] Best accuracy:14.59999942779541[0m
[2K[2Klogical_cat
[31m[EVAL] Best accuracy:12.5[0m
[2K[2Kloud_raccoon
[31m[EVAL] Best accuracy:11.09999942779541[0m
[2K[2Knice_flamingo
[31m[EVAL] Best accuracy:12.319999694824219[0m
[2K[2Knickel_dogfish
[31m[EVAL] Best accuracy:12.460000038146973[0m
[2K[2Knostalgic_cougar
[31m[EVAL] Best accuracy:11.389999389648438[0m
[2K[2Kprivate_albatross
[31m[EVAL] Best accuracy:12.239999771118164[0m
[2K[2Krich_lion
[31m[EVAL] Best accuracy:11.899999618530273[0m
[2K[2Ksatisfied_macaque
[31m[EVAL] Best accuracy:11.549999237060547[0m
[2K[2Kslick_frog
[31m[EVAL] Best accuracy:13.210000038146973[0m
[2K[2Ksmall_capuchin
[31m[EVAL] Best accuracy:11.880000114440918[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 96, 'WA': 24.0, 'WM': 2.899999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 96, 'WA': 24.0, 'WM': 2.899999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 96, 'WA': 24.0, 'WM': 2.899999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 9981.285067558289
ic| self.metadata["time_remaining"]: 69209.53692626953
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 0.0,
               'codename': 'Sokoto',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_3/tests_Sokoto_23_10_2024_20_16/Generation_3/vehement_dalmatian',
               'input_shape': [50000, 1, 9, 9],
               'mode': 'NAS',
               'num_classes': 9,
               'test_type': 'T1_Proxy/seed_3',
               'time_remaining': 59227.86412858963,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| unique_values: array([0.09411765, 0.09803922, 0.10196079, 0.10588235, 0.10980392,
                          0.11372549, 0.11764706, 0.12156863, 0.1254902 , 0.12941177,
                          0.13333334, 0.13725491, 0.14117648, 0.14509805, 0.14901961,
                          0.15294118, 0.15686275, 0.16078432, 0.16470589, 0.16862746,
                          0.17254902, 0.1764706 , 0.18039216, 0.18431373, 0.1882353 ,
                          0.19215687, 0.19607843, 0.2       , 0.20392157, 0.20784314,
                          0.21176471, 0.21568628, 0.21960784, 0.22352941, 0.22745098,
                          0.23137255, 0.23529412, 0.23921569, 0.24313726, 0.24705882,
                          0.2509804 , 0.25490198, 0.25882354, 0.2627451 , 0.26666668,
                          0.27058825, 0.27450982, 0.2784314 , 0.28235295, 0.28627452,
                          0.2901961 , 0.29411766, 0.29803923, 0.3019608 , 0.30588236,
                          0.30980393, 0.3137255 , 0.31764707, 0.32156864, 0.3254902 ,
                          0.32941177, 0.33333334, 0.3372549 , 0.34117648, 0.34509805,
                          0.34901962, 0.3529412 , 0.35686275, 0.36078432, 0.3647059 ,
                          0.36862746, 0.37254903, 0.3764706 , 0.38039216, 0.38431373,
                          0.3882353 , 0.39215687, 0.39607844, 0.4       , 0.40392157,
                          0.40784314, 0.4117647 , 0.41568628, 0.41960785, 0.42352942,
                          0.42745098, 0.43137255, 0.43529412, 0.4392157 , 0.44313726,
                          0.44705883, 0.4509804 , 0.45490196, 0.45882353, 0.4627451 ,
                          0.46666667, 0.47058824, 0.4745098 , 0.47843137, 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7411765 ,
                          0.74509805, 0.7490196 , 0.7529412 , 0.75686276, 0.7647059 ,
                          0.76862746, 0.77254903, 0.7764706 , 0.78431374, 0.7882353 ,
                          0.7921569 , 0.79607844, 0.8       , 0.8039216 , 0.8156863 ,
                          0.81960785, 0.8235294 , 0.827451  , 0.83137256, 0.8392157 ,
                          0.8509804 , 0.85882354, 0.8627451 , 0.8666667 , 0.87058824,
                          0.8784314 , 0.88235295, 0.8901961 , 0.89411765, 0.90588236,
                          0.9098039 , 0.9137255 , 0.92156863, 0.92941177, 0.93333334,
                          0.9411765 , 0.9490196 , 0.9529412 , 0.972549  ], dtype=float32)
ic| C: 3
ic| H: 32
ic| PH: 4
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f50039cf040>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f50039cf6a0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f50039ce4a0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f50039cfe50>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f50081bfa00>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f5013277010>,
                 ToTensor(),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f50132758d0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['colorful_aardwolf',
                  'realistic_goshawk',
                  'spirited_salmon',
                  'futuristic_squirrel',
                  'fancy_cockatoo',
                  'nano_marmoset',
                  'wealthy_gopher',
                  'golden_bug',
                  'carmine_goose',
                  'succinct_antelope',
                  'antique_okapi',
                  'amber_orangutan',
                  'caped_okapi',
                  'adaptable_koala',
                  'tough_frog',
                  'polar_chicken',
                  'sociable_wrasse',
                  'celadon_elephant',
                  'stylish_terrier',
                  'elegant_flounder']
ic| params: [40.0, 48, 2.0999999999999996, 16, 8]
ic| params: [48.0, 48, 2.849999999999997, 11, 8]
ic| params: [32.0, 56, 2.1499999999999995, 9, 8]
ic| params: [56.0, 56, 2.3999999999999986, 12, 8]
ic| params: [48.0, 88, 2.05, 10, 8]
ic| params: [24.0, 40, 2.549999999999998, 8, 8]
ic| params: [48.0, 80, 2.1499999999999995, 14, 8]
ic| params: [32.0, 48, 2.799999999999997, 15, 8]
ic| params: [16.0, 24, 2.299999999999999, 13, 8]
ic| params: [40.0, 120, 2.849999999999997, 11, 8]
ic| params: [40.0, 56, 2.599999999999998, 19, 8]
ic| params: [32.0, 72, 2.799999999999997, 16, 8]
ic| params: [40.0, 104, 2.4999999999999982, 10, 8]
ic| params: [56.0, 120, 2.299999999999999, 10, 8]
ic| params: [16.0, 56, 2.899999999999997, 8, 8]
ic| params: [16.0, 88, 2.0999999999999996, 14, 8]
ic| params: [56.0, 112, 2.849999999999997, 15, 8]
ic| params: [64.0, 72, 2.7499999999999973, 18, 8]
ic| params: [64.0, 96, 2.1499999999999995, 11, 8]
ic| params: [56.0, 56, 2.05, 20, 8]
ic| individuals: ['colorful_aardwolf',
                  'realistic_goshawk',
                  'spirited_salmon',
                  'futuristic_squirrel',
                  'fancy_cockatoo',
                  'nano_marmoset',
                  'wealthy_gopher',
                  'golden_bug',
                  'carmine_goose',
                  'succinct_antelope',
                  'antique_okapi',
                  'amber_orangutan',
                  'caped_okapi',
                  'adaptable_koala',
                  'tough_frog',
                  'polar_chicken',
                  'sociable_wrasse',
                  'celadon_elephant',
                  'stylish_terrier',
                  'elegant_flounder']
ic| params_dict: {'adaptable_koala': [56.0, 120, 2.299999999999999, 10, 8],
                  'amber_orangutan': [32.0, 72, 2.799999999999997, 16, 8],
                  'antique_okapi': [40.0, 56, 2.599999999999998, 19, 8],
                  'caped_okapi': [40.0, 104, 2.4999999999999982, 10, 8],
                  'carmine_goose': [16.0, 24, 2.299999999999999, 13, 8],
                  'celadon_elephant': [64.0, 72, 2.7499999999999973, 18, 8],
                  'colorful_aardwolf': [40.0, 48, 2.0999999999999996, 16, 8],
                  'elegant_flounder': [56.0, 56, 2.05, 20, 8],
                  'fancy_cockatoo': [48.0, 88, 2.05, 10, 8],
                  'futuristic_squirrel': [56.0, 56, 2.3999999999999986, 12, 8],
                  'golden_bug': [32.0, 48, 2.799999999999997, 15, 8],
                  'nano_marmoset': [24.0, 40, 2.549999999999998, 8, 8],
                  'polar_chicken': [16.0, 88, 2.0999999999999996, 14, 8],
                  'realistic_goshawk': [48.0, 48, 2.849999999999997, 11, 8],
                  'sociable_wrasse': [56.0, 112, 2.849999999999997, 15, 8],
                  'spirited_salmon': [32.0, 56, 2.1499999999999995, 9, 8],
                  'stylish_terrier': [64.0, 96, 2.1499999999999995, 11, 8],
                  'succinct_antelope': [40.0, 120, 2.849999999999997, 11, 8],
                  'tough_frog': [16.0, 56, 2.899999999999997, 8, 8],
                  'wealthy_gopher': [48.0, 80, 2.1499999999999995, 14, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50039cf040>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50039cf6a0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50039ce4a0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50039cfe50>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50081bfa00>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f5013277010>,
                                                ToTensor(),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f50132758d0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 4'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| mode: 'T1'
ic| f"Mode {mode}": 'Mode T1'
ic| get_gpu_memory(0): 41221750784
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 56126.04248738289
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvehement_dalmatian
[31m[EVAL] Best accuracy:11.619999885559082[0m
['parents.csv', 'nice_flamingo', 'nickel_dogfish', 'private_albatross', 'slick_frog', 'loud_raccoon', 'black_beetle', 'satisfied_macaque', 'furry_pug', 'esoteric_monkey', 'small_capuchin', 'nostalgic_cougar', 'rich_lion', 'logical_cat', 'aspiring_gharial', 'enlightened_wildcat', 'jade_spider', 'jasper_viper', 'expert_centipede', 'judicious_dove', 'vehement_dalmatian', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 14.6
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_3/tests_Sokoto_23_10_2024_20_16/Generation_1/cinnamon_chamois/config.yaml

=== Training ===
  Allotted compute time remaining: ~16h,27m,7s
Early stopping at epoch 91
[31m[EVAL] Best accuracy:55.46999740600586[0m

=== Predicting ===
  Allotted compute time remaining: ~15h,45m,1s

========== Dataset  CIFAR10   =============================================
  Metadata:
   - input_shape         : [50000, 3, 32, 32]
   - codename            : CIFAR10
   - benchmark           : 90.65
   - num_classes         : 10
   - time_remaining      : 56699.579310417175

=== Processing Data ===
  Allotted compute time remaining: ~15h,44m,59s

=== Performing NAS ===
  Allotted compute time remaining: ~15h,35m,26s
spawn
Created model:  shiny_axolotl
Created model:  jumping_muskox
Created model:  ethereal_cobra
Created model:  huge_jellyfish
Created model:  amaranth_bittern
Created model:  convivial_pheasant
Created model:  tested_ibis
Created model:  deft_curassow
Created model:  calm_wapiti
Created model:  hypnotic_rattlesnake
Created model:  illustrious_cormorant
Created model:  glittering_condor
Created model:  ultraviolet_cow
Created model:  mighty_cricket
Created model:  utopian_hippo
Created model:  daft_loon
Created model:  satisfied_condor
Created model:  successful_swine
Created model:  hidden_octopus
Created model:  rigorous_hoatzin
[2K[2Kamaranth_bittern
[31m[EVAL] Best accuracy:69.72000122070312[0m
[2K[2Kcalm_wapiti
[31m[EVAL] Best accuracy:65.95999908447266[0m
[2K[2Kconvivial_pheasant
[31m[EVAL] Best accuracy:72.90999603271484[0m
[2K[2Kdaft_loon
[31m[EVAL] Best accuracy:74.52999877929688[0m
[2K[2Kdeft_curassow
[31m[EVAL] Best accuracy:70.23999786376953[0m
[2K[2Kethereal_cobra
[31m[EVAL] Best accuracy:73.58000183105469[0m
[2K[2Kglittering_condor
[31m[EVAL] Best accuracy:70.04000091552734[0m
[2K[2Khidden_octopus
[31m[EVAL] Best accuracy:65.88999938964844[0m
[2K[2Khuge_jellyfish
[31m[EVAL] Best accuracy:71.25999450683594[0m
[2K[2Khypnotic_rattlesnake
[31m[EVAL] Best accuracy:58.28999710083008[0m
[2K[2Killustrious_cormorant
[31m[EVAL] Best accuracy:72.7699966430664[0m
[2K[2Kjumping_muskox
[31m[EVAL] Best accuracy:59.349998474121094[0m
[2K[2Kmighty_cricket
[31m[EVAL] Best accuracy:71.56999969482422[0m
[2K[2Krigorous_hoatzin
[31m[EVAL] Best accuracy:68.00999450683594[0m
[2K[2Ksatisfied_condor
[31m[EVAL] Best accuracy:69.72000122070312[0m
[2K[2Kshiny_axolotl
[31m[EVAL] Best accuracy:70.90999603271484[0m
[2K[2Ksuccessful_swine
[31m[EVAL] Best accuracy:65.87999725341797[0m
[2K[2Ktested_ibis
[31m[EVAL] Best accuracy:66.97999572753906[0m
[2K[2Kultraviolet_cow
[31m[EVAL] Best accuracy:68.47999572753906[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2490.7189605236053
ic| self.metadata["time_remaining"]: 56126.04248738289
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kutopian_hippo
[31m[EVAL] Best accuracy:71.66999816894531[0m
['shiny_axolotl', 'jumping_muskox', 'ethereal_cobra', 'huge_jellyfish', 'amaranth_bittern', 'convivial_pheasant', 'tested_ibis', 'deft_curassow', 'calm_wapiti', 'hypnotic_rattlesnake', 'illustrious_cormorant', 'glittering_condor', 'ultraviolet_cow', 'mighty_cricket', 'utopian_hippo', 'daft_loon', 'satisfied_condor', 'successful_swine', 'hidden_octopus', 'rigorous_hoatzin', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 74.53
Child: [44.0, 96, 2.4000000000000004, 10]
Old_chrom: [36.0, 104, 2.4000000000000004, 12]
Diff: 0.0966117216117216
[52.0, 96, 2.45, 9]
Child: [44.0, 104, 2.6, 17]
Old_chrom: [40.0, 120, 2.599999999999998, 15]
Diff: 0.09500917028679781
[44.0, 104, 2.65, 17]
Child: [32.0, 112, 2.3000000000000003, 14]
Old_chrom: [24.0, 112, 2.299999999999999, 16]
Diff: 0.07738096227847
[24.0, 112, 2.3000000000000003, 15]
Child: [24.0, 112, 2.3000000000000003, 15]
Old_chrom: [24.0, 112, 2.299999999999999, 16]
Diff: 0.01785715275466048
[32.0, 112, 2.2500000000000004, 15]
Child: [48.0, 88, 2.899999999999997, 18]
Old_chrom: [64.0, 88, 2.899999999999997, 18]
Diff: 0.08333333333333333
[48.0, 80, 2.9499999999999966, 19]
Child: [48.0, 88, 2.599999999999998, 15]
Old_chrom: [52.0, 96, 2.6, 15]
Diff: 0.04006411534174287
[56.0, 80, 2.599999999999998, 15]
Child: [56.0, 80, 2.599999999999998, 15]
Old_chrom: [52.0, 96, 2.6, 15]
Diff: 0.0592948845725121
[56.0, 80, 2.549999999999998, 14]
Child: [40.0, 88, 2.4499999999999984, 11]
Old_chrom: [48.0, 88, 2.4499999999999984, 8]
Diff: 0.09523809523809523
[32.0, 80, 2.4499999999999984, 12]
Child: [64.0, 112, 2.299999999999999, 18]
Old_chrom: [64.0, 120, 2.299999999999999, 18]
Diff: 0.019230769230769232
[56.0, 112, 2.3499999999999988, 18]
Child: [64.0, 104, 2.299999999999999, 18]
Old_chrom: [64.0, 120, 2.299999999999999, 18]
Diff: 0.038461538461538464
[56.0, 112, 2.249999999999999, 18]
Child: [56.0, 112, 2.249999999999999, 18]
Old_chrom: [56.0, 112, 2.3499999999999988, 18]
Diff: 0.08574929257125442
[48.0, 112, 2.249999999999999, 17]
Child: [24.0, 112, 2.599999999999998, 15]
Old_chrom: [16.0, 88, 2.599999999999998, 15]
Diff: 0.09935897435897437
[24.0, 120, 2.599999999999998, 15]
Child: [24.0, 104, 2.299999999999999, 16]
Old_chrom: [24.0, 112, 2.299999999999999, 16]
Diff: 0.019230769230769232
[32.0, 96, 2.249999999999999, 17]
Child: [32.0, 96, 2.249999999999999, 17]
Old_chrom: [32.0, 112, 2.2500000000000004, 15]
Diff: 0.0741758340733418
[40.0, 96, 2.299999999999999, 16]
Created model:  auspicious_crocodile
Created model:  careful_dove
Created model:  cerise_chipmunk
Created model:  tangerine_narwhal
Created model:  hypnotic_pegasus
Created model:  stirring_potoo
Created model:  kickass_viper
Created model:  festive_chamois
Created model:  burrowing_malkoha
Created model:  rebel_armadillo
Created model:  vehement_armadillo
Created model:  industrious_macaque
Created model:  origami_binturong
Created model:  asparagus_cicada
Created model:  bold_myna
Created model:  amigurumi_ocelot
Created model:  greedy_nyala
Created model:  invaluable_sawfly
Created model:  jade_prawn
Created model:  unyielding_donkey
[2K[2Kamigurumi_ocelot
[31m[EVAL] Best accuracy:74.30999755859375[0m
[2K[2Kasparagus_cicada
[31m[EVAL] Best accuracy:63.91999816894531[0m
[2K[2Kauspicious_crocodile
[31m[EVAL] Best accuracy:75.38999938964844[0m
[2K[2Kbold_myna
[31m[EVAL] Best accuracy:71.04999542236328[0m
[2K[2Kburrowing_malkoha
[31m[EVAL] Best accuracy:69.54999542236328[0m
[2K[2Kcareful_dove
[31m[EVAL] Best accuracy:73.70999908447266[0m
[2K[2Kcerise_chipmunk
[31m[EVAL] Best accuracy:63.29999923706055[0m
[2K[2Kfestive_chamois
[31m[EVAL] Best accuracy:70.29000091552734[0m
[2K[2Kgreedy_nyala
[31m[EVAL] Best accuracy:77.9000015258789[0m
[2K[2Khypnotic_pegasus
[31m[EVAL] Best accuracy:62.13999938964844[0m
[2K[2Kindustrious_macaque
[31m[EVAL] Best accuracy:63.30999755859375[0m
[2K[2Kinvaluable_sawfly
[31m[EVAL] Best accuracy:71.80999755859375[0m
[2K[2Kjade_prawn
[31m[EVAL] Best accuracy:63.779998779296875[0m
[2K[2Kkickass_viper
[31m[EVAL] Best accuracy:61.5[0m
[2K[2Korigami_binturong
[31m[EVAL] Best accuracy:69.04000091552734[0m
[2K[2Krebel_armadillo
[31m[EVAL] Best accuracy:72.25999450683594[0m
[2K[2Kstirring_potoo
[31m[EVAL] Best accuracy:72.70999908447266[0m
[2K[2Ktangerine_narwhal
[31m[EVAL] Best accuracy:70.47999572753906[0m
[2K[2Kunyielding_donkey
[31m[EVAL] Best accuracy:75.00999450683594[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 4979.810090065002
ic| self.metadata["time_remaining"]: 56126.04248738289
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 80, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvehement_armadillo
[31m[EVAL] Best accuracy:69.56999969482422[0m
['parents.csv', 'auspicious_crocodile', 'careful_dove', 'cerise_chipmunk', 'tangerine_narwhal', 'hypnotic_pegasus', 'stirring_potoo', 'kickass_viper', 'festive_chamois', 'burrowing_malkoha', 'rebel_armadillo', 'vehement_armadillo', 'industrious_macaque', 'origami_binturong', 'asparagus_cicada', 'bold_myna', 'amigurumi_ocelot', 'greedy_nyala', 'invaluable_sawfly', 'jade_prawn', 'unyielding_donkey', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.9
Child: [48.0, 112, 2.6500000000000004, 12]
Old_chrom: [64.0, 112, 2.6499999999999977, 12]
Diff: 0.08333334733053699
[40.0, 104, 2.6500000000000004, 13]
Child: [52.0, 120, 2.6, 13]
Old_chrom: [40.0, 120, 2.599999999999998, 15]
Diff: 0.09821429849192602
[52.0, 112, 2.5500000000000003, 13]
Child: [36.0, 112, 2.3000000000000003, 12]
Old_chrom: [40.0, 104, 2.299999999999999, 11]
Diff: 0.05792125531876304
[28.0, 112, 2.3000000000000003, 11]
Child: [28.0, 112, 2.3000000000000003, 11]
Old_chrom: [40.0, 104, 2.299999999999999, 11]
Diff: 0.08173077912828686
[20.0, 104, 2.2500000000000004, 12]
Child: [40.0, 120, 2.799999999999997, 9]
Old_chrom: [56.0, 120, 2.799999999999997, 9]
Diff: 0.08333333333333333
[32.0, 128, 2.849999999999997, 9]
Child: [64.0, 120, 2.799999999999997, 12]
Old_chrom: [56.0, 120, 2.799999999999997, 9]
Diff: 0.09523809523809523
[72.0, 112, 2.7499999999999973, 12]
Child: [32.0, 104, 2.4999999999999982, 13]
Old_chrom: [40.0, 120, 2.4999999999999982, 13]
Diff: 0.08012820512820512
[24.0, 96, 2.549999999999998, 13]
Child: [64.0, 112, 2.599999999999998, 12]
Old_chrom: [64.0, 112, 2.6499999999999977, 12]
Diff: 0.06063390625908324
[56.0, 112, 2.6499999999999977, 13]
Child: [56.0, 112, 2.6499999999999977, 13]
Old_chrom: [64.0, 112, 2.6499999999999977, 12]
Diff: 0.05952380952380952
[48.0, 104, 2.599999999999998, 12]
Child: [48.0, 104, 2.599999999999998, 12]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.08333333333333333
[56.0, 104, 2.599999999999998, 12]
Child: [32.0, 104, 2.05, 12]
Old_chrom: [32.0, 104, 2.05, 11]
Diff: 0.017857142857142856
[40.0, 96, np.float64(2.05), 13]
Child: [40.0, 96, np.float64(2.05), 13]
Old_chrom: [32.0, 104, 2.05, 11]
Diff: 0.0966117216117216
[40.0, 104, np.float64(2.05), 12]
Child: [40.0, 120, 2.6499999999999977, 12]
Old_chrom: [48.0, 120, 2.6500000000000004, 11]
Diff: 0.05952382352101318
[48.0, 112, 2.599999999999998, 13]
Child: [48.0, 112, 2.599999999999998, 13]
Old_chrom: [40.0, 120, 2.599999999999998, 15]
Diff: 0.0966117216117216
[56.0, 104, 2.599999999999998, 12]
Child: [40.0, 104, 2.05, 13]
Old_chrom: [32.0, 104, 2.05, 11]
Diff: 0.07738095238095238
[32.0, 96, np.float64(2.05), 12]
Child: [32.0, 96, np.float64(2.05), 12]
Old_chrom: [32.0, 104, 2.05, 11]
Diff: 0.03708791208791209
[40.0, 96, np.float64(2.0999999999999996), 11]
Child: [40.0, 96, np.float64(2.0999999999999996), 11]
Old_chrom: [40.0, 96, 2.1999999999999993, 11]
Diff: 0.08574929257125442
[48.0, 96, np.float64(2.05), 11]
Child: [32.0, 112, 2.6499999999999977, 11]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.09772181834699534
[24.0, 112, 2.599999999999998, 12]
Created model:  light_newt
Created model:  busy_groundhog
Created model:  translucent_sturgeon
Created model:  adamant_rat
Created model:  classic_shark
Created model:  arboreal_alpaca
Created model:  stylish_clam
Created model:  meaty_echidna
Created model:  tricky_beagle
Created model:  nocturnal_aardwolf
Created model:  fine_wolverine
Created model:  strict_coua
Created model:  fierce_orangutan
Created model:  chocolate_goldfish
Created model:  amiable_seal
Created model:  ingenious_inchworm
Created model:  opalescent_echidna
Created model:  fervent_warthog
Created model:  lilac_griffin
Created model:  therapeutic_chamois
[2K[2Kadamant_rat
[31m[EVAL] Best accuracy:72.33000183105469[0m
[2K[2Kamiable_seal
[31m[EVAL] Best accuracy:70.43000030517578[0m
[2K[2Karboreal_alpaca
[31m[EVAL] Best accuracy:75.50999450683594[0m
[2K[2Kbusy_groundhog
[31m[EVAL] Best accuracy:73.75[0m
[2K[2Kchocolate_goldfish
[31m[EVAL] Best accuracy:68.94999694824219[0m
[2K[2Kclassic_shark
[31m[EVAL] Best accuracy:74.72000122070312[0m
[2K[2Kfervent_warthog
[31m[EVAL] Best accuracy:71.75999450683594[0m
[2K[2Kfierce_orangutan
[31m[EVAL] Best accuracy:58.56999969482422[0m
[2K[2Kfine_wolverine
[31m[EVAL] Best accuracy:73.4000015258789[0m
[2K[2Kingenious_inchworm
[31m[EVAL] Best accuracy:62.2599983215332[0m
[2K[2Klight_newt
[31m[EVAL] Best accuracy:56.48999786376953[0m
[2K[2Klilac_griffin
[31m[EVAL] Best accuracy:66.68000030517578[0m
[2K[2Kmeaty_echidna
[31m[EVAL] Best accuracy:69.73999786376953[0m
[2K[2Knocturnal_aardwolf
[31m[EVAL] Best accuracy:65.16999816894531[0m
[2K[2Kopalescent_echidna
[31m[EVAL] Best accuracy:65.58999633789062[0m
[2K[2Kstrict_coua
[31m[EVAL] Best accuracy:67.29000091552734[0m
[2K[2Kstylish_clam
[31m[EVAL] Best accuracy:73.29000091552734[0m
[2K[2Ktherapeutic_chamois
[31m[EVAL] Best accuracy:73.9000015258789[0m
[2K[2Ktranslucent_sturgeon
[31m[EVAL] Best accuracy:75.90999603271484[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 80, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 80, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 80, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7349.720959663391
ic| self.metadata["time_remaining"]: 56126.04248738289
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 90.65,
               'codename': 'CIFAR10',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_3/tests_CIFAR10_23_10_2024_23_54/Generation_3/tricky_beagle',
               'input_shape': [50000, 3, 32, 32],
               'mode': 'NAS',
               'num_classes': 10,
               'test_type': 'T1_Proxy/seed_3',
               'time_remaining': 48775.76114368439,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

[2Ktricky_beagle
[31m[EVAL] Best accuracy:70.04999542236328[0m
['parents.csv', 'light_newt', 'busy_groundhog', 'translucent_sturgeon', 'adamant_rat', 'classic_shark', 'arboreal_alpaca', 'stylish_clam', 'meaty_echidna', 'tricky_beagle', 'nocturnal_aardwolf', 'fine_wolverine', 'strict_coua', 'fierce_orangutan', 'chocolate_goldfish', 'amiable_seal', 'ingenious_inchworm', 'opalescent_echidna', 'fervent_warthog', 'lilac_griffin', 'therapeutic_chamois', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 75.91
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_3/tests_CIFAR10_23_10_2024_23_54/Generation_2/greedy_nyala/config.yaml

=== Training ===
  Allotted compute time remaining: ~13h,32m,55s
[31m[EVAL] Best accuracy:92.47000122070312[0m

=== Predicting ===
  Allotted compute time remaining: ~13h,2m,19s

rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1/labels
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1/predictions
rsync -avr --exclude='**/*x.npy' --exclude='**/train*.npy' --exclude='**/valid*.npy'   --include='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1/labels/
sending incremental file list
CIFAR10/
CIFAR10/cifar-10-python.tar.gz
CIFAR10/metadata
CIFAR10/test_y.npy
ImageNet16-120/
ImageNet16-120/metadata
ImageNet16-120/test_y.npy
Sudoku/
Sudoku/Example Image with Corresponding Sudoku Grid.png
Sudoku/README
Sudoku/metadata
Sudoku/test_y.npy
Sudoku/Sokoto/
Sudoku/Sokoto/augmentation_results.json
Sudoku/Sokoto/aug_0/
Sudoku/Sokoto/aug_0/student_best
Sudoku/Sokoto/aug_0/worklog.txt
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_1/
Sudoku/Sokoto/aug_1/student_best
Sudoku/Sokoto/aug_1/worklog.txt
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_2/
Sudoku/Sokoto/aug_2/student_best
Sudoku/Sokoto/aug_2/worklog.txt
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_3/
Sudoku/Sokoto/aug_3/student_best
Sudoku/Sokoto/aug_3/worklog.txt
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_4/
Sudoku/Sokoto/aug_4/student_best
Sudoku/Sokoto/aug_4/worklog.txt
Sudoku/Sokoto/aug_5/
Sudoku/Sokoto/aug_5/student_best
Sudoku/Sokoto/aug_5/worklog.txt
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_6/
Sudoku/Sokoto/aug_6/student_best
Sudoku/Sokoto/aug_6/worklog.txt
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_7/
Sudoku/Sokoto/aug_7/student_best
Sudoku/Sokoto/aug_7/worklog.txt
Sudoku/Sokoto/aug_8/
Sudoku/Sokoto/aug_8/student_best
Sudoku/Sokoto/aug_8/worklog.txt
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_9/
Sudoku/Sokoto/aug_9/student_best
Sudoku/Sokoto/aug_9/worklog.txt
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/worklog-checkpoint.txt
Voxel/
Voxel/Rendered Examples.png
Voxel/metadata
Voxel/test_y.npy

sent 620,487,017 bytes  received 951 bytes  112,815,994.18 bytes/sec
total size is 620,331,646  speedup is 1.00
cp -R /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/predictions /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1
cp evaluation/score.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1/score.py
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1; python3 score.py
===========================================================================
=============    Your Unseen Data 2024 Submission is scoring     =============
===========================================================================
== Scoring Voxel ==
Raw Score:    83.570
Adj Score:    4.265
Model Params: 1,522,332
Runtime:      11,261.5s
== Scoring ImageNet16-120 ==
Raw Score:    31.933
Adj Score:    -2.694
Model Params: 3,880,278
Runtime:      26,979.3s
== Scoring Sudoku ==
Raw Score:    55.580
Adj Score:    5.558
Model Params: 1,098,408
Runtime:      13,055.0s
== Scoring CIFAR10 ==
Raw Score:    91.910
Adj Score:    1.348
Model Params: 3,635,542
Runtime:      9,760.9s
===========================
Final Score: 8.477
=== JOB_STATISTICS ===
=== current date     : Thu 24 Oct 2024 02:27:56 AM CEST
= Job-ID             : 916708 on tinygpu
= Job-Name           : /home/woody/iwb3/iwb3021h/THESIS_RESULTS/hpcruns/evonas
= Job-Command        : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/evonas_job_full_main_1.sh
= Initial workdir    : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024
= Queue/Partition    : a100
= Slurm account      : iwb3 with QOS=normal
= Requested resources:  for 23:59:00
= Elapsed runtime    : 17:00:13
= Total RAM usage    : 6.1 GiB of requested  GiB (%)   
= Node list          : tg095
= Subm/Elig/Start/End: 2024-10-22T20:43:41 / 2024-10-22T20:43:41 / 2024-10-23T09:27:43 / 2024-10-24T02:27:56
======================
=== Quota infos ======
    Path              Used     SoftQ    HardQ    Gracetime  Filec    FileQ    FiHaQ    FileGrace    
    /home/hpc          103.0G   104.9G   209.7G        N/A     196K     500K   1,000K        N/A    
    /home/vault        984.8G  1048.6G  2097.2G        N/A     180K     200K     400K        N/A    
    /home/woody        886.9G  1000.0G  1500.0G        N/A     262K   5,000K   7,500K        N/A    
======================
=== GPU utilization ==
gpu_name, gpu_bus_id, pid, gpu_utilization [%], mem_utilization [%], max_memory_usage [MiB], time [ms]
NVIDIA A100-SXM4-40GB, 00000000:01:00.0, 1959156, 24 %, 3 %, 8018 MiB, 61067410 ms
