### Starting TaskPrologue of job 915937 on tg096 at Mon 21 Oct 2024 05:08:43 PM CEST
Running on cores 96-127 with governor ondemand
Mon Oct 21 17:08:43 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 560.28.03              Driver Version: 560.28.03      CUDA Version: 12.6     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-40GB          On  |   00000000:C1:00.0 Off |                    0 |
| N/A   37C    P0             60W /  400W |       1MiB /  40960MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
### Finished TaskPrologue

Loading python/pytorch-1.13py3.10
  Loading requirement: cuda/11.6.1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/predictions
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/datasets
rsync -ar --exclude='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/datasets/
cp -R evaluation/main.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/main.py
cp -R anki_lab_submission/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1; python3 main.py --mode T1 --select_augment Proxy
ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| unique_values: array([0.02745098, 0.05098039, 0.05490196, 0.05882353, 0.0627451 ,
                          0.07058824, 0.07450981, 0.07843138, 0.08627451, 0.09019608,
                          0.09411765, 0.09803922, 0.10196079, 0.10980392, 0.11372549,
                          0.11764706, 0.12156863, 0.1254902 , 0.12941177, 0.13333334,
                          0.13725491, 0.14117648, 0.14509805, 0.14901961, 0.15294118,
                          0.15686275, 0.16078432, 0.16470589, 0.16862746, 0.17254902,
                          0.1764706 , 0.18039216, 0.18431373, 0.1882353 , 0.19215687,
                          0.19607843, 0.2       , 0.20392157, 0.21176471, 0.21568628,
                          0.21960784, 0.22352941, 0.22745098, 0.23137255, 0.23529412,
                          0.23921569, 0.24313726, 0.24705882, 0.2509804 , 0.25490198,
                          0.25882354, 0.2627451 , 0.26666668, 0.27058825, 0.27450982,
                          0.2784314 , 0.2901961 , 0.29411766, 0.29803923, 0.3019608 ,
                          0.3137255 , 0.31764707, 0.3254902 , 0.32941177, 0.33333334,
                          0.3372549 , 0.34117648, 0.34509805, 0.34901962, 0.3529412 ,
                          0.35686275, 0.36078432, 0.3647059 , 0.36862746, 0.37254903,
                          0.3764706 , 0.38039216, 0.38431373, 0.3882353 , 0.39215687,
                          0.39607844, 0.40392157, 0.40784314, 0.4117647 , 0.41568628,
                          0.41960785, 0.42352942, 0.43137255, 0.43529412, 0.4392157 ,
                          0.44313726, 0.44705883, 0.4509804 , 0.45490196, 0.45882353,
                          0.4627451 , 0.46666667, 0.47058824, 0.4745098 , 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7372549 ,
                          0.7411765 , 0.74509805, 0.7490196 , 0.7529412 , 0.75686276,
                          0.7607843 , 0.7647059 , 0.76862746, 0.77254903, 0.7764706 ,
                          0.78039217, 0.78431374, 0.7882353 , 0.7921569 , 0.79607844,
                          0.8       , 0.8039216 , 0.80784315, 0.8117647 , 0.8156863 ,
                          0.8235294 , 0.83137256, 0.8352941 , 0.8392157 , 0.84313726,
                          0.85882354, 0.8666667 , 0.87058824, 0.8745098 , 0.8784314 ,
                          0.88235295, 0.8980392 , 0.90588236, 0.9098039 , 0.9137255 ,
                          0.91764706, 0.92156863, 0.9254902 , 0.92941177, 0.93333334,
                          0.9372549 , 0.9411765 , 0.94509804, 0.95686275, 0.9607843 ],
                         dtype=float32)
ic| C: 3
ic| H: 16
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning: The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.
  warnings.warn(
ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f1e30a5bfa0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1e30a58f40>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1e30a59030>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1e30a58f70>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f1e30a59150>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f1e30a59870>,
                 ToTensor(),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f1e30a59330>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['daring_crayfish',
                  'dandelion_turkey',
                  'tidy_newt',
                  'spectral_dolphin',
                  'resourceful_okapi',
                  'meticulous_panda',
                  'archetypal_vicugna',
                  'adept_magpie',
                  'fortunate_oryx',
                  'agile_labrador']
ic| params: [48.0, 120, 2.1499999999999995, 12, 8]
ic| params: [64.0, 72, 2.799999999999997, 18, 8]
ic| params: [16.0, 72, 2.05, 22, 8]
ic| params: [48.0, 112, 2.05, 19, 8]
ic| params: [56.0, 112, 2.3999999999999986, 17, 8]
ic| params: [16.0, 16, 2.05, 18, 8]
ic| params: [56.0, 120, 2.6999999999999975, 19, 8]
ic| params: [64.0, 72, 2.799999999999997, 16, 8]
ic| params: [24.0, 96, 2.3999999999999986, 20, 8]
ic| params: [16.0, 64, 2.899999999999997, 22, 8]
ic| individuals: ['daring_crayfish',
                  'dandelion_turkey',
                  'tidy_newt',
                  'spectral_dolphin',
                  'resourceful_okapi',
                  'meticulous_panda',
                  'archetypal_vicugna',
                  'adept_magpie',
                  'fortunate_oryx',
                  'agile_labrador']
ic| params_dict: {'adept_magpie': [64.0, 72, 2.799999999999997, 16, 8],
                  'agile_labrador': [16.0, 64, 2.899999999999997, 22, 8],
                  'archetypal_vicugna': [56.0, 120, 2.6999999999999975, 19, 8],
                  'dandelion_turkey': [64.0, 72, 2.799999999999997, 18, 8],
                  'daring_crayfish': [48.0, 120, 2.1499999999999995, 12, 8],
                  'fortunate_oryx': [24.0, 96, 2.3999999999999986, 20, 8],
                  'meticulous_panda': [16.0, 16, 2.05, 18, 8],
                  'resourceful_okapi': [56.0, 112, 2.3999999999999986, 17, 8],
                  'spectral_dolphin': [48.0, 112, 2.05, 19, 8],
                  'tidy_newt': [16.0, 72, 2.05, 22, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30a5bfa0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30a58f40>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30a59030>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30a58f70>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30a59150>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30a59870>,
                                                ToTensor(),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30a59330>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
ic| f"best_augmentation: {best_aug}": 'best_augmentation: 4'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| mode: 'T1'
ic| f"Mode {mode}": 'Mode T1'
ic| get_gpu_memory(0): 41536323584
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 107640.58817219734
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
Mode: T1
===========================================================================
=============    Your Unseen Data 2024 Submission is running     =============
===========================================================================
========== Dataset    in16    =============================================
  Metadata:
   - input_shape         : [148700, 3, 16, 16]
   - codename            : in16
   - benchmark           : 46.38
   - num_classes         : 120
   - time_remaining      : 107999.48707199097

=== Processing Data ===
  Allotted compute time remaining: ~29h,59m,59s

=== Performing NAS ===
  Allotted compute time remaining: ~29h,54m,0s
None
Created model:  placid_crayfish
Created model:  green_bandicoot
Created model:  hulking_swallow
Created model:  blue_loon
Created model:  splendid_barracuda
Created model:  mahogany_platypus
Created model:  offbeat_mackerel
Created model:  speedy_zebu
Created model:  industrious_trout
Created model:  beryl_labrador
Created model:  glossy_oriole
Created model:  axiomatic_millipede
Created model:  pistachio_squid
Created model:  brown_oriole
Created model:  majestic_cassowary
Created model:  glittering_swine
Created model:  enormous_numbat
Created model:  lumpy_toucan
Created model:  brilliant_impala
Created model:  sweet_wolf
[2K[2Kaxiomatic_millipede
[31m[EVAL] Best accuracy:16.733333587646484[0m
[2K[2Kberyl_labrador
[31m[EVAL] Best accuracy:17.46666717529297[0m
[2K[2Kblue_loon
[31m[EVAL] Best accuracy:19.733333587646484[0m
[2K[2Kbrilliant_impala
[31m[EVAL] Best accuracy:20.399999618530273[0m
[2K[2Kbrown_oriole
[31m[EVAL] Best accuracy:20.69999885559082[0m
[2K[2Kenormous_numbat
[31m[EVAL] Best accuracy:16.733333587646484[0m
[2K[2Kglittering_swine
[31m[EVAL] Best accuracy:16.700000762939453[0m
[2K[2Kglossy_oriole
[31m[EVAL] Best accuracy:17.366666793823242[0m
[2K[2Kgreen_bandicoot
[31m[EVAL] Best accuracy:18.399999618530273[0m
[2K[2Khulking_swallow
[31m[EVAL] Best accuracy:20.433332443237305[0m
[2K[2Kindustrious_trout
[31m[EVAL] Best accuracy:9.933333396911621[0m
[2K[2Klumpy_toucan
[31m[EVAL] Best accuracy:18.399999618530273[0m
[2K[2Kmahogany_platypus
[31m[EVAL] Best accuracy:18.53333282470703[0m
[2K[2Kmajestic_cassowary
[31m[EVAL] Best accuracy:11.366666793823242[0m
[2K[2Koffbeat_mackerel
[31m[EVAL] Best accuracy:16.83333396911621[0m
[2K[2Kpistachio_squid
[31m[EVAL] Best accuracy:12.633333206176758[0m
[2K[2Kplacid_crayfish
[31m[EVAL] Best accuracy:20.366666793823242[0m
[2K[2Kspeedy_zebu
[31m[EVAL] Best accuracy:18.399999618530273[0m
[2K[2Ksplendid_barracuda
[31m[EVAL] Best accuracy:20.0[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7736.27623963356
ic| self.metadata["time_remaining"]: 107640.58817219734
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Ksweet_wolf
[31m[EVAL] Best accuracy:12.066666603088379[0m
['placid_crayfish', 'green_bandicoot', 'hulking_swallow', 'blue_loon', 'splendid_barracuda', 'mahogany_platypus', 'offbeat_mackerel', 'speedy_zebu', 'industrious_trout', 'beryl_labrador', 'glossy_oriole', 'axiomatic_millipede', 'pistachio_squid', 'brown_oriole', 'majestic_cassowary', 'glittering_swine', 'enormous_numbat', 'lumpy_toucan', 'brilliant_impala', 'sweet_wolf', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 20.7
Child: [52.0, 120, 2.9000000000000004, 13]
Old_chrom: [64.0, 120, 2.899999999999997, 11]
Diff: 0.09821430187686431
[44.0, 128, 2.8500000000000005, 13]
Child: [56.0, 112, 2.75, 10]
Old_chrom: [60.0, 112, 2.7, 10]
Diff: 0.08146723959241657
[64.0, 120, 2.8, 10]
Child: [28.0, 120, 2.6500000000000004, 13]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.0771520286492183
[36.0, 112, 2.7, 14]
Child: [36.0, 112, 2.7, 14]
Old_chrom: [40.0, 120, 2.7, 11]
Diff: 0.09363553113553114
[44.0, 112, 2.6500000000000004, 15]
Child: [48.0, 112, 2.7, 12]
Old_chrom: [40.0, 120, 2.7, 11]
Diff: 0.07875457875457875
[56.0, 104, 2.7, 13]
Child: [56.0, 104, 2.7, 13]
Old_chrom: [60.0, 112, 2.7, 10]
Diff: 0.09363553113553114
[64.0, 104, 2.75, 14]
Child: [32.0, 112, 2.5500000000000003, 10]
Old_chrom: [36.0, 112, 2.5, 10]
Diff: 0.08146723959241685
[32.0, 104, 2.6, 10]
Child: [52.0, 104, 2.5500000000000003, 9]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.08146723959241792
[44.0, 96, 2.5000000000000004, 9]
Child: [44.0, 96, 2.5000000000000004, 9]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.08173078200840954
[36.0, 88, 2.5000000000000004, 9]
Child: [36.0, 88, 2.5000000000000004, 9]
Old_chrom: [36.0, 112, 2.5, 10]
Diff: 0.07554945626378501
[44.0, 80, 2.5000000000000004, 10]
Child: [64.0, 120, 2.849999999999997, 11]
Old_chrom: [64.0, 120, 2.899999999999997, 11]
Diff: 0.06063390625908324
[64.0, 112, 2.799999999999997, 12]
Child: [64.0, 112, 2.799999999999997, 12]
Old_chrom: [64.0, 120, 2.8, 10]
Diff: 0.054945068942258604
[56.0, 120, 2.7499999999999973, 13]
Child: [56.0, 120, 2.7499999999999973, 13]
Old_chrom: [64.0, 104, 2.75, 14]
Diff: 0.09798536198255164
[56.0, 112, 2.799999999999997, 14]
Child: [56.0, 120, 2.899999999999997, 9]
Old_chrom: [64.0, 120, 2.899999999999997, 11]
Diff: 0.07738095238095238
[64.0, 112, 2.899999999999997, 8]
Child: [64.0, 112, 2.899999999999997, 8]
Old_chrom: [64.0, 120, 2.899999999999997, 11]
Diff: 0.0728021978021978
[64.0, 104, 2.849999999999997, 9]
Child: [16.0, 120, 2.849999999999997, 11]
Old_chrom: [16.0, 120, 2.899999999999997, 11]
Diff: 0.06063390625908324
[24.0, 120, 2.899999999999997, 10]
Child: [24.0, 120, 2.899999999999997, 10]
Old_chrom: [16.0, 120, 2.899999999999997, 11]
Diff: 0.05952380952380952
[24.0, 112, 2.9499999999999966, 10]
Child: [40.0, 120, 2.4999999999999982, 9]
Old_chrom: [36.0, 112, 2.5, 10]
Diff: 0.057921256849914345
[40.0, 128, 2.4999999999999982, 8]
Child: [40.0, 128, 2.4999999999999982, 8]
Old_chrom: [36.0, 112, 2.5, 10]
Diff: 0.09500916893782643
[40.0, 136, 2.4999999999999982, 8]
Child: [40.0, 120, 2.599999999999998, 9]
Old_chrom: [48.0, 104, 2.599999999999998, 9]
Diff: 0.08012820512820512
[32.0, 112, 2.549999999999998, 9]
Child: [32.0, 112, 2.549999999999998, 9]
Old_chrom: [36.0, 112, 2.5, 10]
Diff: 0.09932438244955835
[40.0, 104, 2.549999999999998, 9]
Child: [56.0, 104, 2.4499999999999984, 11]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.09634819197336895
[48.0, 104, 2.4999999999999982, 10]
Child: [48.0, 104, 2.4999999999999982, 9]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.041666666666666664
[48.0, 112, 2.4999999999999982, 10]
Child: [48.0, 112, 2.4999999999999982, 10]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.07875457875457875
[56.0, 112, 2.549999999999998, 9]
Child: [56.0, 112, 2.549999999999998, 9]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.07986467548985247
[48.0, 120, 2.4999999999999982, 8]
Child: [48.0, 120, 2.4999999999999982, 8]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.09798534798534797
[40.0, 112, 2.4499999999999984, 9]
Created model:  upbeat_cicada
Created model:  successful_polecat
Created model:  ultra_monkey
Created model:  strict_tanuki
Created model:  benevolent_mastiff
Created model:  cute_gerbil
Created model:  fluorescent_muskrat
Created model:  fat_peccary
Created model:  positive_heron
Created model:  watchful_marten
Created model:  stereotyped_dalmatian
Created model:  clay_sambar
Created model:  swinging_quoll
Created model:  frisky_baboon
Created model:  tireless_muskrat
Created model:  dark_flounder
Created model:  kickass_ibex
Created model:  sassy_rabbit
Created model:  gregarious_manatee
Created model:  capable_chital
[2K[2Kbenevolent_mastiff
[31m[EVAL] Best accuracy:20.5[0m
[2K[2Kcapable_chital
[31m[EVAL] Best accuracy:12.533332824707031[0m
[2K[2Kclay_sambar
[31m[EVAL] Best accuracy:20.33333396911621[0m
[2K[2Kcute_gerbil
[31m[EVAL] Best accuracy:13.199999809265137[0m
[2K[2Kdark_flounder
[31m[EVAL] Best accuracy:14.133333206176758[0m
[2K[2Kfat_peccary
[31m[EVAL] Best accuracy:13.933333396911621[0m
[2K[2Kfluorescent_muskrat
[31m[EVAL] Best accuracy:6.699999809265137[0m
[2K[2Kfrisky_baboon
[31m[EVAL] Best accuracy:16.299999237060547[0m
[2K[2Kgregarious_manatee
[31m[EVAL] Best accuracy:10.09999942779541[0m
[2K[2Kkickass_ibex
[31m[EVAL] Best accuracy:14.933333396911621[0m
[2K[2Kpositive_heron
[31m[EVAL] Best accuracy:21.133333206176758[0m
[2K[2Ksassy_rabbit
[31m[EVAL] Best accuracy:8.300000190734863[0m
[2K[2Kstereotyped_dalmatian
[31m[EVAL] Best accuracy:14.566666603088379[0m
[2K[2Kstrict_tanuki
[31m[EVAL] Best accuracy:15.433333396911621[0m
[2K[2Ksuccessful_polecat
[31m[EVAL] Best accuracy:14.59999942779541[0m
[2K[2Kswinging_quoll
[31m[EVAL] Best accuracy:14.5[0m
[2K[2Ktireless_muskrat
[31m[EVAL] Best accuracy:10.266666412353516[0m
[2K[2Kultra_monkey
[31m[EVAL] Best accuracy:19.233333587646484[0m
[2K[2Kupbeat_cicada
[31m[EVAL] Best accuracy:18.233333587646484[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 15647.322125911713
ic| self.metadata["time_remaining"]: 107640.58817219734
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 72, 'WA': 16.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwatchful_marten
[31m[EVAL] Best accuracy:18.600000381469727[0m
['parents.csv', 'upbeat_cicada', 'successful_polecat', 'ultra_monkey', 'strict_tanuki', 'benevolent_mastiff', 'cute_gerbil', 'fluorescent_muskrat', 'fat_peccary', 'positive_heron', 'watchful_marten', 'stereotyped_dalmatian', 'clay_sambar', 'swinging_quoll', 'frisky_baboon', 'tireless_muskrat', 'dark_flounder', 'kickass_ibex', 'sassy_rabbit', 'gregarious_manatee', 'capable_chital', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 21.13
Child: [28.0, 112, 2.7, 10]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.02083334733053699
[20.0, 104, 2.7, 10]
Child: [20.0, 104, 2.7, 10]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.04006411656130622
[np.int64(16), 112, 2.75, 11]
Child: [28.0, 112, 2.75, 12]
Old_chrom: [np.int64(16), 112, 2.75, 11]
Diff: 0.08035714285714285
[28.0, 104, 2.7, 11]
Child: [32.0, 104, 2.75, 11]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.09634819197336733
[40.0, 112, 2.7, 11]
Child: [48.0, 104, 2.75, 10]
Old_chrom: [44.0, 112, 2.75, 10]
Diff: 0.04006410256410256
[56.0, 112, 2.8, 11]
Child: [56.0, 112, 2.8, 11]
Old_chrom: [64.0, 104, 2.799999999999997, 10]
Diff: 0.07875459275178241
[64.0, 104, 2.75, 11]
Child: [64.0, 104, 2.75, 11]
Old_chrom: [64.0, 104, 2.799999999999997, 10]
Diff: 0.07849104911622448
[64.0, 112, 2.7, 10]
Child: [28.0, 104, 2.5500000000000003, 10]
Old_chrom: [24.0, 104, 2.5500000000000003, 10]
Diff: 0.020833333333333332
[36.0, 112, 2.5000000000000004, 10]
Child: [44.0, 104, 2.6, 10]
Old_chrom: [48.0, 104, 2.599999999999998, 9]
Diff: 0.0386904889681165
[36.0, 112, 2.6, 10]
Child: [36.0, 112, 2.6, 10]
Old_chrom: [48.0, 104, 2.599999999999998, 9]
Diff: 0.0995879248655524
[44.0, 112, 2.65, 10]
Child: [24.0, 112, 2.6499999999999977, 9]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.07849104911622609
[32.0, 112, 2.599999999999998, 9]
Child: [32.0, 112, 2.599999999999998, 9]
Old_chrom: [32.0, 104, 2.6499999999999977, 9]
Diff: 0.07986467548985247
[32.0, 104, 2.599999999999998, 9]
Child: [32.0, 104, 2.599999999999998, 9]
Old_chrom: [48.0, 104, 2.599999999999998, 9]
Diff: 0.08333333333333333
[24.0, 112, 2.599999999999998, 10]
Child: [24.0, 112, 2.799999999999997, 13]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.060897435897435896
[16.0, 104, 2.849999999999997, 13]
Child: [64.0, 112, 2.6999999999999975, 10]
Old_chrom: [64.0, 112, 2.7, 10]
Diff: 1.3997203657444208e-08
[72.0, 104, 2.7499999999999973, 9]
Child: [24.0, 112, 2.3999999999999986, 10]
Old_chrom: [24.0, 96, 2.3999999999999986, 10]
Diff: 0.038461538461538464
[16.0, 112, 2.3999999999999986, 10]
Child: [16.0, 112, 2.3999999999999986, 10]
Old_chrom: [16.0, 112, 2.4499999999999984, 11]
Diff: 0.07849104911622609
[24.0, 112, 2.3499999999999988, 11]
Child: [32.0, 104, 2.799999999999997, 9]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.07142857142857142
[24.0, 96, 2.799999999999997, 8]
Child: [32.0, 104, 2.799999999999997, 9]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.07142857142857142
[24.0, 112, 2.799999999999997, 10]
Child: [24.0, 112, 2.799999999999997, 10]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.08574929257125442
[32.0, 112, 2.849999999999997, 11]
Child: [24.0, 104, 2.6499999999999977, 10]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.07142857142857142
[32.0, 96, 2.599999999999998, 10]
Child: [32.0, 96, 2.599999999999998, 10]
Old_chrom: [32.0, 104, 2.6499999999999977, 9]
Diff: 0.09772181834699534
[32.0, 104, 2.599999999999998, 9]
Child: [64.0, 104, 2.799999999999997, 10]
Old_chrom: [64.0, 104, 2.799999999999997, 10]
Diff: 0.0
[72.0, 104, 2.799999999999997, 11]
Child: [72.0, 104, 2.799999999999997, 11]
Old_chrom: [64.0, 104, 2.799999999999997, 10]
Diff: 0.05952380952380952
[80.0, 112, 2.849999999999997, 11]
Child: [32.0, 96, 2.3999999999999986, 13]
Old_chrom: [24.0, 96, 2.3999999999999986, 10]
Diff: 0.09523809523809523
[40.0, 88, 2.3499999999999988, 12]
Child: [24.0, 104, 2.799999999999997, 10]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.09523809523809523
[32.0, 112, 2.799999999999997, 9]
Created model:  ochre_oarfish
Created model:  muscular_wrasse
Created model:  small_armadillo
Created model:  merry_binturong
Created model:  daffodil_sponge
Created model:  amber_termite
Created model:  savvy_tiger
Created model:  functional_pig
Created model:  hopping_donkey
Created model:  nano_python
Created model:  subtle_cheetah
Created model:  tan_falcon
Created model:  pragmatic_dolphin
Created model:  slim_crow
Created model:  independent_macaque
Created model:  thankful_dove
Created model:  hairy_bobcat
Created model:  delicate_stoat
Created model:  strange_robin
Created model:  acrid_unicorn
[2K[2Kacrid_unicorn
[31m[EVAL] Best accuracy:17.566665649414062[0m
[2K[2Kamber_termite
[31m[EVAL] Best accuracy:17.33333396911621[0m
[2K[2Kdaffodil_sponge
[31m[EVAL] Best accuracy:14.333333015441895[0m
[2K[2Kdelicate_stoat
[31m[EVAL] Best accuracy:19.33333396911621[0m
[2K[2Kfunctional_pig
[31m[EVAL] Best accuracy:11.533332824707031[0m
[2K[2Khairy_bobcat
[31m[EVAL] Best accuracy:17.566665649414062[0m
[2K[2Khopping_donkey
[31m[EVAL] Best accuracy:19.133333206176758[0m
[2K[2Kindependent_macaque
[31m[EVAL] Best accuracy:15.59999942779541[0m
[2K[2Kmerry_binturong
[31m[EVAL] Best accuracy:14.899999618530273[0m
[2K[2Kmuscular_wrasse
[31m[EVAL] Best accuracy:18.0[0m
[2K[2Knano_python
[31m[EVAL] Best accuracy:11.09999942779541[0m
[2K[2Kochre_oarfish
[31m[EVAL] Best accuracy:19.933332443237305[0m
[2K[2Kpragmatic_dolphin
[31m[EVAL] Best accuracy:13.866666793823242[0m
[2K[2Ksavvy_tiger
[31m[EVAL] Best accuracy:11.633333206176758[0m
[2K[2Kslim_crow
[31m[EVAL] Best accuracy:15.699999809265137[0m
[2K[2Ksmall_armadillo
[31m[EVAL] Best accuracy:17.433332443237305[0m
[2K[2Kstrange_robin
[31m[EVAL] Best accuracy:15.399999618530273[0m
[2K[2Ksubtle_cheetah
[31m[EVAL] Best accuracy:17.766666412353516[0m
[2K[2Ktan_falcon
[31m[EVAL] Best accuracy:18.066665649414062[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 72, 'WA': 16.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 72, 'WA': 16.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 72, 'WA': 16.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 23351.44195842743
ic| self.metadata["time_remaining"]: 107640.58817219734
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 46.38,
               'codename': 'in16',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_1/tests_in16_21_10_2024_17_16/Generation_3/thankful_dove',
               'input_shape': [148700, 3, 16, 16],
               'mode': 'NAS',
               'num_classes': 120,
               'test_type': 'T1_Proxy/seed_1',
               'time_remaining': 84288.49290752411,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| unique_values: array([0., 1.], dtype=float32)
ic| C: 20
ic| H: 20
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f1d9ee60250>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1d9ee60d30>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1d9ee60640>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1d9ee60ee0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f1e30ab2dd0>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f1e30ab1870>,
                 ToTensor(),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f1e30ab1630>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['viridian_potoo',
                  'augmented_gharial',
                  'mottled_skua',
                  'intrepid_dingo',
                  'scarlet_gerbil',
                  'hysterical_smilodon',
                  'dashing_condor',
                  'serious_octopus',
                  'rational_nyala',
                  'fanatic_spaniel']
ic| params: [40.0, 56, 2.799999999999997, 9, 8]
ic| params: [24.0, 80, 2.05, 12, 8]
ic| params: [48.0, 120, 2.849999999999997, 14, 8]
ic| params: [40.0, 88, 2.849999999999997, 11, 8]
ic| params: [16.0, 96, 2.6499999999999977, 17, 8]
ic| params: [32.0, 120, 2.1499999999999995, 15, 8]
ic| params: [56.0, 104, 2.6999999999999975, 19, 8]
ic| params: [64.0, 104, 2.1499999999999995, 21, 8]
ic| params: [64.0, 104, 2.6999999999999975, 21, 8]
ic| params: [40.0, 120, 2.4499999999999984, 15, 8]
ic| individuals: ['viridian_potoo',
                  'augmented_gharial',
                  'mottled_skua',
                  'intrepid_dingo',
                  'scarlet_gerbil',
                  'hysterical_smilodon',
                  'dashing_condor',
                  'serious_octopus',
                  'rational_nyala',
                  'fanatic_spaniel']
ic| params_dict: {'augmented_gharial': [24.0, 80, 2.05, 12, 8],
                  'dashing_condor': [56.0, 104, 2.6999999999999975, 19, 8],
                  'fanatic_spaniel': [40.0, 120, 2.4499999999999984, 15, 8],
                  'hysterical_smilodon': [32.0, 120, 2.1499999999999995, 15, 8],
                  'intrepid_dingo': [40.0, 88, 2.849999999999997, 11, 8],
                  'mottled_skua': [48.0, 120, 2.849999999999997, 14, 8],
                  'rational_nyala': [64.0, 104, 2.6999999999999975, 21, 8],
                  'scarlet_gerbil': [16.0, 96, 2.6499999999999977, 17, 8],
                  'serious_octopus': [64.0, 104, 2.1499999999999995, 21, 8],
                  'viridian_potoo': [40.0, 56, 2.799999999999997, 9, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ee60250>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ee60d30>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ee60640>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ee60ee0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30ab2dd0>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30ab1870>,
                                                ToTensor(),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30ab1630>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 13'
ic| f"selected transform {train_transform}": ('selected transform [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], '
                                              'pad_if_needed=False, fill=0, padding_mode=constant), '
                                              'RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)]')
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| mode: 'T1'
ic| f"Mode {mode}": 'Mode T1'
ic| get_gpu_memory(0): 41454534656
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 80806.90288448334
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 72, 'WA': 24.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kthankful_dove
[31m[EVAL] Best accuracy:14.199999809265137[0m
['parents.csv', 'ochre_oarfish', 'muscular_wrasse', 'small_armadillo', 'merry_binturong', 'daffodil_sponge', 'amber_termite', 'savvy_tiger', 'functional_pig', 'hopping_donkey', 'nano_python', 'subtle_cheetah', 'tan_falcon', 'pragmatic_dolphin', 'slim_crow', 'independent_macaque', 'thankful_dove', 'hairy_bobcat', 'delicate_stoat', 'strange_robin', 'acrid_unicorn', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 19.93
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_1/tests_in16_21_10_2024_17_16/Generation_2/positive_heron/config.yaml

=== Training ===
  Allotted compute time remaining: ~23h,24m,48s
Early stopping at epoch 52
[31m[EVAL] Best accuracy:35.599998474121094[0m

=== Predicting ===
  Allotted compute time remaining: ~22h,30m,53s

========== Dataset   Volga    =============================================
  Metadata:
   - input_shape         : [50000, 20, 20, 20]
   - codename            : Volga
   - benchmark           : 71.35
   - num_classes         : 7
   - time_remaining      : 81050.68382382393

=== Processing Data ===
  Allotted compute time remaining: ~22h,30m,50s

=== Performing NAS ===
  Allotted compute time remaining: ~22h,26m,46s
spawn
Created model:  spotted_tamarin
Created model:  optimal_yak
Created model:  foamy_jaybird
Created model:  heretic_bear
Created model:  thankful_buzzard
Created model:  adorable_oryx
Created model:  striped_lori
Created model:  golden_kagu
Created model:  jovial_chupacabra
Created model:  analytic_gazelle
Created model:  holistic_axolotl
Created model:  prudent_gopher
Created model:  zircon_kudu
Created model:  determined_kakapo
Created model:  expert_binturong
Created model:  wooden_gopher
Created model:  nifty_chachalaca
Created model:  vengeful_bustard
Created model:  sloppy_mastiff
Created model:  hallowed_cricket
[2K[2Kadorable_oryx
[31m[EVAL] Best accuracy:65.26000213623047[0m
[2K[2Kanalytic_gazelle
[31m[EVAL] Best accuracy:56.189998626708984[0m
[2K[2Kdetermined_kakapo
[31m[EVAL] Best accuracy:61.519996643066406[0m
[2K[2Kexpert_binturong
[31m[EVAL] Best accuracy:63.07999801635742[0m
[2K[2Kfoamy_jaybird
[31m[EVAL] Best accuracy:57.34000015258789[0m
[2K[2Kgolden_kagu
[31m[EVAL] Best accuracy:57.689998626708984[0m
[2K[2Khallowed_cricket
[31m[EVAL] Best accuracy:56.939998626708984[0m
[2K[2Kheretic_bear
[31m[EVAL] Best accuracy:58.64999771118164[0m
[2K[2Kholistic_axolotl
[31m[EVAL] Best accuracy:49.869998931884766[0m
[2K[2Kjovial_chupacabra
[31m[EVAL] Best accuracy:55.69999694824219[0m
[2K[2Knifty_chachalaca
[31m[EVAL] Best accuracy:54.54999923706055[0m
[2K[2Koptimal_yak
[31m[EVAL] Best accuracy:54.14999771118164[0m
[2K[2Kprudent_gopher
[31m[EVAL] Best accuracy:58.769996643066406[0m
[2K[2Ksloppy_mastiff
[31m[EVAL] Best accuracy:63.939998626708984[0m
[2K[2Kspotted_tamarin
[31m[EVAL] Best accuracy:59.57999801635742[0m
[2K[2Kstriped_lori
[31m[EVAL] Best accuracy:61.0099983215332[0m
[2K[2Kthankful_buzzard
[31m[EVAL] Best accuracy:44.66999816894531[0m
[2K[2Kvengeful_bustard
[31m[EVAL] Best accuracy:53.88999938964844[0m
[2K[2Kwooden_gopher
[31m[EVAL] Best accuracy:58.88999938964844[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 72, 'WA': 24.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 72, 'WA': 24.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 72, 'WA': 24.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2900.1333231925964
ic| self.metadata["time_remaining"]: 80806.90288448334
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 72, 'WA': 24.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 72, 'WA': 24.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 72, 'WA': 24.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kzircon_kudu
[31m[EVAL] Best accuracy:52.79999923706055[0m
['spotted_tamarin', 'optimal_yak', 'foamy_jaybird', 'heretic_bear', 'thankful_buzzard', 'adorable_oryx', 'striped_lori', 'golden_kagu', 'jovial_chupacabra', 'analytic_gazelle', 'holistic_axolotl', 'prudent_gopher', 'zircon_kudu', 'determined_kakapo', 'expert_binturong', 'wooden_gopher', 'nifty_chachalaca', 'vengeful_bustard', 'sloppy_mastiff', 'hallowed_cricket', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 65.26
Child: [36.0, 88, 2.5, 16]
Old_chrom: [32.0, 96, 2.5, 14]
Diff: 0.07577838827838827
[44.0, 96, 2.45, 17]
Child: [44.0, 96, 2.45, 17]
Old_chrom: [48.0, 120, 2.4499999999999984, 16]
Diff: 0.0963827953114528
[44.0, 96, 2.4000000000000004, 16]
Child: [16.0, 104, 2.849999999999997, 19]
Old_chrom: [16.0, 104, 2.849999999999997, 18]
Diff: 0.017857142857142856
[16.0, 112, 2.849999999999997, 18]
Child: [16.0, 112, 2.849999999999997, 18]
Old_chrom: [16.0, 104, 2.849999999999997, 18]
Diff: 0.019230769230769232
[np.int64(16), 120, 2.799999999999997, 19]
Child: [16.0, 104, 2.599999999999998, 12]
Old_chrom: [16.0, 96, 2.6, 14]
Diff: 0.05494506772269525
[np.int64(16), 96, 2.599999999999998, 11]
Child: [np.int64(16), 96, 2.599999999999998, 11]
Old_chrom: [16.0, 96, 2.6, 14]
Diff: 0.053571441349068875
[np.int64(16), 88, 2.549999999999998, 10]
Child: [16.0, 104, 2.299999999999999, 9]
Old_chrom: [16.0, 88, 2.299999999999999, 9]
Diff: 0.038461538461538464
[16.0, 112, 2.249999999999999, 10]
Child: [16.0, 104, 2.599999999999998, 12]
Old_chrom: [16.0, 96, 2.6, 14]
Diff: 0.05494506772269525
[16.0, 112, 2.549999999999998, 13]
Child: [48.0, 80, 2.599999999999998, 12]
Old_chrom: [56.0, 72, 2.599999999999998, 12]
Diff: 0.060897435897435896
[48.0, 80, 2.599999999999998, 13]
Child: [48.0, 80, 2.599999999999998, 13]
Old_chrom: [56.0, 72, 2.599999999999998, 12]
Diff: 0.07875457875457875
[48.0, 80, 2.6499999999999977, 14]
Created model:  helpful_cuscus
Created model:  lemon_hornet
Created model:  asparagus_dodo
Created model:  affable_dachshund
Created model:  fair_platypus
Created model:  skinny_eel
Created model:  tireless_inchworm
Created model:  chirpy_agouti
Created model:  grinning_malamute
Created model:  masked_quetzal
Created model:  tireless_bat
Created model:  quick_newt
Created model:  aboriginal_armadillo
Created model:  refreshing_mamba
Created model:  dashing_baboon
Created model:  flying_wallaby
Created model:  radiant_fox
Created model:  mighty_hornet
Created model:  scarlet_raccoon
Created model:  lurking_ringtail
[2K[2Kaboriginal_armadillo
[31m[EVAL] Best accuracy:54.93000030517578[0m
[2K[2Kaffable_dachshund
[31m[EVAL] Best accuracy:51.349998474121094[0m
[2K[2Kasparagus_dodo
[31m[EVAL] Best accuracy:53.7599983215332[0m
[2K[2Kchirpy_agouti
[31m[EVAL] Best accuracy:64.19999694824219[0m
[2K[2Kdashing_baboon
[31m[EVAL] Best accuracy:58.80999755859375[0m
[2K[2Kfair_platypus
[31m[EVAL] Best accuracy:53.369998931884766[0m
[2K[2Kflying_wallaby
[31m[EVAL] Best accuracy:63.80999755859375[0m
[2K[2Kgrinning_malamute
[31m[EVAL] Best accuracy:66.22999572753906[0m
[2K[2Khelpful_cuscus
[31m[EVAL] Best accuracy:63.62999725341797[0m
[2K[2Klemon_hornet
[31m[EVAL] Best accuracy:37.40999984741211[0m
[2K[2Klurking_ringtail
[31m[EVAL] Best accuracy:61.19999694824219[0m
[2K[2Kmasked_quetzal
[31m[EVAL] Best accuracy:34.20000076293945[0m
[2K[2Kmighty_hornet
[31m[EVAL] Best accuracy:56.05999755859375[0m
[2K[2Kquick_newt
[31m[EVAL] Best accuracy:60.2599983215332[0m
[2K[2Kradiant_fox
[31m[EVAL] Best accuracy:60.18000030517578[0m
[2K[2Krefreshing_mamba
[31m[EVAL] Best accuracy:64.44999694824219[0m
[2K[2Kscarlet_raccoon
[31m[EVAL] Best accuracy:49.34000015258789[0m
[2K[2Kskinny_eel
[31m[EVAL] Best accuracy:58.019996643066406[0m
[2K[2Ktireless_bat
[31m[EVAL] Best accuracy:45.119998931884766[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 5660.136939525604
ic| self.metadata["time_remaining"]: 80806.90288448334
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 56, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Ktireless_inchworm
[31m[EVAL] Best accuracy:57.18000030517578[0m
['parents.csv', 'helpful_cuscus', 'lemon_hornet', 'asparagus_dodo', 'affable_dachshund', 'fair_platypus', 'skinny_eel', 'tireless_inchworm', 'chirpy_agouti', 'grinning_malamute', 'masked_quetzal', 'tireless_bat', 'quick_newt', 'aboriginal_armadillo', 'refreshing_mamba', 'dashing_baboon', 'flying_wallaby', 'radiant_fox', 'mighty_hornet', 'scarlet_raccoon', 'lurking_ringtail', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 66.23
Child: [24.0, 88, 2.6, 10]
Old_chrom: [16.0, 64, 2.599999999999998, 10]
Diff: 0.09935898713661467
[16.0, 96, 2.65, 10]
Child: [32.0, 104, 2.75, 12]
Old_chrom: [48.0, 104, 2.7499999999999973, 12]
Diff: 0.08333334733053699
[40.0, 96, 2.7, 12]
Child: [32.0, 104, 2.5500000000000003, 11]
Old_chrom: [32.0, 112, 2.549999999999998, 9]
Diff: 0.05494506772269525
[24.0, 112, 2.6, 12]
Child: [32.0, 112, 2.7499999999999973, 16]
Old_chrom: [24.0, 96, 2.7499999999999973, 16]
Diff: 0.08012820512820512
[40.0, 104, 2.6999999999999975, 15]
Child: [40.0, 112, 2.549999999999998, 9]
Old_chrom: [32.0, 112, 2.549999999999998, 9]
Diff: 0.041666666666666664
[48.0, 104, 2.599999999999998, 9]
Child: [40.0, 96, 2.7499999999999973, 8]
Old_chrom: [40.0, 112, 2.7499999999999973, 8]
Diff: 0.038461538461538464
[32.0, 104, 2.7499999999999973, 8]
Child: [32.0, 104, 2.7499999999999973, 8]
Old_chrom: [40.0, 112, 2.7499999999999973, 8]
Diff: 0.060897435897435896
[40.0, 104, 2.6999999999999975, np.int64(8)]
Child: [40.0, 104, 2.6999999999999975, np.int64(8)]
Old_chrom: [40.0, 112, 2.7499999999999973, 8]
Diff: 0.07986467548985247
[48.0, 104, 2.6499999999999977, np.int64(8)]
Child: [48.0, 104, 2.6499999999999977, np.int64(8)]
Old_chrom: [36.0, 112, 2.6500000000000004, 9]
Diff: 0.09958792608511574
[48.0, 112, 2.6499999999999977, np.int64(9)]
Child: [24.0, 96, 2.7499999999999973, 16]
Old_chrom: [24.0, 72, 2.7499999999999973, 14]
Diff: 0.09340659340659341
[16.0, 96, 2.799999999999997, 15]
Child: [40.0, 112, 2.599999999999998, 10]
Old_chrom: [36.0, 112, 2.6500000000000004, 9]
Diff: 0.09932438244956104
[40.0, 112, 2.549999999999998, 9]
Child: [24.0, 112, 2.7499999999999973, 13]
Old_chrom: [24.0, 96, 2.7499999999999973, 16]
Diff: 0.09203296703296704
[32.0, 120, 2.7499999999999973, 14]
Created model:  charcoal_ostrich
Created model:  organic_newt
Created model:  muscular_dodo
Created model:  prompt_donkey
Created model:  scarlet_moth
Created model:  bright_urchin
Created model:  bronze_turtle
Created model:  olive_jackrabbit
Created model:  flat_bandicoot
Created model:  pastel_hound
Created model:  astonishing_bustard
Created model:  eccentric_hummingbird
Created model:  cheerful_macaw
Created model:  papaya_ladybug
Created model:  spiritual_cricket
Created model:  heretic_otter
Created model:  stalwart_poodle
Created model:  fine_dove
Created model:  armored_alligator
Created model:  ultramarine_coyote
[2K[2Karmored_alligator
[31m[EVAL] Best accuracy:53.8599967956543[0m
[2K[2Kastonishing_bustard
[31m[EVAL] Best accuracy:55.21999740600586[0m
[2K[2Kbright_urchin
[31m[EVAL] Best accuracy:52.939998626708984[0m
[2K[2Kbronze_turtle
[31m[EVAL] Best accuracy:55.63999938964844[0m
[2K[2Kcharcoal_ostrich
[31m[EVAL] Best accuracy:57.8599967956543[0m
[2K[2Kcheerful_macaw
[31m[EVAL] Best accuracy:62.22999954223633[0m
[2K[2Keccentric_hummingbird
[31m[EVAL] Best accuracy:59.44999694824219[0m
[2K[2Kfine_dove
[31m[EVAL] Best accuracy:61.0[0m
[2K[2Kflat_bandicoot
[31m[EVAL] Best accuracy:47.72999954223633[0m
[2K[2Kheretic_otter
[31m[EVAL] Best accuracy:56.14999771118164[0m
[2K[2Kmuscular_dodo
[31m[EVAL] Best accuracy:50.029998779296875[0m
[2K[2Kolive_jackrabbit
[31m[EVAL] Best accuracy:62.6099967956543[0m
[2K[2Korganic_newt
[31m[EVAL] Best accuracy:64.70999908447266[0m
[2K[2Kpapaya_ladybug
[31m[EVAL] Best accuracy:58.73999786376953[0m
[2K[2Kpastel_hound
[31m[EVAL] Best accuracy:62.0[0m
[2K[2Kprompt_donkey
[31m[EVAL] Best accuracy:56.18000030517578[0m
[2K[2Kscarlet_moth
[31m[EVAL] Best accuracy:55.119998931884766[0m
[2K[2Kspiritual_cricket
[31m[EVAL] Best accuracy:67.56999969482422[0m
[2K[2Kstalwart_poodle
[31m[EVAL] Best accuracy:53.30999755859375[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 56, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 56, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 56, 'WA': 40.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 8427.012625455856
ic| self.metadata["time_remaining"]: 80806.90288448334
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 71.35,
               'codename': 'Volga',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_1/tests_Volga_22_10_2024_00_43/Generation_3/ultramarine_coyote',
               'input_shape': [50000, 20, 20, 20],
               'mode': 'NAS',
               'num_classes': 7,
               'test_type': 'T1_Proxy/seed_1',
               'time_remaining': 72379.6511862278,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| unique_values: array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ],
                         dtype=float32)
ic| C: 1
ic| H: 9
ic| PH: 1
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f1d9ee50700>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1d9ee51a80>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1d9ee51a20>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1d9ee50cd0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f1d8771aa10>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f1d9e917820>,
                 ToTensor(),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f1d9e917460>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['cornflower_seagull',
                  'nice_copperhead',
                  'gorgeous_stallion',
                  'fast_teal',
                  'alluring_trogon',
                  'bizarre_emu',
                  'macho_cricket',
                  'amber_marmot',
                  'pretty_capybara',
                  'spiked_gorilla']
ic| params: [56.0, 64, 2.1999999999999993, 12, 8]
ic| params: [40.0, 112, 2.0999999999999996, 20, 8]
ic| params: [64.0, 64, 2.1999999999999993, 18, 8]
ic| params: [56.0, 80, 2.799999999999997, 22, 8]
ic| params: [48.0, 120, 2.799999999999997, 9, 8]
ic| params: [48.0, 104, 2.3499999999999988, 10, 8]
ic| params: [56.0, 80, 2.4999999999999982, 21, 8]
ic| params: [24.0, 112, 2.549999999999998, 21, 8]
ic| params: [16.0, 112, 2.599999999999998, 22, 8]
ic| params: [48.0, 96, 2.7499999999999973, 12, 8]
ic| individuals: ['cornflower_seagull',
                  'nice_copperhead',
                  'gorgeous_stallion',
                  'fast_teal',
                  'alluring_trogon',
                  'bizarre_emu',
                  'macho_cricket',
                  'amber_marmot',
                  'pretty_capybara',
                  'spiked_gorilla']
ic| params_dict: {'alluring_trogon': [48.0, 120, 2.799999999999997, 9, 8],
                  'amber_marmot': [24.0, 112, 2.549999999999998, 21, 8],
                  'bizarre_emu': [48.0, 104, 2.3499999999999988, 10, 8],
                  'cornflower_seagull': [56.0, 64, 2.1999999999999993, 12, 8],
                  'fast_teal': [56.0, 80, 2.799999999999997, 22, 8],
                  'gorgeous_stallion': [64.0, 64, 2.1999999999999993, 18, 8],
                  'macho_cricket': [56.0, 80, 2.4999999999999982, 21, 8],
                  'nice_copperhead': [40.0, 112, 2.0999999999999996, 20, 8],
                  'pretty_capybara': [16.0, 112, 2.599999999999998, 22, 8],
                  'spiked_gorilla': [48.0, 96, 2.7499999999999973, 12, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ee50700>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ee51a80>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ee51a20>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ee50cd0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d8771aa10>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9e917820>,
                                                ToTensor(),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9e917460>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 1'
ic| f"selected transform {train_transform}": ('selected transform [RandAugment(interpolation=InterpolationMode.NEAREST, '
                                              'num_ops=2, magnitude=9, num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| mode: 'T1'
ic| f"Mode {mode}": 'Mode T1'
ic| get_gpu_memory(0): 41488089088
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 69818.18588209152
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 80, 'WA': 16.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kultramarine_coyote
[31m[EVAL] Best accuracy:50.84000015258789[0m
['parents.csv', 'charcoal_ostrich', 'organic_newt', 'muscular_dodo', 'prompt_donkey', 'scarlet_moth', 'bright_urchin', 'bronze_turtle', 'olive_jackrabbit', 'flat_bandicoot', 'pastel_hound', 'astonishing_bustard', 'eccentric_hummingbird', 'cheerful_macaw', 'papaya_ladybug', 'spiritual_cricket', 'heretic_otter', 'stalwart_poodle', 'fine_dove', 'armored_alligator', 'ultramarine_coyote', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 67.57
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_1/tests_Volga_22_10_2024_00_43/Generation_3/spiritual_cricket/config.yaml

=== Training ===
  Allotted compute time remaining: ~20h,6m,19s
Early stopping at epoch 99
[31m[EVAL] Best accuracy:83.7699966430664[0m

=== Predicting ===
  Allotted compute time remaining: ~19h,29m,50s

========== Dataset   Sokoto   =============================================
  Metadata:
   - input_shape         : [50000, 1, 9, 9]
   - codename            : Sokoto
   - benchmark           : 0.0
   - num_classes         : 9
   - time_remaining      : 70189.42455410957

=== Processing Data ===
  Allotted compute time remaining: ~19h,29m,49s

=== Performing NAS ===
  Allotted compute time remaining: ~19h,23m,38s
spawn
Created model:  careful_guppy
Created model:  ludicrous_dolphin
Created model:  lemon_marmot
Created model:  magnetic_capybara
Created model:  savvy_honeybee
Created model:  gifted_worm
Created model:  ultramarine_asp
Created model:  upbeat_coucal
Created model:  amusing_oryx
Created model:  violet_bettong
Created model:  alluring_parrot
Created model:  nostalgic_groundhog
Created model:  zippy_mammoth
Created model:  sensible_parrot
Created model:  aspiring_whippet
Created model:  dynamic_fox
Created model:  hilarious_raccoon
Created model:  tangerine_orangutan
Created model:  gainful_manul
Created model:  slim_ammonite
[2K[2Kalluring_parrot
[31m[EVAL] Best accuracy:12.779999732971191[0m
[2K[2Kamusing_oryx
[31m[EVAL] Best accuracy:13.299999237060547[0m
[2K[2Kaspiring_whippet
[31m[EVAL] Best accuracy:13.9399995803833[0m
[2K[2Kcareful_guppy
[31m[EVAL] Best accuracy:11.979999542236328[0m
[2K[2Kdynamic_fox
[31m[EVAL] Best accuracy:11.50999927520752[0m
[2K[2Kgainful_manul
[31m[EVAL] Best accuracy:16.760000228881836[0m
[2K[2Kgifted_worm
[31m[EVAL] Best accuracy:11.289999961853027[0m
[2K[2Khilarious_raccoon
[31m[EVAL] Best accuracy:12.09999942779541[0m
[2K[2Klemon_marmot
[31m[EVAL] Best accuracy:11.779999732971191[0m
[2K[2Kludicrous_dolphin
[31m[EVAL] Best accuracy:11.34999942779541[0m
[2K[2Kmagnetic_capybara
[31m[EVAL] Best accuracy:11.460000038146973[0m
[2K[2Knostalgic_groundhog
[31m[EVAL] Best accuracy:11.460000038146973[0m
[2K[2Ksavvy_honeybee
[31m[EVAL] Best accuracy:13.039999961853027[0m
[2K[2Ksensible_parrot
[31m[EVAL] Best accuracy:12.789999961853027[0m
[2K[2Kslim_ammonite
[31m[EVAL] Best accuracy:13.139999389648438[0m
[2K[2Ktangerine_orangutan
[31m[EVAL] Best accuracy:11.449999809265137[0m
[2K[2Kultramarine_asp
[31m[EVAL] Best accuracy:11.449999809265137[0m
[2K[2Kupbeat_coucal
[31m[EVAL] Best accuracy:13.369999885559082[0m
[2K[2Kviolet_bettong
[31m[EVAL] Best accuracy:11.309999465942383[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 80, 'WA': 16.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 80, 'WA': 16.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 80, 'WA': 16.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 3167.7131412029266
ic| self.metadata["time_remaining"]: 69818.18588209152
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 80, 'WA': 16.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 80, 'WA': 16.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 80, 'WA': 16.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 40.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kzippy_mammoth
[31m[EVAL] Best accuracy:14.289999961853027[0m
['careful_guppy', 'ludicrous_dolphin', 'lemon_marmot', 'magnetic_capybara', 'savvy_honeybee', 'gifted_worm', 'ultramarine_asp', 'upbeat_coucal', 'amusing_oryx', 'violet_bettong', 'alluring_parrot', 'nostalgic_groundhog', 'zippy_mammoth', 'sensible_parrot', 'aspiring_whippet', 'dynamic_fox', 'hilarious_raccoon', 'tangerine_orangutan', 'gainful_manul', 'slim_ammonite', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 16.76
Child: [24.0, 104, 2.4000000000000004, 11]
Old_chrom: [32.0, 104, 2.3999999999999986, 9]
Diff: 0.07738096380962131
[24.0, 112, 2.3500000000000005, 12]
Child: [24.0, 80, 2.35, 11]
Old_chrom: [24.0, 112, 2.3500000000000005, 12]
Diff: 0.09478022549455425
[24.0, 72, 2.4, 12]
Child: [24.0, 96, 2.6, 14]
Old_chrom: [32.0, 96, 2.6, 12]
Diff: 0.07738095238095238
[24.0, 104, 2.65, 15]
Child: [20.0, 72, 2.45, 12]
Old_chrom: [28.0, 72, 2.45, 10]
Diff: 0.07738095238095238
[28.0, 80, 2.5, 11]
Child: [28.0, 80, 2.5, 11]
Old_chrom: [28.0, 72, 2.45, 10]
Diff: 0.09772181834699534
[36.0, 80, 2.5, 12]
Child: [16.0, 104, 2.3999999999999986, 12]
Old_chrom: [16.0, 104, 2.3999999999999986, 12]
Diff: 0.0
[np.int64(16), 96, 2.3499999999999988, 13]
Child: [np.int64(16), 96, 2.3499999999999988, 13]
Old_chrom: [16.0, 104, 2.3999999999999986, 12]
Diff: 0.09772181834699534
[np.int64(16), 104, 2.299999999999999, 13]
Child: [32.0, 88, 2.3999999999999986, 9]
Old_chrom: [32.0, 104, 2.3999999999999986, 9]
Diff: 0.038461538461538464
[32.0, 88, 2.3999999999999986, 8]
Child: [32.0, 88, 2.3999999999999986, 8]
Old_chrom: [32.0, 104, 2.3999999999999986, 9]
Diff: 0.05631868131868132
[24.0, 88, 2.3999999999999986, 8]
Child: [24.0, 88, 2.3999999999999986, 8]
Old_chrom: [32.0, 104, 2.3999999999999986, 9]
Diff: 0.09798534798534797
[16.0, 96, 2.3499999999999988, 8]
Child: [32.0, 32, 2.4499999999999984, 9]
Old_chrom: [24.0, 32, 2.4499999999999984, 11]
Diff: 0.07738095238095238
[32.0, 40, 2.4999999999999982, 10]
Child: [32.0, 56, 2.3999999999999986, 12]
Old_chrom: [24.0, 72, 2.4, 12]
Diff: 0.08012821502572275
[40.0, 48, 2.4499999999999984, 11]
Child: [32.0, 88, 2.3999999999999986, 12]
Old_chrom: [32.0, 104, 2.3999999999999986, 9]
Diff: 0.09203296703296704
[40.0, 80, 2.3999999999999986, 13]
Child: [24.0, 32, 2.3999999999999986, 12]
Old_chrom: [24.0, 32, 2.4499999999999984, 11]
Diff: 0.07849104911622609
[32.0, 80, 2.3999999999999986, 11]
Child: [32.0, 80, 2.3999999999999986, 11]
Old_chrom: [32.0, 104, 2.3999999999999986, 9]
Diff: 0.09340659340659341
[40.0, 88, 2.3999999999999986, 11]
Child: [32.0, 56, 2.799999999999997, 15]
Old_chrom: [32.0, 88, 2.799999999999997, 15]
Diff: 0.07692307692307693
[32.0, 56, 2.799999999999997, 16]
Child: [32.0, 56, 2.799999999999997, 16]
Old_chrom: [32.0, 88, 2.799999999999997, 15]
Diff: 0.09478021978021978
[32.0, 48, 2.7499999999999973, 16]
Child: [24.0, 56, 2.249999999999999, 11]
Old_chrom: [32.0, 56, 2.249999999999999, 9]
Diff: 0.07738095238095238
[16.0, 64, 2.299999999999999, 12]
Child: [32.0, 88, 2.4499999999999984, 11]
Old_chrom: [28.0, 72, 2.45, 10]
Diff: 0.07715202608068358
[24.0, 80, 2.3999999999999986, 12]
Child: [24.0, 80, 2.3999999999999986, 12]
Old_chrom: [16.0, 104, 2.3999999999999986, 12]
Diff: 0.09935897435897437
[16.0, 88, 2.4499999999999984, 12]
Created model:  cobalt_wildebeest
Created model:  impartial_elk
Created model:  garrulous_rat
Created model:  nostalgic_rattlesnake
Created model:  stereotyped_raccoon
Created model:  ubiquitous_dachshund
Created model:  spiked_caracara
Created model:  yellow_bat
Created model:  aspiring_rat
Created model:  loose_rabbit
Created model:  accomplished_stallion
Created model:  almond_cheetah
Created model:  gainful_cicada
Created model:  faithful_oxpecker
Created model:  charming_kittiwake
Created model:  fine_cicada
Created model:  pastel_otter
Created model:  blazing_cuckoo
Created model:  nice_taipan
Created model:  loyal_clam
[2K[2Kaccomplished_stallion
[31m[EVAL] Best accuracy:12.319999694824219[0m
[2K[2Kalmond_cheetah
[31m[EVAL] Best accuracy:12.65999984741211[0m
[2K[2Kaspiring_rat
[31m[EVAL] Best accuracy:11.529999732971191[0m
[2K[2Kblazing_cuckoo
[31m[EVAL] Best accuracy:13.619999885559082[0m
[2K[2Kcharming_kittiwake
[31m[EVAL] Best accuracy:11.569999694824219[0m
[2K[2Kcobalt_wildebeest
[31m[EVAL] Best accuracy:12.839999198913574[0m
[2K[2Kfaithful_oxpecker
[31m[EVAL] Best accuracy:16.8799991607666[0m
[2K[2Kfine_cicada
[31m[EVAL] Best accuracy:14.369999885559082[0m
[2K[2Kgainful_cicada
[31m[EVAL] Best accuracy:11.389999389648438[0m
[2K[2Kgarrulous_rat
[31m[EVAL] Best accuracy:11.559999465942383[0m
[2K[2Kimpartial_elk
[31m[EVAL] Best accuracy:14.929999351501465[0m
[2K[2Kloose_rabbit
[31m[EVAL] Best accuracy:12.469999313354492[0m
[2K[2Kloyal_clam
[31m[EVAL] Best accuracy:12.229999542236328[0m
[2K[2Knice_taipan
[31m[EVAL] Best accuracy:15.420000076293945[0m
[2K[2Knostalgic_rattlesnake
[31m[EVAL] Best accuracy:11.549999237060547[0m
[2K[2Kpastel_otter
[31m[EVAL] Best accuracy:11.65999984741211[0m
[2K[2Kspiked_caracara
[31m[EVAL] Best accuracy:11.319999694824219[0m
[2K[2Kstereotyped_raccoon
[31m[EVAL] Best accuracy:12.569999694824219[0m
[2K[2Kubiquitous_dachshund
[31m[EVAL] Best accuracy:11.59999942779541[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 40.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 40.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 40.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6519.073885679245
ic| self.metadata["time_remaining"]: 69818.18588209152
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 40.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 40.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 88, 'WA': 40.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 72, 'WA': 16.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kyellow_bat
[31m[EVAL] Best accuracy:11.59999942779541[0m
['parents.csv', 'cobalt_wildebeest', 'impartial_elk', 'garrulous_rat', 'nostalgic_rattlesnake', 'stereotyped_raccoon', 'ubiquitous_dachshund', 'spiked_caracara', 'yellow_bat', 'aspiring_rat', 'loose_rabbit', 'accomplished_stallion', 'almond_cheetah', 'gainful_cicada', 'faithful_oxpecker', 'charming_kittiwake', 'fine_cicada', 'pastel_otter', 'blazing_cuckoo', 'nice_taipan', 'loyal_clam', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 16.88
Child: [24.0, 80, 2.5500000000000003, 9]
Old_chrom: [16.0, 80, 2.549999999999998, 9]
Diff: 0.04166667944430697
[32.0, 80, 2.6, 9]
Child: [48.0, 96, 2.4000000000000004, 9]
Old_chrom: [32.0, 96, 2.3999999999999986, 9]
Diff: 0.08333334476200226
[56.0, 88, 2.45, 9]
Child: [40.0, 104, 2.4000000000000004, 12]
Old_chrom: [32.0, 104, 2.3999999999999986, 9]
Diff: 0.09523810666676416
[48.0, 104, 2.3500000000000005, 12]
Child: [44.0, 88, 2.3000000000000003, 11]
Old_chrom: [28.0, 88, 2.3000000000000003, 11]
Diff: 0.08333333333333333
[44.0, 88, 2.2500000000000004, 11]
Child: [56.0, 104, 2.4000000000000004, 12]
Old_chrom: [48.0, 112, 2.3999999999999986, 14]
Diff: 0.09661173304039053
[64.0, 104, 2.3500000000000005, 13]
Child: [36.0, 96, 2.3000000000000003, 13]
Old_chrom: [28.0, 88, 2.3000000000000003, 11]
Diff: 0.0966117216117216
[44.0, 88, 2.35, 13]
Child: [16.0, 80, 2.1999999999999993, 9]
Old_chrom: [24.0, 80, 2.1999999999999993, 12]
Diff: 0.09523809523809523
[16.0, 72, 2.1999999999999993, 9]
Child: [32.0, 88, 2.3999999999999986, 9]
Old_chrom: [32.0, 104, 2.3999999999999986, 9]
Diff: 0.038461538461538464
[32.0, 88, 2.3999999999999986, 9]
Child: [32.0, 88, 2.3999999999999986, 9]
Old_chrom: [32.0, 104, 2.3999999999999986, 9]
Diff: 0.038461538461538464
[40.0, 88, 2.3499999999999988, 8]
Child: [24.0, 96, 2.3999999999999986, 12]
Old_chrom: [16.0, 104, 2.3999999999999986, 12]
Diff: 0.060897435897435896
[16.0, 96, 2.3499999999999988, 11]
Child: [16.0, 96, 2.3499999999999988, 11]
Old_chrom: [16.0, 104, 2.3999999999999986, 12]
Diff: 0.09772181834699534
[np.int64(16), 104, 2.3999999999999986, 12]
Child: [48.0, 112, 2.3999999999999986, 9]
Old_chrom: [48.0, 112, 2.3999999999999986, 14]
Diff: 0.08928571428571429
[40.0, 120, 2.3999999999999986, 10]
Child: [24.0, 80, 2.3999999999999986, 9]
Old_chrom: [32.0, 104, 2.3999999999999986, 9]
Diff: 0.09935897435897437
[16.0, 88, 2.3499999999999988, 10]
Child: [64.0, 112, 2.3999999999999986, 9]
Old_chrom: [64.0, 88, 2.3999999999999986, 9]
Diff: 0.057692307692307696
[64.0, 112, 2.4499999999999984, 8]
Child: [24.0, 112, 2.3999999999999986, 12]
Old_chrom: [16.0, 104, 2.3999999999999986, 12]
Diff: 0.060897435897435896
[16.0, 120, 2.3499999999999988, 11]
Child: [16.0, 120, 2.3499999999999988, 11]
Old_chrom: [16.0, 88, 2.3499999999999988, 10]
Diff: 0.09478021978021978
[24.0, 112, 2.299999999999999, 12]
Created model:  hysterical_rat
Created model:  violet_falcon
Created model:  wise_woodlouse
Created model:  brainy_wren
Created model:  ultraviolet_lynx
Created model:  opalescent_catfish
Created model:  utopian_chupacabra
Created model:  gentle_bird
Created model:  tasteful_barnacle
Created model:  axiomatic_kiwi
Created model:  aromatic_coucal
Created model:  amethyst_earthworm
Created model:  jasmine_yak
Created model:  futuristic_panda
Created model:  placid_rattlesnake
Created model:  uppish_walrus
Created model:  enlightened_deer
Created model:  uncovered_scallop
Created model:  red_bobcat
Created model:  exotic_tiger
[2K[2Kamethyst_earthworm
[31m[EVAL] Best accuracy:12.710000038146973[0m
[2K[2Karomatic_coucal
[31m[EVAL] Best accuracy:11.969999313354492[0m
[2K[2Kaxiomatic_kiwi
[31m[EVAL] Best accuracy:11.829999923706055[0m
[2K[2Kbrainy_wren
[31m[EVAL] Best accuracy:12.15999984741211[0m
[2K[2Kenlightened_deer
[31m[EVAL] Best accuracy:11.449999809265137[0m
[2K[2Kexotic_tiger
[31m[EVAL] Best accuracy:12.229999542236328[0m
[2K[2Kfuturistic_panda
[31m[EVAL] Best accuracy:11.25[0m
[2K[2Kgentle_bird
[31m[EVAL] Best accuracy:14.239999771118164[0m
[2K[2Khysterical_rat
[31m[EVAL] Best accuracy:11.380000114440918[0m
[2K[2Kjasmine_yak
[31m[EVAL] Best accuracy:11.399999618530273[0m
[2K[2Kopalescent_catfish
[31m[EVAL] Best accuracy:12.34999942779541[0m
[2K[2Kplacid_rattlesnake
[31m[EVAL] Best accuracy:12.199999809265137[0m
[2K[2Kred_bobcat
[31m[EVAL] Best accuracy:11.799999237060547[0m
[2K[2Ktasteful_barnacle
[31m[EVAL] Best accuracy:11.549999237060547[0m
[2K[2Kultraviolet_lynx
[31m[EVAL] Best accuracy:11.519999504089355[0m
[2K[2Kuncovered_scallop
[31m[EVAL] Best accuracy:12.979999542236328[0m
[2K[2Kuppish_walrus
[31m[EVAL] Best accuracy:11.719999313354492[0m
[2K[2Kutopian_chupacabra
[31m[EVAL] Best accuracy:13.029999732971191[0m
[2K[2Kviolet_falcon
[31m[EVAL] Best accuracy:11.519999504089355[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 72, 'WA': 16.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 72, 'WA': 16.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 72, 'WA': 16.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 9811.782945156097
ic| self.metadata["time_remaining"]: 69818.18588209152
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 0.0,
               'codename': 'Sokoto',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_1/tests_Sokoto_22_10_2024_03_46/Generation_3/wise_woodlouse',
               'input_shape': [50000, 1, 9, 9],
               'mode': 'NAS',
               'num_classes': 9,
               'test_type': 'T1_Proxy/seed_1',
               'time_remaining': 60006.1212720871,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| unique_values: array([0.09411765, 0.09803922, 0.10196079, 0.10588235, 0.10980392,
                          0.11372549, 0.11764706, 0.12156863, 0.1254902 , 0.12941177,
                          0.13333334, 0.13725491, 0.14117648, 0.14509805, 0.14901961,
                          0.15294118, 0.15686275, 0.16078432, 0.16470589, 0.16862746,
                          0.17254902, 0.1764706 , 0.18039216, 0.18431373, 0.1882353 ,
                          0.19215687, 0.19607843, 0.2       , 0.20392157, 0.20784314,
                          0.21176471, 0.21568628, 0.21960784, 0.22352941, 0.22745098,
                          0.23137255, 0.23529412, 0.23921569, 0.24313726, 0.24705882,
                          0.2509804 , 0.25490198, 0.25882354, 0.2627451 , 0.26666668,
                          0.27058825, 0.27450982, 0.2784314 , 0.28235295, 0.28627452,
                          0.2901961 , 0.29411766, 0.29803923, 0.3019608 , 0.30588236,
                          0.30980393, 0.3137255 , 0.31764707, 0.32156864, 0.3254902 ,
                          0.32941177, 0.33333334, 0.3372549 , 0.34117648, 0.34509805,
                          0.34901962, 0.3529412 , 0.35686275, 0.36078432, 0.3647059 ,
                          0.36862746, 0.37254903, 0.3764706 , 0.38039216, 0.38431373,
                          0.3882353 , 0.39215687, 0.39607844, 0.4       , 0.40392157,
                          0.40784314, 0.4117647 , 0.41568628, 0.41960785, 0.42352942,
                          0.42745098, 0.43137255, 0.43529412, 0.4392157 , 0.44313726,
                          0.44705883, 0.4509804 , 0.45490196, 0.45882353, 0.4627451 ,
                          0.46666667, 0.47058824, 0.4745098 , 0.47843137, 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7411765 ,
                          0.74509805, 0.7490196 , 0.7529412 , 0.75686276, 0.7647059 ,
                          0.76862746, 0.77254903, 0.7764706 , 0.78431374, 0.7882353 ,
                          0.7921569 , 0.79607844, 0.8       , 0.8039216 , 0.8156863 ,
                          0.81960785, 0.8235294 , 0.827451  , 0.83137256, 0.8392157 ,
                          0.8509804 , 0.85882354, 0.8627451 , 0.8666667 , 0.87058824,
                          0.8784314 , 0.88235295, 0.8901961 , 0.89411765, 0.90588236,
                          0.9098039 , 0.9137255 , 0.92156863, 0.92941177, 0.93333334,
                          0.9411765 , 0.9490196 , 0.9529412 , 0.972549  ], dtype=float32)
ic| C: 3
ic| H: 32
ic| PH: 4
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f1d9ebe6380>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1d9ebe7250>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1d9ebe4460>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f1d9ebe7340>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f1d8771be50>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f1e30a4b910>,
                 ToTensor(),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f1e30aa93f0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['enigmatic_bonobo',
                  'hilarious_tuatara',
                  'eminent_groundhog',
                  'coral_perch',
                  'humongous_koala',
                  'weightless_labradoodle',
                  'purple_eagle',
                  'aquatic_spaniel',
                  'big_polecat',
                  'terrestrial_snail']
ic| params: [64.0, 112, 2.799999999999997, 8, 8]
ic| params: [40.0, 112, 2.849999999999997, 21, 8]
ic| params: [32.0, 56, 2.799999999999997, 22, 8]
ic| params: [64.0, 72, 2.05, 14, 8]
ic| params: [56.0, 56, 2.249999999999999, 17, 8]
ic| params: [64.0, 88, 2.599999999999998, 14, 8]
ic| params: [64.0, 72, 2.1999999999999993, 8, 8]
ic| params: [32.0, 56, 2.899999999999997, 8, 8]
ic| params: [16.0, 72, 2.1499999999999995, 21, 8]
ic| params: [48.0, 112, 2.899999999999997, 8, 8]
ic| individuals: ['enigmatic_bonobo',
                  'hilarious_tuatara',
                  'eminent_groundhog',
                  'coral_perch',
                  'humongous_koala',
                  'weightless_labradoodle',
                  'purple_eagle',
                  'aquatic_spaniel',
                  'big_polecat',
                  'terrestrial_snail']
ic| params_dict: {'aquatic_spaniel': [32.0, 56, 2.899999999999997, 8, 8],
                  'big_polecat': [16.0, 72, 2.1499999999999995, 21, 8],
                  'coral_perch': [64.0, 72, 2.05, 14, 8],
                  'eminent_groundhog': [32.0, 56, 2.799999999999997, 22, 8],
                  'enigmatic_bonobo': [64.0, 112, 2.799999999999997, 8, 8],
                  'hilarious_tuatara': [40.0, 112, 2.849999999999997, 21, 8],
                  'humongous_koala': [56.0, 56, 2.249999999999999, 17, 8],
                  'purple_eagle': [64.0, 72, 2.1999999999999993, 8, 8],
                  'terrestrial_snail': [48.0, 112, 2.899999999999997, 8, 8],
                  'weightless_labradoodle': [64.0, 88, 2.599999999999998, 14, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ebe6380>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ebe7250>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ebe4460>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d9ebe7340>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1d8771be50>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30a4b910>,
                                                ToTensor(),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f1e30aa93f0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/data_processor.py:608: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 7'
ic| f"selected transform {train_transform}": ('selected transform [AugMix(interpolation=InterpolationMode.BILINEAR, '
                                              'severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)]')
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| mode: 'T1'
ic| f"Mode {mode}": 'Mode T1'
ic| get_gpu_memory(0): 41546809344
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 57199.14798569679
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 72, 'WA': 48.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwise_woodlouse
[31m[EVAL] Best accuracy:11.319999694824219[0m
['parents.csv', 'hysterical_rat', 'violet_falcon', 'wise_woodlouse', 'brainy_wren', 'ultraviolet_lynx', 'opalescent_catfish', 'utopian_chupacabra', 'gentle_bird', 'tasteful_barnacle', 'axiomatic_kiwi', 'aromatic_coucal', 'amethyst_earthworm', 'jasmine_yak', 'futuristic_panda', 'placid_rattlesnake', 'uppish_walrus', 'enlightened_deer', 'uncovered_scallop', 'red_bobcat', 'exotic_tiger', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 14.24
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_1/tests_Sokoto_22_10_2024_03_46/Generation_2/faithful_oxpecker/config.yaml

=== Training ===
  Allotted compute time remaining: ~16h,40m,6s
[31m[EVAL] Best accuracy:54.80999755859375[0m

=== Predicting ===
  Allotted compute time remaining: ~15h,58m,28s

========== Dataset  CIFAR10   =============================================
  Metadata:
   - input_shape         : [50000, 3, 32, 32]
   - codename            : CIFAR10
   - benchmark           : 90.65
   - num_classes         : 10
   - time_remaining      : 57507.20253491402

=== Processing Data ===
  Allotted compute time remaining: ~15h,58m,27s

=== Performing NAS ===
  Allotted compute time remaining: ~15h,53m,19s
spawn
Created model:  hidden_ringtail
Created model:  large_rabbit
Created model:  perfect_pronghorn
Created model:  nebulous_eel
Created model:  clay_oriole
Created model:  savvy_rooster
Created model:  tremendous_eagle
Created model:  spirited_curassow
Created model:  delectable_dragon
Created model:  unnatural_lyrebird
Created model:  happy_dragon
Created model:  conscious_dingo
Created model:  resourceful_perch
Created model:  urban_oxpecker
Created model:  ethereal_lionfish
Created model:  certain_kagu
Created model:  tan_mantis
Created model:  cinnamon_angelfish
Created model:  righteous_ladybug
Created model:  pristine_ostrich
[2K[2Kcertain_kagu
[31m[EVAL] Best accuracy:68.05999755859375[0m
[2K[2Kcinnamon_angelfish
[31m[EVAL] Best accuracy:68.47999572753906[0m
[2K[2Kclay_oriole
[31m[EVAL] Best accuracy:76.48999786376953[0m
[2K[2Kconscious_dingo
[31m[EVAL] Best accuracy:76.25[0m
[2K[2Kdelectable_dragon
[31m[EVAL] Best accuracy:76.02999877929688[0m
[2K[2Kethereal_lionfish
[31m[EVAL] Best accuracy:67.50999450683594[0m
[2K[2Khappy_dragon
[31m[EVAL] Best accuracy:74.20999908447266[0m
[2K[2Khidden_ringtail
[31m[EVAL] Best accuracy:61.46999740600586[0m
[2K[2Klarge_rabbit
[31m[EVAL] Best accuracy:71.9000015258789[0m
[2K[2Knebulous_eel
[31m[EVAL] Best accuracy:67.27999877929688[0m
[2K[2Kperfect_pronghorn
[31m[EVAL] Best accuracy:74.70999908447266[0m
[2K[2Kpristine_ostrich
[31m[EVAL] Best accuracy:76.00999450683594[0m
[2K[2Kresourceful_perch
[31m[EVAL] Best accuracy:68.52999877929688[0m
[2K[2Krighteous_ladybug
[31m[EVAL] Best accuracy:72.47000122070312[0m
[2K[2Ksavvy_rooster
[31m[EVAL] Best accuracy:71.50999450683594[0m
[2K[2Kspirited_curassow
[31m[EVAL] Best accuracy:70.04999542236328[0m
[2K[2Ktan_mantis
[31m[EVAL] Best accuracy:68.8499984741211[0m
[2K[2Ktremendous_eagle
[31m[EVAL] Best accuracy:72.33000183105469[0m
[2K[2Kunnatural_lyrebird
[31m[EVAL] Best accuracy:76.68999481201172[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 72, 'WA': 48.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 72, 'WA': 48.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 72, 'WA': 48.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6363.139098405838
ic| self.metadata["time_remaining"]: 57199.14798569679
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 72, 'WA': 48.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 72, 'WA': 48.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 72, 'WA': 48.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 48.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kurban_oxpecker
[31m[EVAL] Best accuracy:77.5199966430664[0m
['hidden_ringtail', 'large_rabbit', 'perfect_pronghorn', 'nebulous_eel', 'clay_oriole', 'savvy_rooster', 'tremendous_eagle', 'spirited_curassow', 'delectable_dragon', 'unnatural_lyrebird', 'happy_dragon', 'conscious_dingo', 'resourceful_perch', 'urban_oxpecker', 'ethereal_lionfish', 'certain_kagu', 'tan_mantis', 'cinnamon_angelfish', 'righteous_ladybug', 'pristine_ostrich', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.52
Child: [48.0, 88, 2.1499999999999995, 11]
Old_chrom: [48.0, 104, 2.15, 9]
Diff: 0.07417582989015864
[48.0, 88, 2.0999999999999996, 12]
Child: [48.0, 88, 2.0999999999999996, 12]
Old_chrom: [48.0, 112, 2.0999999999999996, 11]
Diff: 0.07554945054945056
[48.0, 80, 2.1499999999999995, 12]
Child: [64.0, 112, 2.1499999999999995, 9]
Old_chrom: [64.0, 112, 2.0999999999999996, 8]
Diff: 0.07849104911622609
[64.0, 120, 2.1999999999999993, 8]
Child: [16.0, 88, 2.1499999999999995, 17]
Old_chrom: [16.0, 88, 2.249999999999999, 17]
Diff: 0.08574929257125442
[16.0, 88, 2.0999999999999996, 18]
Child: [32.0, 120, 2.1499999999999995, 9]
Old_chrom: [32.0, 88, 2.1499999999999995, 9]
Diff: 0.07692307692307693
[24.0, 120, 2.0999999999999996, 9]
Child: [24.0, 120, 2.0999999999999996, 9]
Old_chrom: [32.0, 120, 2.0999999999999996, 8]
Diff: 0.05952380952380952
[32.0, 128, 2.05, 9]
Child: [32.0, 128, 2.05, 9]
Old_chrom: [32.0, 120, 2.0999999999999996, 8]
Diff: 0.09772181834699534
[32.0, 120, 2.05, 9]
Created model:  speedy_carp
Created model:  tunneling_dachshund
Created model:  inescapable_cockle
Created model:  khaki_mastodon
Created model:  abstract_oriole
Created model:  sassy_eel
Created model:  attentive_lemming
Created model:  fanatic_dragon
Created model:  eggplant_puffin
Created model:  strange_dolphin
Created model:  ultra_caiman
Created model:  rare_crane
Created model:  cream_llama
Created model:  straight_raptor
Created model:  giga_penguin
Created model:  deft_mink
Created model:  optimal_crocodile
Created model:  bulky_panther
Created model:  bulky_toucan
Created model:  zircon_penguin
[2K[2Kabstract_oriole
[31m[EVAL] Best accuracy:73.63999938964844[0m
[2K[2Kattentive_lemming
[31m[EVAL] Best accuracy:76.9000015258789[0m
[2K[2Kbulky_panther
[31m[EVAL] Best accuracy:76.5999984741211[0m
[2K[2Kbulky_toucan
[31m[EVAL] Best accuracy:74.91999816894531[0m
[2K[2Kcream_llama
[31m[EVAL] Best accuracy:72.30999755859375[0m
[2K[2Kdeft_mink
[31m[EVAL] Best accuracy:67.43000030517578[0m
[2K[2Keggplant_puffin
[31m[EVAL] Best accuracy:76.30999755859375[0m
[2K[2Kfanatic_dragon
[31m[EVAL] Best accuracy:75.33999633789062[0m
[2K[2Kgiga_penguin
[31m[EVAL] Best accuracy:75.2699966430664[0m
[2K[2Kinescapable_cockle
[31m[EVAL] Best accuracy:74.73999786376953[0m
[2K[2Kkhaki_mastodon
[31m[EVAL] Best accuracy:76.54000091552734[0m
[2K[2Koptimal_crocodile
[31m[EVAL] Best accuracy:75.40999603271484[0m
[2K[2Krare_crane
[31m[EVAL] Best accuracy:74.63999938964844[0m
[2K[2Ksassy_eel
[31m[EVAL] Best accuracy:56.72999954223633[0m
[2K[2Kspeedy_carp
[31m[EVAL] Best accuracy:76.62999725341797[0m
[2K[2Kstraight_raptor
[31m[EVAL] Best accuracy:77.75999450683594[0m
[2K[2Kstrange_dolphin
[31m[EVAL] Best accuracy:70.27999877929688[0m
[2K[2Ktunneling_dachshund
[31m[EVAL] Best accuracy:78.25999450683594[0m
[2K[2Kultra_caiman
[31m[EVAL] Best accuracy:72.8499984741211[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 48.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 48.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 48.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 12654.685980081558
ic| self.metadata["time_remaining"]: 57199.14798569679
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 48.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 48.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 80, 'WA': 48.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 32, 'WA': 32.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kzircon_penguin
[31m[EVAL] Best accuracy:67.6199951171875[0m
['parents.csv', 'speedy_carp', 'tunneling_dachshund', 'inescapable_cockle', 'khaki_mastodon', 'abstract_oriole', 'sassy_eel', 'attentive_lemming', 'fanatic_dragon', 'eggplant_puffin', 'strange_dolphin', 'ultra_caiman', 'rare_crane', 'cream_llama', 'straight_raptor', 'giga_penguin', 'deft_mink', 'optimal_crocodile', 'bulky_panther', 'bulky_toucan', 'zircon_penguin', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 78.26
Child: [24.0, 104, 2.3000000000000003, 9]
Old_chrom: [24.0, 96, 2.249999999999999, 8]
Diff: 0.09772181834699614
[32.0, 104, 2.3000000000000003, 8]
Child: [32.0, 104, 2.15, 11]
Old_chrom: [32.0, 88, 2.1499999999999995, 9]
Diff: 0.07417582989015864
[40.0, 96, 2.15, 10]
Child: [40.0, 96, 2.15, 10]
Old_chrom: [32.0, 88, 2.1499999999999995, 9]
Diff: 0.07875458446891322
[32.0, 104, 2.1, 9]
Child: [32.0, 104, 2.1, 9]
Old_chrom: [32.0, 88, 2.1499999999999995, 9]
Diff: 0.09909544472062143
[24.0, 96, 2.0500000000000003, 10]
Child: [32.0, 96, 2.1499999999999995, 8]
Old_chrom: [32.0, 88, 2.1499999999999995, 9]
Diff: 0.03708791208791209
[40.0, 88, 2.0999999999999996, 9]
Child: [48.0, 112, 2.1499999999999995, 10]
Old_chrom: [48.0, 112, 2.0999999999999996, 11]
Diff: 0.07849104911622609
[40.0, 112, 2.1999999999999993, 10]
Child: [40.0, 112, 2.1999999999999993, 10]
Old_chrom: [40.0, 112, 2.25, 10]
Diff: 0.060633906259083784
[48.0, 112, 2.1499999999999995, 11]
Child: [48.0, 112, 2.1499999999999995, 11]
Old_chrom: [48.0, 112, 2.0999999999999996, 11]
Diff: 0.06063390625908324
[40.0, 120, 2.1499999999999995, 10]
Child: [16.0, 80, 2.549999999999998, 10]
Old_chrom: [16.0, 80, 2.549999999999998, 13]
Diff: 0.05357142857142857
[16.0, 80, 2.549999999999998, 10]
Child: [16.0, 80, 2.549999999999998, 10]
Old_chrom: [16.0, 80, 2.549999999999998, 13]
Diff: 0.05357142857142857
[24.0, 88, 2.549999999999998, 11]
Child: [24.0, 88, 2.549999999999998, 11]
Old_chrom: [16.0, 80, 2.549999999999998, 13]
Diff: 0.0966117216117216
[24.0, 80, 2.549999999999998, 10]
Child: [24.0, 112, 2.3999999999999986, 14]
Old_chrom: [20.0, 104, 2.4000000000000004, 12]
Diff: 0.0757783997070572
[24.0, 112, 2.3499999999999988, 15]
Child: [48.0, 112, 2.3999999999999986, 8]
Old_chrom: [32.0, 112, 2.3999999999999986, 8]
Diff: 0.08333333333333333
[56.0, 104, 2.3499999999999988, np.int64(8)]
Child: [32.0, 80, 2.549999999999998, 8]
Old_chrom: [24.0, 80, 2.549999999999998, 10]
Diff: 0.07738095238095238
[32.0, 80, 2.599999999999998, 8]
Child: [24.0, 104, 2.0999999999999996, 11]
Old_chrom: [24.0, 96, 2.0500000000000003, 10]
Diff: 0.09772181834699506
[24.0, 104, 2.0999999999999996, 11]
Child: [24.0, 104, 2.549999999999998, 13]
Old_chrom: [16.0, 80, 2.549999999999998, 13]
Diff: 0.09935897435897437
[24.0, 104, 2.549999999999998, 13]
Child: [16.0, 80, 2.0999999999999996, 11]
Old_chrom: [24.0, 104, 2.0999999999999996, 11]
Diff: 0.09935897435897437
[16.0, 88, 2.05, 11]
Created model:  cheerful_wallaby
Created model:  brass_orca
Created model:  fearless_wapiti
Created model:  crazy_fossa
Created model:  amigurumi_dragon
Created model:  spiffy_oryx
Created model:  ultramarine_koala
Created model:  spectacular_cassowary
Created model:  exuberant_cuttlefish
Created model:  tidy_capybara
Created model:  idealistic_dolphin
Created model:  opal_mouse
Created model:  wonderful_jackal
Created model:  cherubic_vulture
Created model:  therapeutic_terrier
Created model:  righteous_peacock
Created model:  careful_foxhound
Created model:  happy_smilodon
Created model:  debonair_jaguar
Created model:  super_scorpion
[2K[2Kamigurumi_dragon
[31m[EVAL] Best accuracy:75.69999694824219[0m
[2K[2Kbrass_orca
[31m[EVAL] Best accuracy:73.86000061035156[0m
[2K[2Kcareful_foxhound
[31m[EVAL] Best accuracy:55.0[0m
[2K[2Kcheerful_wallaby
[31m[EVAL] Best accuracy:66.12999725341797[0m
[2K[2Kcherubic_vulture
[31m[EVAL] Best accuracy:75.80999755859375[0m
[2K[2Kcrazy_fossa
[31m[EVAL] Best accuracy:77.58999633789062[0m
[2K[2Kdebonair_jaguar
[31m[EVAL] Best accuracy:74.08999633789062[0m
[2K[2Kexuberant_cuttlefish
[31m[EVAL] Best accuracy:72.88999938964844[0m
[2K[2Kfearless_wapiti
[31m[EVAL] Best accuracy:58.37999725341797[0m
[2K[2Khappy_smilodon
[31m[EVAL] Best accuracy:73.06999969482422[0m
[2K[2Kidealistic_dolphin
[31m[EVAL] Best accuracy:74.50999450683594[0m
[2K[2Kopal_mouse
[31m[EVAL] Best accuracy:72.18999481201172[0m
[2K[2Krighteous_peacock
[31m[EVAL] Best accuracy:74.86000061035156[0m
[2K[2Kspectacular_cassowary
[31m[EVAL] Best accuracy:74.54999542236328[0m
[2K[2Kspiffy_oryx
[31m[EVAL] Best accuracy:76.18000030517578[0m
[2K[2Ksuper_scorpion
[31m[EVAL] Best accuracy:66.1199951171875[0m
[2K[2Ktherapeutic_terrier
[31m[EVAL] Best accuracy:76.83000183105469[0m
[2K[2Ktidy_capybara
[31m[EVAL] Best accuracy:71.0999984741211[0m
[2K[2Kultramarine_koala
[31m[EVAL] Best accuracy:59.57999801635742[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 32, 'WA': 32.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 32, 'WA': 32.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 32, 'WA': 32.0, 'WM': 2.05, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 18948.086015701294
ic| self.metadata["time_remaining"]: 57199.14798569679
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 90.65,
               'codename': 'CIFAR10',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_1/tests_CIFAR10_22_10_2024_07_17/Generation_3/wonderful_jackal',
               'input_shape': [50000, 3, 32, 32],
               'mode': 'NAS',
               'num_classes': 10,
               'test_type': 'T1_Proxy/seed_1',
               'time_remaining': 38250.66358089447,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

[2Kwonderful_jackal
[31m[EVAL] Best accuracy:70.80999755859375[0m
['parents.csv', 'cheerful_wallaby', 'brass_orca', 'fearless_wapiti', 'crazy_fossa', 'amigurumi_dragon', 'spiffy_oryx', 'ultramarine_koala', 'spectacular_cassowary', 'exuberant_cuttlefish', 'tidy_capybara', 'idealistic_dolphin', 'opal_mouse', 'wonderful_jackal', 'cherubic_vulture', 'therapeutic_terrier', 'righteous_peacock', 'careful_foxhound', 'happy_smilodon', 'debonair_jaguar', 'super_scorpion', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.59
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T1_Proxy/seed_1/tests_CIFAR10_22_10_2024_07_17/Generation_2/tunneling_dachshund/config.yaml

=== Training ===
  Allotted compute time remaining: ~10h,37m,30s
Early stopping at epoch 19
[31m[EVAL] Best accuracy:83.29000091552734[0m

=== Predicting ===
  Allotted compute time remaining: ~10h,21m,9s

rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1/labels
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1/predictions
rsync -avr --exclude='**/*x.npy' --exclude='**/train*.npy' --exclude='**/valid*.npy'   --include='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1/labels/
sending incremental file list
CIFAR10/
CIFAR10/cifar-10-python.tar.gz
CIFAR10/metadata
CIFAR10/test_y.npy
ImageNet16-120/
ImageNet16-120/metadata
ImageNet16-120/test_y.npy
Sudoku/
Sudoku/Example Image with Corresponding Sudoku Grid.png
Sudoku/README
Sudoku/metadata
Sudoku/test_y.npy
Sudoku/Sokoto/
Sudoku/Sokoto/augmentation_results.json
Sudoku/Sokoto/aug_0/
Sudoku/Sokoto/aug_0/student_best
Sudoku/Sokoto/aug_0/worklog.txt
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_1/
Sudoku/Sokoto/aug_1/student_best
Sudoku/Sokoto/aug_1/worklog.txt
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_2/
Sudoku/Sokoto/aug_2/student_best
Sudoku/Sokoto/aug_2/worklog.txt
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_3/
Sudoku/Sokoto/aug_3/student_best
Sudoku/Sokoto/aug_3/worklog.txt
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_4/
Sudoku/Sokoto/aug_4/student_best
Sudoku/Sokoto/aug_4/worklog.txt
Sudoku/Sokoto/aug_5/
Sudoku/Sokoto/aug_5/student_best
Sudoku/Sokoto/aug_5/worklog.txt
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_6/
Sudoku/Sokoto/aug_6/student_best
Sudoku/Sokoto/aug_6/worklog.txt
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_7/
Sudoku/Sokoto/aug_7/student_best
Sudoku/Sokoto/aug_7/worklog.txt
Sudoku/Sokoto/aug_8/
Sudoku/Sokoto/aug_8/student_best
Sudoku/Sokoto/aug_8/worklog.txt
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_9/
Sudoku/Sokoto/aug_9/student_best
Sudoku/Sokoto/aug_9/worklog.txt
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/worklog-checkpoint.txt
Voxel/
Voxel/Rendered Examples.png
Voxel/metadata
Voxel/test_y.npy

sent 620,487,017 bytes  received 951 bytes  137,886,215.11 bytes/sec
total size is 620,331,646  speedup is 1.00
cp -R /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package1/predictions /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1
cp evaluation/score.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1/score.py
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring1; python3 score.py
===========================================================================
=============    Your Unseen Data 2024 Submission is scoring     =============
===========================================================================
== Scoring Voxel ==
Raw Score:    83.900
Adj Score:    4.380
Model Params: 2,200,130
Runtime:      10,861.1s
== Scoring ImageNet16-120 ==
Raw Score:    33.633
Adj Score:    -2.377
Model Params: 1,661,720
Runtime:      26,946.1s
== Scoring Sudoku ==
Raw Score:    53.860
Adj Score:    5.386
Model Params: 573,354
Runtime:      12,681.3s
== Scoring CIFAR10 ==
Raw Score:    85.940
Adj Score:    -5.037
Model Params: 946,914
Runtime:      20,238.3s
===========================
Final Score: 2.352
=== JOB_STATISTICS ===
=== current date     : Tue 22 Oct 2024 12:49:47 PM CEST
= Job-ID             : 915937 on tinygpu
= Job-Name           : /home/woody/iwb3/iwb3021h/THESIS_RESULTS/hpcruns/evonas
= Job-Command        : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/evonas_job_full_main_1.sh
= Initial workdir    : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024
= Queue/Partition    : a100
= Slurm account      : iwb3 with QOS=normal
= Requested resources:  for 23:59:00
= Elapsed runtime    : 19:41:07
= Total RAM usage    : 6.1 GiB of requested  GiB (%)   
= Node list          : tg096
= Subm/Elig/Start/End: 2024-10-21T14:07:04 / 2024-10-21T14:07:04 / 2024-10-21T17:08:40 / 2024-10-22T12:49:47
======================
=== Quota infos ======
    Path              Used     SoftQ    HardQ    Gracetime  Filec    FileQ    FiHaQ    FileGrace    
    /home/hpc          102.9G   104.9G   209.7G        N/A     196K     500K   1,000K        N/A    
    /home/vault        984.8G  1048.6G  2097.2G        N/A     180K     200K     400K        N/A    
    /home/woody        842.7G  1000.0G  1500.0G        N/A     255K   5,000K   7,500K        N/A    
======================
=== GPU utilization ==
gpu_name, gpu_bus_id, pid, gpu_utilization [%], mem_utilization [%], max_memory_usage [MiB], time [ms]
NVIDIA A100-SXM4-40GB, 00000000:C1:00.0, 3154016, 19 %, 2 %, 9866 MiB, 70737354 ms
