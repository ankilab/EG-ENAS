### Starting TaskPrologue of job 915938 on tg090 at Tue 22 Oct 2024 02:41:32 AM CEST
Running on cores 96-127 with governor ondemand
Tue Oct 22 02:41:32 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 560.28.03              Driver Version: 560.28.03      CUDA Version: 12.6     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-40GB          On  |   00000000:C1:00.0 Off |                    0 |
| N/A   34C    P0             53W /  400W |       1MiB /  40960MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
### Finished TaskPrologue

Loading python/pytorch-1.13py3.10
  Loading requirement: cuda/11.6.1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/predictions
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/datasets
rsync -ar --exclude='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/datasets/
cp -R evaluation/main.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/main.py
cp -R anki_lab_submission/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2; python3 main.py --mode T2 --select_augment Proxy
ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| unique_values: array([0.02745098, 0.05098039, 0.05490196, 0.05882353, 0.0627451 ,
                          0.07058824, 0.07450981, 0.07843138, 0.08627451, 0.09019608,
                          0.09411765, 0.09803922, 0.10196079, 0.10980392, 0.11372549,
                          0.11764706, 0.12156863, 0.1254902 , 0.12941177, 0.13333334,
                          0.13725491, 0.14117648, 0.14509805, 0.14901961, 0.15294118,
                          0.15686275, 0.16078432, 0.16470589, 0.16862746, 0.17254902,
                          0.1764706 , 0.18039216, 0.18431373, 0.1882353 , 0.19215687,
                          0.19607843, 0.2       , 0.20392157, 0.21176471, 0.21568628,
                          0.21960784, 0.22352941, 0.22745098, 0.23137255, 0.23529412,
                          0.23921569, 0.24313726, 0.24705882, 0.2509804 , 0.25490198,
                          0.25882354, 0.2627451 , 0.26666668, 0.27058825, 0.27450982,
                          0.2784314 , 0.2901961 , 0.29411766, 0.29803923, 0.3019608 ,
                          0.3137255 , 0.31764707, 0.3254902 , 0.32941177, 0.33333334,
                          0.3372549 , 0.34117648, 0.34509805, 0.34901962, 0.3529412 ,
                          0.35686275, 0.36078432, 0.3647059 , 0.36862746, 0.37254903,
                          0.3764706 , 0.38039216, 0.38431373, 0.3882353 , 0.39215687,
                          0.39607844, 0.40392157, 0.40784314, 0.4117647 , 0.41568628,
                          0.41960785, 0.42352942, 0.43137255, 0.43529412, 0.4392157 ,
                          0.44313726, 0.44705883, 0.4509804 , 0.45490196, 0.45882353,
                          0.4627451 , 0.46666667, 0.47058824, 0.4745098 , 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7372549 ,
                          0.7411765 , 0.74509805, 0.7490196 , 0.7529412 , 0.75686276,
                          0.7607843 , 0.7647059 , 0.76862746, 0.77254903, 0.7764706 ,
                          0.78039217, 0.78431374, 0.7882353 , 0.7921569 , 0.79607844,
                          0.8       , 0.8039216 , 0.80784315, 0.8117647 , 0.8156863 ,
                          0.8235294 , 0.83137256, 0.8352941 , 0.8392157 , 0.84313726,
                          0.85882354, 0.8666667 , 0.87058824, 0.8745098 , 0.8784314 ,
                          0.88235295, 0.8980392 , 0.90588236, 0.9098039 , 0.9137255 ,
                          0.91764706, 0.92156863, 0.9254902 , 0.92941177, 0.93333334,
                          0.9372549 , 0.9411765 , 0.94509804, 0.95686275, 0.9607843 ],
                         dtype=float32)
ic| C: 3
ic| H: 16
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning: The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.
  warnings.warn(
ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fa4fadabee0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4fadabfa0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4fada8f70>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4fadabfd0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fa4fada9090>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fa4fada9840>,
                 ToTensor(),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fa4fada92a0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['daring_crayfish',
                  'dandelion_turkey',
                  'tidy_newt',
                  'spectral_dolphin',
                  'resourceful_okapi',
                  'meticulous_panda',
                  'archetypal_vicugna',
                  'adept_magpie',
                  'fortunate_oryx',
                  'agile_labrador']
ic| params: [48.0, 120, 2.1499999999999995, 12, 8]
ic| params: [64.0, 72, 2.799999999999997, 18, 8]
ic| params: [16.0, 72, 2.05, 22, 8]
ic| params: [48.0, 112, 2.05, 19, 8]
ic| params: [56.0, 112, 2.3999999999999986, 17, 8]
ic| params: [16.0, 16, 2.05, 18, 8]
ic| params: [56.0, 120, 2.6999999999999975, 19, 8]
ic| params: [64.0, 72, 2.799999999999997, 16, 8]
ic| params: [24.0, 96, 2.3999999999999986, 20, 8]
ic| params: [16.0, 64, 2.899999999999997, 22, 8]
ic| individuals: ['daring_crayfish',
                  'dandelion_turkey',
                  'tidy_newt',
                  'spectral_dolphin',
                  'resourceful_okapi',
                  'meticulous_panda',
                  'archetypal_vicugna',
                  'adept_magpie',
                  'fortunate_oryx',
                  'agile_labrador']
ic| params_dict: {'adept_magpie': [64.0, 72, 2.799999999999997, 16, 8],
                  'agile_labrador': [16.0, 64, 2.899999999999997, 22, 8],
                  'archetypal_vicugna': [56.0, 120, 2.6999999999999975, 19, 8],
                  'dandelion_turkey': [64.0, 72, 2.799999999999997, 18, 8],
                  'daring_crayfish': [48.0, 120, 2.1499999999999995, 12, 8],
                  'fortunate_oryx': [24.0, 96, 2.3999999999999986, 20, 8],
                  'meticulous_panda': [16.0, 16, 2.05, 18, 8],
                  'resourceful_okapi': [56.0, 112, 2.3999999999999986, 17, 8],
                  'spectral_dolphin': [48.0, 112, 2.05, 19, 8],
                  'tidy_newt': [16.0, 72, 2.05, 22, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4fadabee0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4fadabfa0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4fada8f70>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4fadabfd0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4fada9090>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4fada9840>,
                                                ToTensor(),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4fada92a0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
ic| f"best_augmentation: {best_aug}": 'best_augmentation: 4'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41525837824
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 107641.5815448761
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
Mode: T2
===========================================================================
=============    Your Unseen Data 2024 Submission is running     =============
===========================================================================
========== Dataset    in16    =============================================
  Metadata:
   - input_shape         : [148700, 3, 16, 16]
   - codename            : in16
   - benchmark           : 46.38
   - num_classes         : 120
   - time_remaining      : 107999.50401973724

=== Processing Data ===
  Allotted compute time remaining: ~29h,59m,59s

=== Performing NAS ===
  Allotted compute time remaining: ~29h,54m,1s
None
Created model:  placid_crayfish
Created model:  green_bandicoot
Created model:  hulking_swallow
Created model:  blue_loon
Created model:  splendid_barracuda
Created model:  mahogany_platypus
Created model:  offbeat_mackerel
Created model:  speedy_zebu
Created model:  industrious_trout
Created model:  beryl_labrador
Created model:  glossy_oriole
Created model:  axiomatic_millipede
Created model:  pistachio_squid
Created model:  brown_oriole
Created model:  majestic_cassowary
Created model:  glittering_swine
Created model:  enormous_numbat
Created model:  lumpy_toucan
Created model:  brilliant_impala
Created model:  sweet_wolf
[2K[2Kaxiomatic_millipede
[31m[EVAL] Best accuracy:16.733333587646484[0m
[2K[2Kberyl_labrador
[31m[EVAL] Best accuracy:17.46666717529297[0m
[2K[2Kblue_loon
[31m[EVAL] Best accuracy:19.733333587646484[0m
[2K[2Kbrilliant_impala
[31m[EVAL] Best accuracy:20.399999618530273[0m
[2K[2Kbrown_oriole
[31m[EVAL] Best accuracy:20.69999885559082[0m
[2K[2Kenormous_numbat
[31m[EVAL] Best accuracy:16.733333587646484[0m
[2K[2Kglittering_swine
[31m[EVAL] Best accuracy:16.700000762939453[0m
[2K[2Kglossy_oriole
[31m[EVAL] Best accuracy:17.366666793823242[0m
[2K[2Kgreen_bandicoot
[31m[EVAL] Best accuracy:18.399999618530273[0m
[2K[2Khulking_swallow
[31m[EVAL] Best accuracy:20.433332443237305[0m
[2K[2Kindustrious_trout
[31m[EVAL] Best accuracy:9.933333396911621[0m
[2K[2Klumpy_toucan
[31m[EVAL] Best accuracy:18.399999618530273[0m
[2K[2Kmahogany_platypus
[31m[EVAL] Best accuracy:18.53333282470703[0m
[2K[2Kmajestic_cassowary
[31m[EVAL] Best accuracy:11.366666793823242[0m
[2K[2Koffbeat_mackerel
[31m[EVAL] Best accuracy:16.83333396911621[0m
[2K[2Kpistachio_squid
[31m[EVAL] Best accuracy:12.633333206176758[0m
[2K[2Kplacid_crayfish
[31m[EVAL] Best accuracy:20.366666793823242[0m
[2K[2Kspeedy_zebu
[31m[EVAL] Best accuracy:18.399999618530273[0m
[2K[2Ksplendid_barracuda
[31m[EVAL] Best accuracy:20.0[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7773.486725568771
ic| self.metadata["time_remaining"]: 107641.5815448761
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Ksweet_wolf
[31m[EVAL] Best accuracy:12.066666603088379[0m
['placid_crayfish', 'green_bandicoot', 'hulking_swallow', 'blue_loon', 'splendid_barracuda', 'mahogany_platypus', 'offbeat_mackerel', 'speedy_zebu', 'industrious_trout', 'beryl_labrador', 'glossy_oriole', 'axiomatic_millipede', 'pistachio_squid', 'brown_oriole', 'majestic_cassowary', 'glittering_swine', 'enormous_numbat', 'lumpy_toucan', 'brilliant_impala', 'sweet_wolf', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 20.7
Child: [52.0, 120, 2.9000000000000004, 13]
Old_chrom: [64.0, 120, 2.899999999999997, 11]
Diff: 0.09821430187686431
[44.0, 128, 2.8500000000000005, 13]
Child: [56.0, 112, 2.75, 10]
Old_chrom: [60.0, 112, 2.7, 10]
Diff: 0.08146723959241657
[64.0, 120, 2.8, 10]
Child: [28.0, 120, 2.6500000000000004, 13]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.0771520286492183
[36.0, 112, 2.7, 14]
Child: [36.0, 112, 2.7, 14]
Old_chrom: [40.0, 120, 2.7, 11]
Diff: 0.09363553113553114
[44.0, 112, 2.6500000000000004, 15]
Child: [48.0, 112, 2.7, 12]
Old_chrom: [40.0, 120, 2.7, 11]
Diff: 0.07875457875457875
[56.0, 104, 2.7, 13]
Child: [56.0, 104, 2.7, 13]
Old_chrom: [60.0, 112, 2.7, 10]
Diff: 0.09363553113553114
[64.0, 104, 2.75, 14]
Child: [32.0, 112, 2.5500000000000003, 10]
Old_chrom: [36.0, 112, 2.5, 10]
Diff: 0.08146723959241685
[32.0, 104, 2.6, 10]
Child: [52.0, 104, 2.5500000000000003, 9]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.08146723959241792
[44.0, 96, 2.5000000000000004, 9]
Child: [44.0, 96, 2.5000000000000004, 9]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.08173078200840954
[36.0, 88, 2.5000000000000004, 9]
Child: [36.0, 88, 2.5000000000000004, 9]
Old_chrom: [36.0, 112, 2.5, 10]
Diff: 0.07554945626378501
[44.0, 80, 2.5000000000000004, 10]
Child: [64.0, 120, 2.849999999999997, 11]
Old_chrom: [64.0, 120, 2.899999999999997, 11]
Diff: 0.06063390625908324
[64.0, 112, 2.799999999999997, 12]
Child: [64.0, 112, 2.799999999999997, 12]
Old_chrom: [64.0, 120, 2.8, 10]
Diff: 0.054945068942258604
[56.0, 120, 2.7499999999999973, 13]
Child: [56.0, 120, 2.7499999999999973, 13]
Old_chrom: [64.0, 104, 2.75, 14]
Diff: 0.09798536198255164
[56.0, 112, 2.799999999999997, 14]
Child: [56.0, 120, 2.899999999999997, 9]
Old_chrom: [64.0, 120, 2.899999999999997, 11]
Diff: 0.07738095238095238
[64.0, 112, 2.899999999999997, 8]
Child: [64.0, 112, 2.899999999999997, 8]
Old_chrom: [64.0, 120, 2.899999999999997, 11]
Diff: 0.0728021978021978
[64.0, 104, 2.849999999999997, 9]
Child: [16.0, 120, 2.849999999999997, 11]
Old_chrom: [16.0, 120, 2.899999999999997, 11]
Diff: 0.06063390625908324
[24.0, 120, 2.899999999999997, 10]
Child: [24.0, 120, 2.899999999999997, 10]
Old_chrom: [16.0, 120, 2.899999999999997, 11]
Diff: 0.05952380952380952
[24.0, 112, 2.9499999999999966, 10]
Child: [40.0, 120, 2.4999999999999982, 9]
Old_chrom: [36.0, 112, 2.5, 10]
Diff: 0.057921256849914345
[40.0, 128, 2.4999999999999982, 8]
Child: [40.0, 128, 2.4999999999999982, 8]
Old_chrom: [36.0, 112, 2.5, 10]
Diff: 0.09500916893782643
[40.0, 136, 2.4999999999999982, 8]
Child: [40.0, 120, 2.599999999999998, 9]
Old_chrom: [48.0, 104, 2.599999999999998, 9]
Diff: 0.08012820512820512
[32.0, 112, 2.549999999999998, 9]
Child: [32.0, 112, 2.549999999999998, 9]
Old_chrom: [36.0, 112, 2.5, 10]
Diff: 0.09932438244955835
[40.0, 104, 2.549999999999998, 9]
Child: [56.0, 104, 2.4499999999999984, 11]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.09634819197336895
[48.0, 104, 2.4999999999999982, 10]
Child: [48.0, 104, 2.4999999999999982, 9]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.041666666666666664
[48.0, 112, 2.4999999999999982, 10]
Child: [48.0, 112, 2.4999999999999982, 10]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.07875457875457875
[56.0, 112, 2.549999999999998, 9]
Child: [56.0, 112, 2.549999999999998, 9]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.07986467548985247
[48.0, 120, 2.4999999999999982, 8]
Child: [48.0, 120, 2.4999999999999982, 8]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.09798534798534797
[40.0, 112, 2.4499999999999984, 9]
Created model:  adaptable_zebu
Created model:  apricot_numbat
Created model:  bizarre_barracuda
Created model:  brainy_agouti
Created model:  encouraging_pheasant
Created model:  fantastic_turkey
Created model:  flat_zebu
Created model:  fractal_buzzard
Created model:  fragrant_badger
Created model:  glaring_saluki
Created model:  literate_pug
Created model:  marigold_platypus
Created model:  mutant_baboon
Created model:  nocturnal_caribou
Created model:  omniscient_scallop
Created model:  positive_jellyfish
Created model:  secret_sponge
Created model:  sturdy_seriema
Created model:  stylish_platypus
Created model:  thankful_owl
[2K[2Kadaptable_zebu
[31m[EVAL] Best accuracy:20.266666412353516[0m
[2K[2Kapricot_numbat
[31m[EVAL] Best accuracy:21.066665649414062[0m
[2K[2Kbizarre_barracuda
[31m[EVAL] Best accuracy:20.733333587646484[0m
[2K[2Kbrainy_agouti
[31m[EVAL] Best accuracy:21.600000381469727[0m
[2K[2Kencouraging_pheasant
[31m[EVAL] Best accuracy:19.03333282470703[0m
[2K[2Kfantastic_turkey
[31m[EVAL] Best accuracy:18.299999237060547[0m
[2K[2Kflat_zebu
[31m[EVAL] Best accuracy:19.83333396911621[0m
[2K[2Kfractal_buzzard
[31m[EVAL] Best accuracy:19.433332443237305[0m
[2K[2Kfragrant_badger
[31m[EVAL] Best accuracy:19.566665649414062[0m
[2K[2Kglaring_saluki
[31m[EVAL] Best accuracy:18.399999618530273[0m
[2K[2Kliterate_pug
[31m[EVAL] Best accuracy:17.83333396911621[0m
[2K[2Kmarigold_platypus
[31m[EVAL] Best accuracy:21.733333587646484[0m
[2K[2Kmutant_baboon
[31m[EVAL] Best accuracy:18.0[0m
[2K[2Knocturnal_caribou
[31m[EVAL] Best accuracy:21.5[0m
[2K[2Komniscient_scallop
[31m[EVAL] Best accuracy:19.83333396911621[0m
[2K[2Kpositive_jellyfish
[31m[EVAL] Best accuracy:21.46666717529297[0m
[2K[2Ksecret_sponge
[31m[EVAL] Best accuracy:21.53333282470703[0m
[2K[2Ksturdy_seriema
[31m[EVAL] Best accuracy:18.399999618530273[0m
[2K[2Kstylish_platypus
[31m[EVAL] Best accuracy:21.19999885559082[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 14897.510218858719
ic| self.metadata["time_remaining"]: 107641.5815448761
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 128, 'WA': 72.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kthankful_owl
[31m[EVAL] Best accuracy:19.733333587646484[0m
['parents.csv', 'adaptable_zebu', 'apricot_numbat', 'bizarre_barracuda', 'brainy_agouti', 'encouraging_pheasant', 'fantastic_turkey', 'flat_zebu', 'fractal_buzzard', 'fragrant_badger', 'glaring_saluki', 'literate_pug', 'marigold_platypus', 'mutant_baboon', 'nocturnal_caribou', 'omniscient_scallop', 'positive_jellyfish', 'secret_sponge', 'sturdy_seriema', 'stylish_platypus', 'thankful_owl', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 21.73
Child: [40.0, 120, 2.85, 11]
Old_chrom: [40.0, 120, 2.849999999999997, 14]
Diff: 0.05357144369013647
[32.0, 128, 2.8000000000000003, 11]
Child: [40.0, 120, 2.75, 10]
Old_chrom: [40.0, 120, 2.7, 11]
Diff: 0.07849104911622609
[40.0, 128, 2.75, 11]
Child: [40.0, 128, 2.75, 11]
Old_chrom: [40.0, 120, 2.7, 11]
Diff: 0.07986467548985247
[40.0, 136, 2.75, 11]
Child: [40.0, 136, 2.75, 11]
Old_chrom: [40.0, 120, 2.7, 11]
Diff: 0.0990954447206217
[32.0, 128, 2.8, 11]
Child: [28.0, 128, 2.7, 10]
Old_chrom: [40.0, 120, 2.7, 11]
Diff: 0.0995879120879121
[20.0, 120, 2.6500000000000004, 10]
Child: [52.0, 112, 2.7, 10]
Old_chrom: [40.0, 120, 2.7, 11]
Diff: 0.0995879120879121
[60.0, 120, 2.7, 10]
Child: [64.0, 120, 2.7, 10]
Old_chrom: [64.0, 120, 2.8, 10]
Diff: 0.08574929257125442
[64.0, 120, 2.7, 9]
Child: [52.0, 112, 2.6, 9]
Old_chrom: [48.0, 104, 2.599999999999998, 9]
Diff: 0.04006411534174287
[44.0, 112, 2.65, 9]
Child: [44.0, 112, 2.65, 9]
Old_chrom: [52.0, 128, 2.6500000000000004, 9]
Diff: 0.08012821084253959
[36.0, 112, 2.6, 10]
Child: [40.0, 120, 2.5500000000000003, 9]
Old_chrom: [40.0, 104, 2.549999999999998, 9]
Diff: 0.03846155123917877
[48.0, 128, 2.5500000000000003, 10]
Child: [52.0, 128, 2.5500000000000003, 9]
Old_chrom: [52.0, 128, 2.6500000000000004, 9]
Diff: 0.0857492925712546
[52.0, 128, 2.5000000000000004, 10]
Child: [64.0, 120, 2.899999999999997, 11]
Old_chrom: [64.0, 120, 2.899999999999997, 11]
Diff: 0.0
[56.0, 120, 2.849999999999997, 10]
Child: [56.0, 120, 2.849999999999997, 10]
Old_chrom: [64.0, 104, 2.849999999999997, 9]
Diff: 0.09798534798534797
[56.0, 112, 2.849999999999997, 9]
Child: [40.0, 120, 2.8, 9]
Old_chrom: [32.0, 128, 2.8000000000000003, 11]
Diff: 0.09661172732605608
[40.0, 112, 2.8499999999999996, 10]
Child: [64.0, 120, 2.599999999999998, 10]
Old_chrom: [64.0, 120, 2.599999999999998, 9]
Diff: 0.017857142857142856
[72.0, 120, 2.549999999999998, 10]
Child: [64.0, 120, 2.4999999999999982, 8]
Old_chrom: [56.0, 104, 2.4999999999999982, 9]
Diff: 0.09798534798534797
[64.0, 112, 2.4999999999999982, np.int64(8)]
Child: [40.0, 104, 2.599999999999998, 9]
Old_chrom: [48.0, 104, 2.599999999999998, 9]
Diff: 0.041666666666666664
[40.0, 112, 2.599999999999998, 8]
Child: [40.0, 112, 2.599999999999998, 8]
Old_chrom: [48.0, 104, 2.599999999999998, 9]
Diff: 0.07875457875457875
[40.0, 104, 2.6499999999999977, 9]
Child: [40.0, 104, 2.6499999999999977, 9]
Old_chrom: [40.0, 104, 2.549999999999998, 9]
Diff: 0.08574929257125442
[48.0, 112, 2.599999999999998, 8]
Child: [40.0, 104, 2.4999999999999982, 8]
Old_chrom: [40.0, 104, 2.549999999999998, 9]
Diff: 0.07849104911622609
[32.0, 96, 2.4499999999999984, 8]
Child: [32.0, 96, 2.4499999999999984, 8]
Old_chrom: [40.0, 112, 2.4499999999999984, 9]
Diff: 0.09798534798534797
[24.0, 96, 2.4999999999999982, np.int64(8)]
Child: [64.0, 136, 2.4999999999999982, 9]
Old_chrom: [52.0, 128, 2.5000000000000004, 10]
Diff: 0.0995879248655524
[72.0, 128, 2.4499999999999984, 10]
Created model:  adventurous_eagle
Created model:  adventurous_marmot
Created model:  curvy_polecat
Created model:  efficient_ocelot
Created model:  fat_peccary
Created model:  fluorescent_muskrat
Created model:  functional_platypus
Created model:  greedy_jackrabbit
Created model:  hasty_leech
Created model:  hilarious_herring
Created model:  huge_pelican
Created model:  independent_antelope
Created model:  magnetic_toucanet
Created model:  nocturnal_avocet
Created model:  organic_finch
Created model:  positive_heron
Created model:  rustling_camel
Created model:  spiffy_goldfish
Created model:  subtle_caterpillar
Created model:  watchful_marten
[2K[2Kadventurous_eagle
[31m[EVAL] Best accuracy:20.899999618530273[0m
[2K[2Kadventurous_marmot
[31m[EVAL] Best accuracy:21.399999618530273[0m
[2K[2Kcurvy_polecat
[31m[EVAL] Best accuracy:21.566665649414062[0m
[2K[2Kefficient_ocelot
[31m[EVAL] Best accuracy:19.766666412353516[0m
[2K[2Kfat_peccary
[31m[EVAL] Best accuracy:19.799999237060547[0m
[2K[2Kfluorescent_muskrat
[31m[EVAL] Best accuracy:20.19999885559082[0m
[2K[2Kfunctional_platypus
[31m[EVAL] Best accuracy:21.266666412353516[0m
[2K[2Kgreedy_jackrabbit
[31m[EVAL] Best accuracy:19.33333396911621[0m
[2K[2Khasty_leech
[31m[EVAL] Best accuracy:20.66666603088379[0m
[2K[2Khilarious_herring
[31m[EVAL] Best accuracy:19.766666412353516[0m
[2K[2Khuge_pelican
[31m[EVAL] Best accuracy:21.366666793823242[0m
[2K[2Kindependent_antelope
[31m[EVAL] Best accuracy:19.899999618530273[0m
[2K[2Kmagnetic_toucanet
[31m[EVAL] Best accuracy:21.266666412353516[0m
[2K[2Knocturnal_avocet
[31m[EVAL] Best accuracy:21.233333587646484[0m
[2K[2Korganic_finch
[31m[EVAL] Best accuracy:20.299999237060547[0m
[2K[2Kpositive_heron
[31m[EVAL] Best accuracy:20.16666603088379[0m
[2K[2Krustling_camel
[31m[EVAL] Best accuracy:20.96666717529297[0m
[2K[2Kspiffy_goldfish
[31m[EVAL] Best accuracy:19.600000381469727[0m
[2K[2Ksubtle_caterpillar
[31m[EVAL] Best accuracy:20.33333396911621[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 128, 'WA': 72.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 128, 'WA': 72.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 128, 'WA': 72.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 21796.503161668777
ic| self.metadata["time_remaining"]: 107641.5815448761
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 46.38,
               'codename': 'in16',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_1/tests_in16_22_10_2024_02_49/Generation_3/watchful_marten',
               'input_shape': [148700, 3, 16, 16],
               'mode': 'NAS',
               'num_classes': 120,
               'test_type': 'T2_Proxy/seed_1',
               'time_remaining': 85844.47850704193,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| unique_values: array([0., 1.], dtype=float32)
ic| C: 20
ic| H: 20
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fa4a4e51bd0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4a4e53610>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4a4e500a0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4a4e51ff0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fa4f9432f80>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fa4f9431e70>,
                 ToTensor(),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fa4f9431db0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['amethyst_cougar',
                  'mighty_vole',
                  'knowing_chowchow',
                  'wine_echidna',
                  'esoteric_chicken',
                  'macho_zebu',
                  'determined_stoat',
                  'myrtle_tanuki',
                  'mysterious_moose',
                  'busy_llama']
ic| params: [56.0, 72, 2.549999999999998, 21, 8]
ic| params: [40.0, 80, 2.299999999999999, 8, 8]
ic| params: [64.0, 96, 2.7499999999999973, 20, 8]
ic| params: [40.0, 120, 2.899999999999997, 15, 8]
ic| params: [64.0, 64, 2.299999999999999, 12, 8]
ic| params: [48.0, 120, 2.0999999999999996, 19, 8]
ic| params: [48.0, 96, 2.249999999999999, 12, 8]
ic| params: [40.0, 40, 2.1499999999999995, 11, 8]
ic| params: [48.0, 56, 2.849999999999997, 22, 8]
ic| params: [24.0, 56, 2.799999999999997, 18, 8]
ic| individuals: ['amethyst_cougar',
                  'mighty_vole',
                  'knowing_chowchow',
                  'wine_echidna',
                  'esoteric_chicken',
                  'macho_zebu',
                  'determined_stoat',
                  'myrtle_tanuki',
                  'mysterious_moose',
                  'busy_llama']
ic| params_dict: {'amethyst_cougar': [56.0, 72, 2.549999999999998, 21, 8],
                  'busy_llama': [24.0, 56, 2.799999999999997, 18, 8],
                  'determined_stoat': [48.0, 96, 2.249999999999999, 12, 8],
                  'esoteric_chicken': [64.0, 64, 2.299999999999999, 12, 8],
                  'knowing_chowchow': [64.0, 96, 2.7499999999999973, 20, 8],
                  'macho_zebu': [48.0, 120, 2.0999999999999996, 19, 8],
                  'mighty_vole': [40.0, 80, 2.299999999999999, 8, 8],
                  'myrtle_tanuki': [40.0, 40, 2.1499999999999995, 11, 8],
                  'mysterious_moose': [48.0, 56, 2.849999999999997, 22, 8],
                  'wine_echidna': [40.0, 120, 2.899999999999997, 15, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a4e51bd0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a4e53610>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a4e500a0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a4e51ff0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4f9432f80>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4f9431e70>,
                                                ToTensor(),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4f9431db0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 13'
ic| f"selected transform {train_transform}": ('selected transform [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], '
                                              'pad_if_needed=False, fill=0, padding_mode=constant), '
                                              'RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)]')
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41672638464
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 83106.1754784584
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 80, 'WA': 16.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwatchful_marten
[31m[EVAL] Best accuracy:19.0[0m
['parents.csv', 'adventurous_eagle', 'adventurous_marmot', 'curvy_polecat', 'efficient_ocelot', 'fat_peccary', 'fluorescent_muskrat', 'functional_platypus', 'greedy_jackrabbit', 'hasty_leech', 'hilarious_herring', 'huge_pelican', 'independent_antelope', 'magnetic_toucanet', 'nocturnal_avocet', 'organic_finch', 'positive_heron', 'rustling_camel', 'spiffy_goldfish', 'subtle_caterpillar', 'watchful_marten', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 21.57
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_1/tests_in16_22_10_2024_02_49/Generation_2/marigold_platypus/config.yaml

=== Training ===
  Allotted compute time remaining: ~23h,50m,44s
Early stopping at epoch 39
[31m[EVAL] Best accuracy:37.0[0m

=== Predicting ===
  Allotted compute time remaining: ~23h,9m,25s

========== Dataset   Volga    =============================================
  Metadata:
   - input_shape         : [50000, 20, 20, 20]
   - codename            : Volga
   - benchmark           : 71.35
   - num_classes         : 7
   - time_remaining      : 83361.61457800865

=== Processing Data ===
  Allotted compute time remaining: ~23h,9m,21s

=== Performing NAS ===
  Allotted compute time remaining: ~23h,5m,6s
spawn
Created model:  brainy_crow
Created model:  zealous_dormouse
Created model:  gay_beaver
Created model:  muscular_wrasse
Created model:  small_armadillo
Created model:  merry_binturong
Created model:  daffodil_sponge
Created model:  amber_termite
Created model:  savvy_tiger
Created model:  functional_pig
Created model:  hopping_donkey
Created model:  nano_python
Created model:  subtle_cheetah
Created model:  tan_falcon
Created model:  pragmatic_dolphin
Created model:  slim_crow
Created model:  independent_macaque
Created model:  thankful_dove
Created model:  hairy_bobcat
Created model:  delicate_stoat
[2K[2Kamber_termite
[31m[EVAL] Best accuracy:60.18000030517578[0m
[2K[2Kbrainy_crow
[31m[EVAL] Best accuracy:51.28999710083008[0m
[2K[2Kdaffodil_sponge
[31m[EVAL] Best accuracy:52.41999816894531[0m
[2K[2Kdelicate_stoat
[31m[EVAL] Best accuracy:61.18000030517578[0m
[2K[2Kfunctional_pig
[31m[EVAL] Best accuracy:53.93000030517578[0m
[2K[2Kgay_beaver
[31m[EVAL] Best accuracy:61.599998474121094[0m
[2K[2Khairy_bobcat
[31m[EVAL] Best accuracy:62.189998626708984[0m
[2K[2Khopping_donkey
[31m[EVAL] Best accuracy:62.34000015258789[0m
[2K[2Kindependent_macaque
[31m[EVAL] Best accuracy:58.25[0m
[2K[2Kmerry_binturong
[31m[EVAL] Best accuracy:57.12999725341797[0m
[2K[2Kmuscular_wrasse
[31m[EVAL] Best accuracy:58.81999969482422[0m
[2K[2Knano_python
[31m[EVAL] Best accuracy:46.97999954223633[0m
[2K[2Kpragmatic_dolphin
[31m[EVAL] Best accuracy:55.0[0m
[2K[2Ksavvy_tiger
[31m[EVAL] Best accuracy:44.709999084472656[0m
[2K[2Kslim_crow
[31m[EVAL] Best accuracy:54.48999786376953[0m
[2K[2Ksmall_armadillo
[31m[EVAL] Best accuracy:61.14999771118164[0m
[2K[2Ksubtle_cheetah
[31m[EVAL] Best accuracy:64.75[0m
[2K[2Ktan_falcon
[31m[EVAL] Best accuracy:57.06999969482422[0m
[2K[2Kthankful_dove
[31m[EVAL] Best accuracy:57.32999801635742[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 80, 'WA': 16.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 80, 'WA': 16.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 80, 'WA': 16.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2741.908849000931
ic| self.metadata["time_remaining"]: 83106.1754784584
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 80, 'WA': 16.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 80, 'WA': 16.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 80, 'WA': 16.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 80, 'WA': 16.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 80, 'WA': 16.0, 'WM': 2.599999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kzealous_dormouse
[31m[EVAL] Best accuracy:53.3599967956543[0m
['brainy_crow', 'zealous_dormouse', 'gay_beaver', 'muscular_wrasse', 'small_armadillo', 'merry_binturong', 'daffodil_sponge', 'amber_termite', 'savvy_tiger', 'functional_pig', 'hopping_donkey', 'nano_python', 'subtle_cheetah', 'tan_falcon', 'pragmatic_dolphin', 'slim_crow', 'independent_macaque', 'thankful_dove', 'hairy_bobcat', 'delicate_stoat', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 64.75
Child: [24.0, 64, 2.05, 16]
Old_chrom: [16.0, 88, 2.05, 16]
Diff: 0.09935897435897437
[32.0, 72, 2.0999999999999996, 15]
Child: [40.0, 88, 2.05, 11]
Old_chrom: [40.0, 88, 2.05, 8]
Diff: 0.05357142857142857
[40.0, 96, np.float64(2.05), 12]
Child: [40.0, 96, np.float64(2.05), 12]
Old_chrom: [40.0, 88, 2.05, 8]
Diff: 0.09065934065934066
[40.0, 104, np.float64(2.05), 12]
Child: [48.0, 112, 2.799999999999997, 11]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.09935897435897437
[48.0, 120, 2.849999999999997, 12]
Child: [16.0, 88, 2.3499999999999988, 12]
Old_chrom: [16.0, 88, 2.35, 17]
Diff: 0.08928572418323191
[24.0, 96, 2.299999999999999, 12]
Child: [16.0, 88, 2.599999999999998, 17]
Old_chrom: [16.0, 80, 2.599999999999998, 17]
Diff: 0.019230769230769232
[24.0, 80, 2.6499999999999977, 18]
Child: [16.0, 80, 2.3499999999999988, 12]
Old_chrom: [24.0, 64, 2.3499999999999988, 12]
Diff: 0.08012820512820512
[16.0, 88, 2.299999999999999, 12]
Child: [16.0, 88, 2.299999999999999, 12]
Old_chrom: [24.0, 96, 2.299999999999999, 12]
Diff: 0.060897435897435896
[24.0, 96, 2.249999999999999, 13]
Child: [24.0, 96, 2.249999999999999, 13]
Old_chrom: [24.0, 96, 2.299999999999999, 12]
Diff: 0.07849104911622609
[24.0, 96, 2.1999999999999993, 12]
Child: [24.0, 96, 2.1999999999999993, 12]
Old_chrom: [32.0, 104, 2.2, 14]
Diff: 0.0966117296930109
[32.0, 88, 2.1999999999999993, 12]
Created model:  accurate_nautilus
Created model:  aromatic_cat
Created model:  augmented_gharial
Created model:  cream_meerkat
Created model:  delectable_badger
Created model:  granite_mayfly
Created model:  inescapable_scorpion
Created model:  intrepid_dingo
Created model:  mega_beagle
Created model:  mottled_skua
Created model:  mustard_platypus
Created model:  persimmon_mouse
Created model:  platinum_avocet
Created model:  primitive_scallop
Created model:  pygmy_silkworm
Created model:  resilient_jaybird
Created model:  sassy_myna
Created model:  spirited_junglefowl
Created model:  subtle_dingo
Created model:  wakeful_nautilus
[2K[2Kaccurate_nautilus
[31m[EVAL] Best accuracy:65.43999481201172[0m
[2K[2Karomatic_cat
[31m[EVAL] Best accuracy:63.959999084472656[0m
[2K[2Kaugmented_gharial
[31m[EVAL] Best accuracy:65.25[0m
[2K[2Kcream_meerkat
[31m[EVAL] Best accuracy:60.30999755859375[0m
[2K[2Kdelectable_badger
[31m[EVAL] Best accuracy:59.849998474121094[0m
[2K[2Kgranite_mayfly
[31m[EVAL] Best accuracy:58.5099983215332[0m
[2K[2Kinescapable_scorpion
[31m[EVAL] Best accuracy:62.869998931884766[0m
[2K[2Kintrepid_dingo
[31m[EVAL] Best accuracy:61.599998474121094[0m
[2K[2Kmega_beagle
[31m[EVAL] Best accuracy:62.13999938964844[0m
[2K[2Kmottled_skua
[31m[EVAL] Best accuracy:59.34000015258789[0m
[2K[2Kmustard_platypus
[31m[EVAL] Best accuracy:65.55999755859375[0m
[2K[2Kpersimmon_mouse
[31m[EVAL] Best accuracy:52.619998931884766[0m
[2K[2Kplatinum_avocet
[31m[EVAL] Best accuracy:54.3599967956543[0m
[2K[2Kprimitive_scallop
[31m[EVAL] Best accuracy:63.94999694824219[0m
[2K[2Kpygmy_silkworm
[31m[EVAL] Best accuracy:60.47999954223633[0m
[2K[2Kresilient_jaybird
[31m[EVAL] Best accuracy:65.68000030517578[0m
[2K[2Ksassy_myna
[31m[EVAL] Best accuracy:64.68000030517578[0m
[2K[2Kspirited_junglefowl
[31m[EVAL] Best accuracy:63.65999984741211[0m
[2K[2Ksubtle_dingo
[31m[EVAL] Best accuracy:59.029998779296875[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 5342.375645160675
ic| self.metadata["time_remaining"]: 83106.1754784584
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 44.0, 'WM': 2.899999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwakeful_nautilus
[31m[EVAL] Best accuracy:61.779998779296875[0m
['parents.csv', 'accurate_nautilus', 'aromatic_cat', 'augmented_gharial', 'cream_meerkat', 'delectable_badger', 'granite_mayfly', 'inescapable_scorpion', 'intrepid_dingo', 'mega_beagle', 'mottled_skua', 'mustard_platypus', 'persimmon_mouse', 'platinum_avocet', 'primitive_scallop', 'pygmy_silkworm', 'resilient_jaybird', 'sassy_myna', 'spirited_junglefowl', 'subtle_dingo', 'wakeful_nautilus', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 65.68
Child: [44.0, 104, 2.9000000000000004, 10]
Old_chrom: [40.0, 88, 2.899999999999997, 8]
Diff: 0.09500917367173611
[44.0, 112, 2.8500000000000005, 10]
Child: [40.0, 104, 2.85, 11]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.0990954447206236
[48.0, 112, 2.8000000000000003, 12]
Child: [32.0, 104, 2.85, 12]
Old_chrom: [32.0, 80, 2.85, 10]
Diff: 0.09340659340659341
[24.0, 112, 2.85, 12]
Child: [36.0, 88, 2.9000000000000004, 9]
Old_chrom: [40.0, 88, 2.899999999999997, 8]
Diff: 0.03869049235305479
[36.0, 80, 2.9000000000000004, 8]
Child: [36.0, 80, 2.9000000000000004, 8]
Old_chrom: [40.0, 88, 2.899999999999997, 8]
Diff: 0.04006411872668116
[28.0, 88, 2.95, np.int64(8)]
Child: [38.0, 88, 2.8000000000000003, 9]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.04613096749966028
[46.0, 88, 2.85, 10]
Child: [46.0, 88, 2.85, 10]
Old_chrom: [32.0, 80, 2.85, 10]
Diff: 0.0921474358974359
[38.0, 96, 2.85, 10]
Child: [28.0, 88, 2.85, 10]
Old_chrom: [32.0, 80, 2.85, 10]
Diff: 0.04006410256410256
[36.0, 80, 2.8000000000000003, 9]
Child: [36.0, 80, 2.8000000000000003, 9]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.07577840339709618
[44.0, 80, 2.8000000000000003, 9]
Child: [44.0, 80, 2.8000000000000003, 9]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.07577840339709618
[44.0, 72, 2.7500000000000004, 10]
Child: [34.0, 88, 2.75, 10]
Old_chrom: [36.0, 88, 2.6500000000000004, 10]
Diff: 0.0961659592379211
[26.0, 96, 2.8, 10]
Child: [24.0, 80, 2.85, 11]
Old_chrom: [32.0, 80, 2.85, 10]
Diff: 0.05952380952380952
[16.0, 72, 2.8000000000000003, 11]
Child: [16.0, 72, 2.8000000000000003, 11]
Old_chrom: [16.0, 80, 2.799999999999997, 11]
Diff: 0.019230784349477132
[16.0, 72, 2.7500000000000004, 10]
Child: [16.0, 72, 2.7500000000000004, 10]
Old_chrom: [16.0, 80, 2.799999999999997, 11]
Diff: 0.09772181834699345
[np.int64(16), 64, 2.8000000000000003, 9]
Child: [26.0, 88, 2.75, 11]
Old_chrom: [26.0, 96, 2.8, 10]
Diff: 0.09772181834699534
[18.0, 96, 2.7, 11]
Child: [40.0, 88, 2.849999999999997, 12]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.07849104911622609
[48.0, 96, 2.899999999999997, 13]
Child: [48.0, 120, 2.85, 10]
Old_chrom: [48.0, 120, 2.849999999999997, 12]
Diff: 0.035714300832993616
[48.0, 120, 2.9, 10]
Child: [48.0, 120, 2.9, 10]
Old_chrom: [48.0, 120, 2.849999999999997, 12]
Diff: 0.09634819197337084
[40.0, 128, 2.9499999999999997, 9]
Child: [16.0, 120, 2.849999999999997, 11]
Old_chrom: [24.0, 112, 2.85, 12]
Diff: 0.07875459387328665
[np.int64(16), 112, 2.849999999999997, 10]
Child: [np.int64(16), 112, 2.849999999999997, 10]
Old_chrom: [24.0, 112, 2.85, 12]
Diff: 0.07738096749966028
[np.int64(16), 112, 2.849999999999997, 9]
Child: [np.int64(16), 112, 2.849999999999997, 9]
Old_chrom: [24.0, 112, 2.85, 12]
Diff: 0.09523811035680313
[np.int64(16), 104, 2.849999999999997, 9]
Child: [32.0, 88, 2.899999999999997, 10]
Old_chrom: [40.0, 88, 2.899999999999997, 8]
Diff: 0.07738095238095238
[40.0, 96, 2.899999999999997, 9]
Child: [40.0, 96, 2.899999999999997, 9]
Old_chrom: [40.0, 88, 2.899999999999997, 8]
Diff: 0.03708791208791209
[40.0, 104, 2.899999999999997, 9]
Child: [40.0, 104, 2.899999999999997, 9]
Old_chrom: [40.0, 88, 2.899999999999997, 8]
Diff: 0.05631868131868132
[40.0, 112, 2.849999999999997, 8]
Child: [40.0, 112, 2.849999999999997, 8]
Old_chrom: [44.0, 112, 2.8500000000000005, 10]
Diff: 0.05654763521019764
[32.0, 104, 2.799999999999997, np.int64(8)]
Child: [32.0, 104, 2.799999999999997, np.int64(8)]
Old_chrom: [26.0, 96, 2.8, 10]
Diff: 0.0861950689422586
[32.0, 104, 2.799999999999997, np.int64(9)]
Child: [36.0, 88, 2.899999999999997, 10]
Old_chrom: [40.0, 88, 2.899999999999997, 8]
Diff: 0.05654761904761904
[36.0, 80, 2.899999999999997, 9]
Child: [36.0, 80, 2.899999999999997, 9]
Old_chrom: [40.0, 88, 2.899999999999997, 8]
Diff: 0.05792124542124542
[44.0, 72, 2.849999999999997, 8]
Child: [44.0, 72, 2.849999999999997, 8]
Old_chrom: [56.0, 64, 2.849999999999997, 9]
Diff: 0.0995879120879121
[44.0, 64, 2.899999999999997, 9]
Child: [40.0, 88, 2.799999999999997, 11]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.0
[32.0, 96, 2.799999999999997, 11]
Child: [32.0, 96, 2.799999999999997, 11]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.060897435897435896
[24.0, 88, 2.799999999999997, 12]
Child: [24.0, 88, 2.799999999999997, 12]
Old_chrom: [16.0, 80, 2.799999999999997, 11]
Diff: 0.07875457875457875
[24.0, 80, 2.7499999999999973, 13]
Child: [24.0, 80, 2.7499999999999973, 13]
Old_chrom: [20.0, 72, 2.75, 13]
Diff: 0.04006411656130622
[16.0, 88, 2.6999999999999975, 12]
Child: [16.0, 88, 2.6999999999999975, 12]
Old_chrom: [28.0, 88, 2.7, 14]
Diff: 0.09821429971148937
[16.0, 80, 2.6999999999999975, 11]
Child: [32.0, 80, 2.6500000000000004, 10]
Old_chrom: [36.0, 88, 2.6500000000000004, 10]
Diff: 0.04006410256410256
[24.0, 72, 2.6500000000000004, 11]
Child: [32.0, 80, 2.799999999999997, 10]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.07875457875457875
[24.0, 88, 2.799999999999997, 11]
Child: [24.0, 88, 2.799999999999997, 11]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.08333333333333333
[16.0, 96, 2.799999999999997, 11]
Child: [36.0, 80, 2.799999999999997, 10]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.05792124542124542
[36.0, 88, 2.799999999999997, 10]
Child: [36.0, 88, 2.799999999999997, 10]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.03869047619047619
[44.0, 96, 2.7499999999999973, 9]
Child: [44.0, 96, 2.7499999999999973, 9]
Old_chrom: [42.0, 104, 2.75, 11]
Diff: 0.06536173560892526
[36.0, 104, 2.799999999999997, 8]
Child: [36.0, 104, 2.799999999999997, 8]
Old_chrom: [32.0, 104, 2.799999999999997, np.int64(9)]
Diff: 0.03869047619047619
[36.0, 104, 2.849999999999997, 9]
Child: [36.0, 104, 2.849999999999997, 9]
Old_chrom: [32.0, 80, 2.85, 10]
Diff: 0.09638279900149177
[44.0, 112, 2.899999999999997, 8]
Created model:  carrot_finch
Created model:  competent_numbat
Created model:  electric_jaguarundi
Created model:  golden_kagu
Created model:  granite_terrier
Created model:  hallowed_hornet
Created model:  hypersonic_crane
Created model:  industrious_salamander
Created model:  jovial_chupacabra
Created model:  kickass_camel
Created model:  lemon_dragon
Created model:  ochre_oriole
Created model:  practical_zebu
Created model:  rainbow_sawfish
Created model:  russet_hippo
Created model:  serious_emu
Created model:  shiny_dragon
Created model:  striped_lori
Created model:  successful_rat
Created model:  woodoo_ibis
[2K[2Kcarrot_finch
[31m[EVAL] Best accuracy:65.37999725341797[0m
[2K[2Kcompetent_numbat
[31m[EVAL] Best accuracy:59.21999740600586[0m
[2K[2Kelectric_jaguarundi
[31m[EVAL] Best accuracy:59.25[0m
[2K[2Kgolden_kagu
[31m[EVAL] Best accuracy:68.02999877929688[0m
[2K[2Kgranite_terrier
[31m[EVAL] Best accuracy:65.97000122070312[0m
[2K[2Khallowed_hornet
[31m[EVAL] Best accuracy:64.5[0m
[2K[2Khypersonic_crane
[31m[EVAL] Best accuracy:59.57999801635742[0m
[2K[2Kindustrious_salamander
[31m[EVAL] Best accuracy:65.83999633789062[0m
[2K[2Kjovial_chupacabra
[31m[EVAL] Best accuracy:63.22999954223633[0m
[2K[2Kkickass_camel
[31m[EVAL] Best accuracy:66.1199951171875[0m
[2K[2Klemon_dragon
[31m[EVAL] Best accuracy:60.98999786376953[0m
[2K[2Kochre_oriole
[31m[EVAL] Best accuracy:65.1199951171875[0m
[2K[2Kpractical_zebu
[31m[EVAL] Best accuracy:63.29999923706055[0m
[2K[2Krainbow_sawfish
[31m[EVAL] Best accuracy:68.23999786376953[0m
[2K[2Krusset_hippo
[31m[EVAL] Best accuracy:65.54000091552734[0m
[2K[2Kserious_emu
[31m[EVAL] Best accuracy:61.04999923706055[0m
[2K[2Kshiny_dragon
[31m[EVAL] Best accuracy:65.22999572753906[0m
[2K[2Kstriped_lori
[31m[EVAL] Best accuracy:64.33000183105469[0m
[2K[2Ksuccessful_rat
[31m[EVAL] Best accuracy:67.18999481201172[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 44.0, 'WM': 2.899999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 44.0, 'WM': 2.899999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 44.0, 'WM': 2.899999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7797.444878101349
ic| self.metadata["time_remaining"]: 83106.1754784584
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 71.35,
               'codename': 'Volga',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_1/tests_Volga_22_10_2024_09_38/Generation_3/woodoo_ibis',
               'input_shape': [50000, 20, 20, 20],
               'mode': 'NAS',
               'num_classes': 7,
               'test_type': 'T2_Proxy/seed_1',
               'time_remaining': 75308.36904120445,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| unique_values: array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ],
                         dtype=float32)
ic| C: 1
ic| H: 9
ic| PH: 1
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fa4a533c0d0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4a533c9a0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4a533e740>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4a533c040>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fa454c2f3a0>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fa4a4a7e2f0>,
                 ToTensor(),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fa4f9418040>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['tireless_inchworm',
                  'chirpy_agouti',
                  'grinning_malamute',
                  'masked_quetzal',
                  'tireless_bat',
                  'quick_newt',
                  'aboriginal_armadillo',
                  'refreshing_mamba',
                  'dashing_baboon',
                  'flying_wallaby']
ic| params: [16.0, 32, 2.899999999999997, 8, 8]
ic| params: [40.0, 112, 2.7499999999999973, 8, 8]
ic| params: [32.0, 112, 2.549999999999998, 9, 8]
ic| params: [64.0, 64, 2.0999999999999996, 19, 8]
ic| params: [56.0, 64, 2.4499999999999984, 20, 8]
ic| params: [16.0, 64, 2.3999999999999986, 16, 8]
ic| params: [32.0, 80, 2.6499999999999977, 22, 8]
ic| params: [24.0, 96, 2.7499999999999973, 16, 8]
ic| params: [56.0, 120, 2.3499999999999988, 13, 8]
ic| params: [16.0, 64, 2.599999999999998, 10, 8]
ic| individuals: ['tireless_inchworm',
                  'chirpy_agouti',
                  'grinning_malamute',
                  'masked_quetzal',
                  'tireless_bat',
                  'quick_newt',
                  'aboriginal_armadillo',
                  'refreshing_mamba',
                  'dashing_baboon',
                  'flying_wallaby']
ic| params_dict: {'aboriginal_armadillo': [32.0, 80, 2.6499999999999977, 22, 8],
                  'chirpy_agouti': [40.0, 112, 2.7499999999999973, 8, 8],
                  'dashing_baboon': [56.0, 120, 2.3499999999999988, 13, 8],
                  'flying_wallaby': [16.0, 64, 2.599999999999998, 10, 8],
                  'grinning_malamute': [32.0, 112, 2.549999999999998, 9, 8],
                  'masked_quetzal': [64.0, 64, 2.0999999999999996, 19, 8],
                  'quick_newt': [16.0, 64, 2.3999999999999986, 16, 8],
                  'refreshing_mamba': [24.0, 96, 2.7499999999999973, 16, 8],
                  'tireless_bat': [56.0, 64, 2.4499999999999984, 20, 8],
                  'tireless_inchworm': [16.0, 32, 2.899999999999997, 8, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a533c0d0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a533c9a0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a533e740>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a533c040>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa454c2f3a0>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a4a7e2f0>,
                                                ToTensor(),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4f9418040>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 2'
ic| f"selected transform {train_transform}": ('selected transform [RandAugment(interpolation=InterpolationMode.NEAREST, '
                                              'num_ops=2, magnitude=5, num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41689415680
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 72896.20453500748
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwoodoo_ibis
[31m[EVAL] Best accuracy:63.679996490478516[0m
['parents.csv', 'carrot_finch', 'competent_numbat', 'electric_jaguarundi', 'golden_kagu', 'granite_terrier', 'hallowed_hornet', 'hypersonic_crane', 'industrious_salamander', 'jovial_chupacabra', 'kickass_camel', 'lemon_dragon', 'ochre_oriole', 'practical_zebu', 'rainbow_sawfish', 'russet_hippo', 'serious_emu', 'shiny_dragon', 'striped_lori', 'successful_rat', 'woodoo_ibis', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 68.24
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_1/tests_Volga_22_10_2024_09_38/Generation_3/rainbow_sawfish/config.yaml

=== Training ===
  Allotted compute time remaining: ~20h,55m,8s
[31m[EVAL] Best accuracy:83.81999969482422[0m

=== Predicting ===
  Allotted compute time remaining: ~20h,19m,45s

========== Dataset   Sokoto   =============================================
  Metadata:
   - input_shape         : [50000, 1, 9, 9]
   - codename            : Sokoto
   - benchmark           : 0.0
   - num_classes         : 9
   - time_remaining      : 73184.09004640579

=== Processing Data ===
  Allotted compute time remaining: ~20h,19m,44s

=== Performing NAS ===
  Allotted compute time remaining: ~20h,14m,56s
spawn
Created model:  radiant_fox
Created model:  mighty_hornet
Created model:  scarlet_raccoon
Created model:  lurking_ringtail
Created model:  premium_basilisk
Created model:  daring_seagull
Created model:  impartial_robin
Created model:  holistic_parakeet
Created model:  invisible_ibis
Created model:  accurate_ostrich
Created model:  neat_petrel
Created model:  spirited_shellfish
Created model:  vigorous_guillemot
Created model:  furry_snail
Created model:  zippy_tody
Created model:  piquant_mackerel
Created model:  burgundy_hyena
Created model:  tomato_panther
Created model:  classic_ara
Created model:  organic_newt
[2K[2Kaccurate_ostrich
[31m[EVAL] Best accuracy:16.1299991607666[0m
[2K[2Kburgundy_hyena
[31m[EVAL] Best accuracy:11.829999923706055[0m
[2K[2Kclassic_ara
[31m[EVAL] Best accuracy:12.710000038146973[0m
[2K[2Kdaring_seagull
[31m[EVAL] Best accuracy:15.960000038146973[0m
[2K[2Kfurry_snail
[31m[EVAL] Best accuracy:11.699999809265137[0m
[2K[2Kholistic_parakeet
[31m[EVAL] Best accuracy:11.989999771118164[0m
[2K[2Kimpartial_robin
[31m[EVAL] Best accuracy:16.94999885559082[0m
[2K[2Kinvisible_ibis
[31m[EVAL] Best accuracy:11.539999961853027[0m
[2K[2Klurking_ringtail
[31m[EVAL] Best accuracy:15.710000038146973[0m
[2K[2Kmighty_hornet
[31m[EVAL] Best accuracy:14.049999237060547[0m
[2K[2Kneat_petrel
[31m[EVAL] Best accuracy:11.769999504089355[0m
[2K[2Korganic_newt
[31m[EVAL] Best accuracy:19.170000076293945[0m
[2K[2Kpiquant_mackerel
[31m[EVAL] Best accuracy:13.380000114440918[0m
[2K[2Kpremium_basilisk
[31m[EVAL] Best accuracy:11.559999465942383[0m
[2K[2Kradiant_fox
[31m[EVAL] Best accuracy:17.850000381469727[0m
[2K[2Kscarlet_raccoon
[31m[EVAL] Best accuracy:11.649999618530273[0m
[2K[2Kspirited_shellfish
[31m[EVAL] Best accuracy:11.319999694824219[0m
[2K[2Ktomato_panther
[31m[EVAL] Best accuracy:11.309999465942383[0m
[2K[2Kvigorous_guillemot
[31m[EVAL] Best accuracy:12.069999694824219[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 3332.949958562851
ic| self.metadata["time_remaining"]: 72896.20453500748
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 80, 'WA': 16.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kzippy_tody
[31m[EVAL] Best accuracy:13.119999885559082[0m
['radiant_fox', 'mighty_hornet', 'scarlet_raccoon', 'lurking_ringtail', 'premium_basilisk', 'daring_seagull', 'impartial_robin', 'holistic_parakeet', 'invisible_ibis', 'accurate_ostrich', 'neat_petrel', 'spirited_shellfish', 'vigorous_guillemot', 'furry_snail', 'zippy_tody', 'piquant_mackerel', 'burgundy_hyena', 'tomato_panther', 'classic_ara', 'organic_newt', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 19.17
Child: [32.0, 120, 2.85, 11]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.09634819197336707
[24.0, 120, 2.85, 11]
Child: [44.0, 104, 2.75, 13]
Old_chrom: [48.0, 104, 2.7499999999999973, 12]
Diff: 0.038690490187679845
[44.0, 104, 2.8, 14]
Child: [28.0, 120, 2.8000000000000003, 16]
Old_chrom: [28.0, 120, 2.75, 14]
Diff: 0.09634819197336922
[28.0, 120, 2.8000000000000003, 16]
Child: [24.0, 104, 2.85, 15]
Old_chrom: [24.0, 104, 2.8000000000000003, 13]
Diff: 0.09634819197336895
[16.0, 104, 2.85, 14]
Child: [40.0, 104, 2.6500000000000004, 16]
Old_chrom: [40.0, 96, 2.599999999999998, 16]
Diff: 0.0798646754898541
[40.0, 96, 2.6000000000000005, 15]
Child: [40.0, 96, 2.6000000000000005, 15]
Old_chrom: [40.0, 96, 2.599999999999998, 16]
Diff: 0.017857156854346513
[40.0, 96, 2.5500000000000007, 16]
Child: [40.0, 96, 2.5500000000000007, 16]
Old_chrom: [40.0, 96, 2.599999999999998, 16]
Diff: 0.060633906259081626
[40.0, 96, 2.5500000000000007, 17]
Child: [40.0, 96, 2.5500000000000007, 17]
Old_chrom: [40.0, 96, 2.599999999999998, 16]
Diff: 0.07849104911622448
[40.0, 104, 2.5500000000000007, 18]
Child: [32.0, 120, 2.899999999999997, 13]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.0
[32.0, 120, 2.899999999999997, 13]
Child: [32.0, 120, 2.899999999999997, 13]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.0
[24.0, 128, 2.899999999999997, 13]
Child: [24.0, 128, 2.899999999999997, 13]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.060897435897435896
[32.0, 128, 2.849999999999997, 12]
Child: [32.0, 128, 2.849999999999997, 12]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.09772181834699534
[24.0, 120, 2.799999999999997, 11]
Child: [32.0, 112, 2.6999999999999975, 8]
Old_chrom: [32.0, 120, 2.7499999999999973, 8]
Diff: 0.07986467548985247
[40.0, 104, 2.6499999999999977, 8]
Child: [40.0, 104, 2.6499999999999977, 8]
Old_chrom: [44.0, 104, 2.6500000000000004, 11]
Diff: 0.07440477590196556
[32.0, 104, 2.599999999999998, 8]
Child: [32.0, 104, 2.599999999999998, 8]
Old_chrom: [32.0, 88, 2.549999999999998, 8]
Diff: 0.0990954447206217
[40.0, 112, 2.549999999999998, np.int64(8)]
Child: [32.0, 120, 2.799999999999997, 17]
Old_chrom: [28.0, 120, 2.8000000000000003, 16]
Diff: 0.03869049130918409
[24.0, 120, 2.849999999999997, 16]
Child: [24.0, 120, 2.849999999999997, 16]
Old_chrom: [24.0, 120, 2.85, 11]
Diff: 0.08928572940442218
[32.0, 112, 2.899999999999997, 16]
Child: [32.0, 112, 2.899999999999997, 16]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.0728021978021978
[32.0, 104, 2.9499999999999966, 15]
Child: [32.0, 120, 2.6999999999999975, 19]
Old_chrom: [24.0, 112, 2.6999999999999975, 19]
Diff: 0.060897435897435896
[40.0, 128, 2.7499999999999973, 19]
Child: [24.0, 112, 2.549999999999998, 13]
Old_chrom: [32.0, 120, 2.549999999999998, 13]
Diff: 0.060897435897435896
[32.0, 120, 2.4999999999999982, 13]
Child: [32.0, 120, 2.4999999999999982, 13]
Old_chrom: [32.0, 120, 2.549999999999998, 13]
Diff: 0.06063390625908324
[40.0, 120, 2.4499999999999984, 13]
Created model:  bronze_turtle
Created model:  camouflaged_lyrebird
Created model:  courageous_saluki
Created model:  diligent_mosquito
Created model:  flat_bandicoot
Created model:  great_cuttlefish
Created model:  grinning_gharial
Created model:  grumpy_iguana
Created model:  handsome_moth
Created model:  heretic_bulldog
Created model:  literate_impala
Created model:  mauve_goshawk
Created model:  messy_rattlesnake
Created model:  nocturnal_pronghorn
Created model:  olive_jackrabbit
Created model:  peculiar_tarantula
Created model:  powerful_roadrunner
Created model:  successful_labrador
Created model:  unbiased_peccary
Created model:  vagabond_mastodon
[2K[2Kbronze_turtle
[31m[EVAL] Best accuracy:15.679999351501465[0m
[2K[2Kcamouflaged_lyrebird
[31m[EVAL] Best accuracy:14.319999694824219[0m
[2K[2Kcourageous_saluki
[31m[EVAL] Best accuracy:16.049999237060547[0m
[2K[2Kdiligent_mosquito
[31m[EVAL] Best accuracy:18.520000457763672[0m
[2K[2Kflat_bandicoot
[31m[EVAL] Best accuracy:15.179999351501465[0m
[2K[2Kgreat_cuttlefish
[31m[EVAL] Best accuracy:18.06999969482422[0m
[2K[2Kgrinning_gharial
[31m[EVAL] Best accuracy:12.09000015258789[0m
[2K[2Kgrumpy_iguana
[31m[EVAL] Best accuracy:15.579999923706055[0m
[2K[2Khandsome_moth
[31m[EVAL] Best accuracy:13.019999504089355[0m
[2K[2Kheretic_bulldog
[31m[EVAL] Best accuracy:17.739999771118164[0m
[2K[2Kliterate_impala
[31m[EVAL] Best accuracy:19.489999771118164[0m
[2K[2Kmauve_goshawk
[31m[EVAL] Best accuracy:16.799999237060547[0m
[2K[2Kmessy_rattlesnake
[31m[EVAL] Best accuracy:19.76999855041504[0m
[2K[2Knocturnal_pronghorn
[31m[EVAL] Best accuracy:19.09000015258789[0m
[2K[2Kolive_jackrabbit
[31m[EVAL] Best accuracy:15.739999771118164[0m
[2K[2Kpeculiar_tarantula
[31m[EVAL] Best accuracy:14.819999694824219[0m
[2K[2Kpowerful_roadrunner
[31m[EVAL] Best accuracy:12.75999927520752[0m
[2K[2Ksuccessful_labrador
[31m[EVAL] Best accuracy:12.09000015258789[0m
[2K[2Kunbiased_peccary
[31m[EVAL] Best accuracy:13.380000114440918[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 80, 'WA': 16.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 80, 'WA': 16.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 80, 'WA': 16.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6522.161257982254
ic| self.metadata["time_remaining"]: 72896.20453500748
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 80, 'WA': 16.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 80, 'WA': 16.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 80, 'WA': 16.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 80, 'WA': 16.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 80, 'WA': 16.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 32.0, 'WM': 2.9, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvagabond_mastodon
[31m[EVAL] Best accuracy:12.929999351501465[0m
['parents.csv', 'bronze_turtle', 'camouflaged_lyrebird', 'courageous_saluki', 'diligent_mosquito', 'flat_bandicoot', 'great_cuttlefish', 'grinning_gharial', 'grumpy_iguana', 'handsome_moth', 'heretic_bulldog', 'literate_impala', 'mauve_goshawk', 'messy_rattlesnake', 'nocturnal_pronghorn', 'olive_jackrabbit', 'peculiar_tarantula', 'powerful_roadrunner', 'successful_labrador', 'unbiased_peccary', 'vagabond_mastodon', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 19.77
Child: [32.0, 120, 2.7, 10]
Old_chrom: [32.0, 120, 2.7499999999999973, 8]
Diff: 0.09634819197336733
[32.0, 120, 2.7, 11]
Child: [36.0, 112, 2.75, 12]
Old_chrom: [48.0, 104, 2.7499999999999973, 12]
Diff: 0.08173078322797289
[36.0, 112, 2.75, 11]
Child: [32.0, 112, 2.7, 11]
Old_chrom: [32.0, 120, 2.7, 11]
Diff: 0.019230769230769232
[32.0, 112, 2.75, 11]
Child: [32.0, 112, 2.75, 11]
Old_chrom: [32.0, 120, 2.7499999999999973, 8]
Diff: 0.07280221179940145
[24.0, 112, 2.7, 12]
Child: [24.0, 112, 2.7, 12]
Old_chrom: [32.0, 120, 2.7, 11]
Diff: 0.07875457875457875
[16.0, 120, 2.75, 13]
Child: [16.0, 120, 2.75, 13]
Old_chrom: [28.0, 120, 2.75, 14]
Diff: 0.08035714285714285
[16.0, 128, 2.7, 12]
Child: [34.0, 120, 2.7, 12]
Old_chrom: [32.0, 120, 2.7, 11]
Diff: 0.02827380952380952
[42.0, 120, 2.75, 13]
Child: [42.0, 120, 2.75, 13]
Old_chrom: [48.0, 104, 2.7499999999999973, 12]
Diff: 0.08756869531588499
[34.0, 128, 2.7, 13]
Child: [28.0, 112, 2.9000000000000004, 13]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.04006411872668116
[36.0, 112, 2.9000000000000004, 13]
Child: [36.0, 112, 2.9000000000000004, 13]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.04006411872668116
[28.0, 104, 2.8500000000000005, 14]
Child: [28.0, 104, 2.8500000000000005, 14]
Old_chrom: [24.0, 104, 2.8000000000000003, 13]
Diff: 0.09932438244955971
[28.0, 96, 2.8000000000000007, 15]
Child: [24.0, 112, 2.8000000000000003, 12]
Old_chrom: [24.0, 120, 2.799999999999997, 11]
Diff: 0.03708792720661999
[32.0, 120, 2.7500000000000004, 13]
Child: [32.0, 120, 2.7500000000000004, 13]
Old_chrom: [32.0, 120, 2.7499999999999973, 8]
Diff: 0.08928572940442218
[24.0, 128, 2.7000000000000006, 12]
Child: [26.0, 120, 2.8000000000000003, 14]
Old_chrom: [24.0, 120, 2.799999999999997, 11]
Diff: 0.06398811035680313
[34.0, 112, 2.85, 15]
Child: [28.0, 104, 2.9000000000000004, 14]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.07715203081459325
[36.0, 104, 2.9000000000000004, 14]
Child: [36.0, 104, 2.9000000000000004, 14]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.07715203081459325
[28.0, 96, 2.9000000000000004, 15]
Child: [28.0, 96, 2.9000000000000004, 15]
Old_chrom: [28.0, 96, 2.8000000000000007, 15]
Diff: 0.08574929257125442
[20.0, 88, 2.95, 14]
Child: [30.0, 112, 2.9000000000000004, 16]
Old_chrom: [32.0, 120, 2.899999999999997, 13]
Diff: 0.08321888063144306
[30.0, 120, 2.95, 16]
Child: [26.0, 112, 2.8000000000000003, 15]
Old_chrom: [24.0, 104, 2.8000000000000003, 13]
Diff: 0.0653617216117216
[26.0, 120, 2.85, 16]
Child: [26.0, 120, 2.85, 16]
Old_chrom: [28.0, 120, 2.8000000000000003, 16]
Diff: 0.07105057292574991
[26.0, 112, 2.8000000000000003, 16]
Child: [26.0, 112, 2.8000000000000003, 16]
Old_chrom: [24.0, 104, 2.8000000000000003, 13]
Diff: 0.08321886446886446
[26.0, 104, 2.7500000000000004, 16]
Child: [24.0, 112, 2.549999999999998, 11]
Old_chrom: [32.0, 120, 2.549999999999998, 13]
Diff: 0.0966117216117216
[16.0, 120, 2.599999999999998, 10]
Child: [40.0, 112, 2.9499999999999966, 15]
Old_chrom: [32.0, 104, 2.9499999999999966, 15]
Diff: 0.060897435897435896
[40.0, 104, 2.899999999999997, 16]
Child: [24.0, 104, 2.549999999999998, 8]
Old_chrom: [32.0, 88, 2.549999999999998, 8]
Diff: 0.08012820512820512
[16.0, 104, 2.549999999999998, np.int64(8)]
Child: [24.0, 120, 2.8000000000000003, 13]
Old_chrom: [24.0, 120, 2.799999999999997, 11]
Diff: 0.035714300832993616
[24.0, 128, 2.7500000000000004, 13]
Child: [24.0, 128, 2.7500000000000004, 13]
Old_chrom: [28.0, 120, 2.75, 14]
Diff: 0.05792125113557988
[16.0, 120, 2.7000000000000006, 13]
Child: [16.0, 120, 2.7000000000000006, 13]
Old_chrom: [16.0, 128, 2.7, 12]
Diff: 0.03708791780224655
[16.0, 128, 2.7500000000000004, 14]
Child: [16.0, 128, 2.7500000000000004, 14]
Old_chrom: [28.0, 120, 2.75, 14]
Diff: 0.0817307749451037
[np.int64(16), 120, 2.8000000000000003, 14]
Child: [24.0, 120, 2.8000000000000003, 16]
Old_chrom: [24.0, 120, 2.799999999999997, 11]
Diff: 0.08928572940442218
[24.0, 112, 2.85, 16]
Child: [32.0, 104, 2.8000000000000003, 15]
Old_chrom: [24.0, 104, 2.8000000000000003, 13]
Diff: 0.07738095238095238
[24.0, 104, 2.85, 16]
Child: [24.0, 104, 2.85, 16]
Old_chrom: [16.0, 104, 2.85, 14]
Diff: 0.07738095238095238
[16.0, 112, 2.85, 16]
Child: [16.0, 112, 2.85, 16]
Old_chrom: [16.0, 104, 2.85, 14]
Diff: 0.054945054945054944
[np.int64(16), 120, 2.9, 17]
Child: [28.0, 120, 2.9499999999999966, 15]
Old_chrom: [32.0, 104, 2.9499999999999966, 15]
Diff: 0.05929487179487179
[36.0, 128, 2.9499999999999966, 16]
Child: [36.0, 128, 2.9499999999999966, 16]
Old_chrom: [32.0, 104, 2.9499999999999966, 15]
Diff: 0.09638278388278387
[36.0, 136, 2.9499999999999966, 16]
Child: [24.0, 104, 2.8000000000000003, 16]
Old_chrom: [24.0, 104, 2.8000000000000003, 13]
Diff: 0.05357142857142857
[16.0, 112, 2.8000000000000003, 17]
Child: [16.0, 112, 2.8000000000000003, 17]
Old_chrom: [16.0, 80, 2.799999999999997, 17]
Diff: 0.07692309204178482
[np.int64(16), 104, 2.85, 18]
Child: [np.int64(16), 104, 2.85, 18]
Old_chrom: [16.0, 104, 2.85, 14]
Diff: 0.07142857142857142
[np.int64(16), 96, 2.8000000000000003, 17]
Child: [np.int64(16), 96, 2.8000000000000003, 17]
Old_chrom: [16.0, 80, 2.799999999999997, 17]
Diff: 0.03846155358024637
[np.int64(16), 96, 2.85, 16]
Child: [np.int64(16), 96, 2.85, 16]
Old_chrom: [16.0, 104, 2.85, 14]
Diff: 0.054945054945054944
[np.int64(16), 104, 2.85, 17]
Child: [np.int64(16), 104, 2.85, 17]
Old_chrom: [16.0, 104, 2.85, 14]
Diff: 0.05357142857142857
[np.int64(16), 104, 2.8000000000000003, 17]
Child: [np.int64(16), 104, 2.8000000000000003, 17]
Old_chrom: [16.0, 80, 2.799999999999997, 17]
Diff: 0.0576923228110156
[np.int64(24), 96, 2.85, 17]
Child: [np.int64(24), 96, 2.85, 17]
Old_chrom: [24.0, 112, 2.85, 16]
Diff: 0.05631868131868132
[np.int64(16), 104, 2.9, 17]
Child: [np.int64(16), 104, 2.9, 17]
Old_chrom: [np.int64(16), 120, 2.9, 17]
Diff: 0.038461538461538464
[np.int64(24), 112, 2.9499999999999997, 18]
Child: [np.int64(24), 112, 2.9499999999999997, 18]
Old_chrom: [30.0, 120, 2.95, 16]
Diff: 0.08619506065938941
[np.int64(32), 120, 2.9, 19]
Created model:  careful_guppy
Created model:  courageous_millipede
Created model:  enthusiastic_urchin
Created model:  evasive_reindeer
Created model:  imported_tuna
Created model:  industrious_starfish
Created model:  lemon_marmot
Created model:  ludicrous_dolphin
Created model:  magic_sloth
Created model:  magnetic_capybara
Created model:  mahogany_vulture
Created model:  maize_cockle
Created model:  micro_falcon
Created model:  nonchalant_coot
Created model:  notorious_swift
Created model:  righteous_camel
Created model:  serious_dalmatian
Created model:  sloppy_dachshund
Created model:  tacky_vicugna
Created model:  turquoise_jellyfish
[2K[2Kcareful_guppy
[31m[EVAL] Best accuracy:17.670000076293945[0m
[2K[2Kcourageous_millipede
[31m[EVAL] Best accuracy:18.600000381469727[0m
[2K[2Kenthusiastic_urchin
[31m[EVAL] Best accuracy:16.84000015258789[0m
[2K[2Kevasive_reindeer
[31m[EVAL] Best accuracy:14.25[0m
[2K[2Kimported_tuna
[31m[EVAL] Best accuracy:14.529999732971191[0m
[2K[2Kindustrious_starfish
[31m[EVAL] Best accuracy:16.869998931884766[0m
[2K[2Klemon_marmot
[31m[EVAL] Best accuracy:11.649999618530273[0m
[2K[2Kludicrous_dolphin
[31m[EVAL] Best accuracy:12.799999237060547[0m
[2K[2Kmagic_sloth
[31m[EVAL] Best accuracy:15.65999984741211[0m
[2K[2Kmagnetic_capybara
[31m[EVAL] Best accuracy:15.59999942779541[0m
[2K[2Kmahogany_vulture
[31m[EVAL] Best accuracy:17.649999618530273[0m
[2K[2Kmaize_cockle
[31m[EVAL] Best accuracy:12.920000076293945[0m
[2K[2Kmicro_falcon
[31m[EVAL] Best accuracy:20.100000381469727[0m
[2K[2Knonchalant_coot
[31m[EVAL] Best accuracy:19.850000381469727[0m
[2K[2Knotorious_swift
[31m[EVAL] Best accuracy:13.309999465942383[0m
[2K[2Krighteous_camel
[31m[EVAL] Best accuracy:18.809999465942383[0m
[2K[2Kserious_dalmatian
[31m[EVAL] Best accuracy:13.609999656677246[0m
[2K[2Ksloppy_dachshund
[31m[EVAL] Best accuracy:16.69999885559082[0m
[2K[2Ktacky_vicugna
[31m[EVAL] Best accuracy:18.649999618530273[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 32.0, 'WM': 2.9, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 32.0, 'WM': 2.9, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 32.0, 'WM': 2.9, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 9654.666922330856
ic| self.metadata["time_remaining"]: 72896.20453500748
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 0.0,
               'codename': 'Sokoto',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_1/tests_Sokoto_22_10_2024_12_28/Generation_3/turquoise_jellyfish',
               'input_shape': [50000, 1, 9, 9],
               'mode': 'NAS',
               'num_classes': 9,
               'test_type': 'T2_Proxy/seed_1',
               'time_remaining': 63241.29956030846,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| unique_values: array([0.09411765, 0.09803922, 0.10196079, 0.10588235, 0.10980392,
                          0.11372549, 0.11764706, 0.12156863, 0.1254902 , 0.12941177,
                          0.13333334, 0.13725491, 0.14117648, 0.14509805, 0.14901961,
                          0.15294118, 0.15686275, 0.16078432, 0.16470589, 0.16862746,
                          0.17254902, 0.1764706 , 0.18039216, 0.18431373, 0.1882353 ,
                          0.19215687, 0.19607843, 0.2       , 0.20392157, 0.20784314,
                          0.21176471, 0.21568628, 0.21960784, 0.22352941, 0.22745098,
                          0.23137255, 0.23529412, 0.23921569, 0.24313726, 0.24705882,
                          0.2509804 , 0.25490198, 0.25882354, 0.2627451 , 0.26666668,
                          0.27058825, 0.27450982, 0.2784314 , 0.28235295, 0.28627452,
                          0.2901961 , 0.29411766, 0.29803923, 0.3019608 , 0.30588236,
                          0.30980393, 0.3137255 , 0.31764707, 0.32156864, 0.3254902 ,
                          0.32941177, 0.33333334, 0.3372549 , 0.34117648, 0.34509805,
                          0.34901962, 0.3529412 , 0.35686275, 0.36078432, 0.3647059 ,
                          0.36862746, 0.37254903, 0.3764706 , 0.38039216, 0.38431373,
                          0.3882353 , 0.39215687, 0.39607844, 0.4       , 0.40392157,
                          0.40784314, 0.4117647 , 0.41568628, 0.41960785, 0.42352942,
                          0.42745098, 0.43137255, 0.43529412, 0.4392157 , 0.44313726,
                          0.44705883, 0.4509804 , 0.45490196, 0.45882353, 0.4627451 ,
                          0.46666667, 0.47058824, 0.4745098 , 0.47843137, 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7411765 ,
                          0.74509805, 0.7490196 , 0.7529412 , 0.75686276, 0.7647059 ,
                          0.76862746, 0.77254903, 0.7764706 , 0.78431374, 0.7882353 ,
                          0.7921569 , 0.79607844, 0.8       , 0.8039216 , 0.8156863 ,
                          0.81960785, 0.8235294 , 0.827451  , 0.83137256, 0.8392157 ,
                          0.8509804 , 0.85882354, 0.8627451 , 0.8666667 , 0.87058824,
                          0.8784314 , 0.88235295, 0.8901961 , 0.89411765, 0.90588236,
                          0.9098039 , 0.9137255 , 0.92156863, 0.92941177, 0.93333334,
                          0.9411765 , 0.9490196 , 0.9529412 , 0.972549  ], dtype=float32)
ic| C: 3
ic| H: 32
ic| PH: 4
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fa4a4a7eda0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4a4a7d900>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4a4a7d3f0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fa4a4a7fe20>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fa4540efeb0>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fa44e654460>,
                 ToTensor(),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fa44e656020>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['ultra_owl',
                  'angelic_zebu',
                  'simple_warthog',
                  'impossible_nightingale',
                  'almond_alpaca',
                  'hulking_beluga',
                  'cobalt_wildebeest',
                  'impartial_elk',
                  'garrulous_rat',
                  'nostalgic_rattlesnake']
ic| params: [16.0, 80, 2.05, 22, 8]
ic| params: [56.0, 80, 2.1999999999999993, 15, 8]
ic| params: [48.0, 96, 2.6999999999999975, 12, 8]
ic| params: [40.0, 88, 2.7499999999999973, 8, 8]
ic| params: [64.0, 72, 2.05, 20, 8]
ic| params: [24.0, 80, 2.849999999999997, 20, 8]
ic| params: [32.0, 112, 2.599999999999998, 20, 8]
ic| params: [64.0, 88, 2.3999999999999986, 9, 8]
ic| params: [16.0, 112, 2.0999999999999996, 22, 8]
ic| params: [56.0, 56, 2.4499999999999984, 18, 8]
ic| individuals: ['ultra_owl',
                  'angelic_zebu',
                  'simple_warthog',
                  'impossible_nightingale',
                  'almond_alpaca',
                  'hulking_beluga',
                  'cobalt_wildebeest',
                  'impartial_elk',
                  'garrulous_rat',
                  'nostalgic_rattlesnake']
ic| params_dict: {'almond_alpaca': [64.0, 72, 2.05, 20, 8],
                  'angelic_zebu': [56.0, 80, 2.1999999999999993, 15, 8],
                  'cobalt_wildebeest': [32.0, 112, 2.599999999999998, 20, 8],
                  'garrulous_rat': [16.0, 112, 2.0999999999999996, 22, 8],
                  'hulking_beluga': [24.0, 80, 2.849999999999997, 20, 8],
                  'impartial_elk': [64.0, 88, 2.3999999999999986, 9, 8],
                  'impossible_nightingale': [40.0, 88, 2.7499999999999973, 8, 8],
                  'nostalgic_rattlesnake': [56.0, 56, 2.4499999999999984, 18, 8],
                  'simple_warthog': [48.0, 96, 2.6999999999999975, 12, 8],
                  'ultra_owl': [16.0, 80, 2.05, 22, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a4a7eda0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a4a7d900>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a4a7d3f0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4a4a7fe20>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa4540efeb0>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa44e654460>,
                                                ToTensor(),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fa44e656020>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 5'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=15)]')
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41238528000
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 62368.97976350784
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 80, 'WA': 16.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kturquoise_jellyfish
[31m[EVAL] Best accuracy:13.039999961853027[0m
['parents.csv', 'careful_guppy', 'courageous_millipede', 'enthusiastic_urchin', 'evasive_reindeer', 'imported_tuna', 'industrious_starfish', 'lemon_marmot', 'ludicrous_dolphin', 'magic_sloth', 'magnetic_capybara', 'mahogany_vulture', 'maize_cockle', 'micro_falcon', 'nonchalant_coot', 'notorious_swift', 'righteous_camel', 'serious_dalmatian', 'sloppy_dachshund', 'tacky_vicugna', 'turquoise_jellyfish', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 20.1
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_1/tests_Sokoto_22_10_2024_12_28/Generation_3/micro_falcon/config.yaml

=== Training ===
  Allotted compute time remaining: ~17h,34m,1s
Early stopping at epoch 22
[31m[EVAL] Best accuracy:29.78999900817871[0m

=== Predicting ===
  Allotted compute time remaining: ~17h,25m,21s

========== Dataset  CIFAR10   =============================================
  Metadata:
   - input_shape         : [50000, 3, 32, 32]
   - codename            : CIFAR10
   - benchmark           : 90.65
   - num_classes         : 10
   - time_remaining      : 62719.83662033081

=== Processing Data ===
  Allotted compute time remaining: ~17h,25m,19s

=== Performing NAS ===
  Allotted compute time remaining: ~17h,19m,28s
spawn
Created model:  stereotyped_raccoon
Created model:  ubiquitous_dachshund
Created model:  spiked_caracara
Created model:  yellow_bat
Created model:  aspiring_rat
Created model:  loose_rabbit
Created model:  accomplished_stallion
Created model:  almond_cheetah
Created model:  gainful_cicada
Created model:  faithful_oxpecker
Created model:  charming_kittiwake
Created model:  fine_cicada
Created model:  pastel_otter
Created model:  blazing_cuckoo
Created model:  nice_taipan
Created model:  loyal_clam
Created model:  prophetic_limpet
Created model:  khaki_perch
Created model:  futuristic_goshawk
Created model:  bizarre_pegasus
[2K[2Kaccomplished_stallion
[31m[EVAL] Best accuracy:70.3699951171875[0m
[2K[2Kalmond_cheetah
[31m[EVAL] Best accuracy:71.1199951171875[0m
[2K[2Kaspiring_rat
[31m[EVAL] Best accuracy:70.43000030517578[0m
[2K[2Kbizarre_pegasus
[31m[EVAL] Best accuracy:68.18000030517578[0m
[2K[2Kblazing_cuckoo
[31m[EVAL] Best accuracy:74.18000030517578[0m
[2K[2Kcharming_kittiwake
[31m[EVAL] Best accuracy:65.56999969482422[0m
[2K[2Kfaithful_oxpecker
[31m[EVAL] Best accuracy:72.25[0m
[2K[2Kfine_cicada
[31m[EVAL] Best accuracy:72.63999938964844[0m
[2K[2Kfuturistic_goshawk
[31m[EVAL] Best accuracy:65.26000213623047[0m
[2K[2Kgainful_cicada
[31m[EVAL] Best accuracy:64.29000091552734[0m
[2K[2Kkhaki_perch
[31m[EVAL] Best accuracy:73.29000091552734[0m
[2K[2Kloose_rabbit
[31m[EVAL] Best accuracy:76.6199951171875[0m
[2K[2Kloyal_clam
[31m[EVAL] Best accuracy:69.36000061035156[0m
[2K[2Knice_taipan
[31m[EVAL] Best accuracy:75.95999908447266[0m
[2K[2Kpastel_otter
[31m[EVAL] Best accuracy:75.18999481201172[0m
[2K[2Kprophetic_limpet
[31m[EVAL] Best accuracy:66.0999984741211[0m
[2K[2Kspiked_caracara
[31m[EVAL] Best accuracy:65.2699966430664[0m
[2K[2Kstereotyped_raccoon
[31m[EVAL] Best accuracy:72.22000122070312[0m
[2K[2Kubiquitous_dachshund
[31m[EVAL] Best accuracy:64.58000183105469[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 80, 'WA': 16.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 80, 'WA': 16.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 80, 'WA': 16.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2416.2914209365845
ic| self.metadata["time_remaining"]: 62368.97976350784
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 80, 'WA': 16.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 80, 'WA': 16.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 80, 'WA': 16.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 80, 'WA': 16.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 18, 'W0': 80, 'WA': 16.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 64.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kyellow_bat
[31m[EVAL] Best accuracy:69.5999984741211[0m
['stereotyped_raccoon', 'ubiquitous_dachshund', 'spiked_caracara', 'yellow_bat', 'aspiring_rat', 'loose_rabbit', 'accomplished_stallion', 'almond_cheetah', 'gainful_cicada', 'faithful_oxpecker', 'charming_kittiwake', 'fine_cicada', 'pastel_otter', 'blazing_cuckoo', 'nice_taipan', 'loyal_clam', 'prophetic_limpet', 'khaki_perch', 'futuristic_goshawk', 'bizarre_pegasus', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 76.62
Child: [36.0, 104, 2.4000000000000004, 9]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.02083334476200226
[44.0, 104, 2.4000000000000004, 8]
Child: [44.0, 104, 2.4000000000000004, 8]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.03869048761914512
[44.0, 104, 2.4000000000000004, 8]
Child: [44.0, 104, 2.4000000000000004, 8]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.03869048761914512
[44.0, 104, 2.45, 8]
Child: [44.0, 104, 2.45, 8]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.09932438244956052
[36.0, 96, 2.4000000000000004, 8]
Child: [40.0, 112, 2.4000000000000004, 13]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.09065935208800958
[32.0, 104, 2.3500000000000005, 14]
Child: [44.0, 112, 2.4000000000000004, 12]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.09363554256420006
[52.0, 120, 2.3500000000000005, 13]
Child: [36.0, 104, 2.4000000000000004, 13]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.09226191619057368
[36.0, 112, 2.3500000000000005, 14]
Child: [40.0, 104, 2.4000000000000004, 12]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.053571440000097496
[32.0, 112, 2.4000000000000004, 12]
Child: [32.0, 112, 2.4000000000000004, 12]
Old_chrom: [32.0, 96, 2.3999999999999986, 9]
Diff: 0.09203297846163597
[40.0, 104, 2.3500000000000005, 13]
Child: [44.0, 96, 2.6500000000000004, 9]
Old_chrom: [48.0, 96, 2.6500000000000004, 9]
Diff: 0.020833333333333332
[36.0, 88, 2.7, 8]
Child: [44.0, 112, 2.4000000000000004, 15]
Old_chrom: [40.0, 112, 2.3999999999999986, 16]
Diff: 0.03869048761914512
[36.0, 120, 2.4000000000000004, 15]
Child: [36.0, 120, 2.4000000000000004, 15]
Old_chrom: [40.0, 112, 2.3999999999999986, 16]
Diff: 0.057921256849914345
[36.0, 128, 2.3500000000000005, 16]
Child: [36.0, 128, 2.3500000000000005, 16]
Old_chrom: [36.0, 112, 2.3500000000000005, 14]
Diff: 0.07417582417582418
[44.0, 120, 2.4000000000000004, 17]
Child: [44.0, 120, 2.4000000000000004, 17]
Old_chrom: [40.0, 112, 2.3999999999999986, 16]
Diff: 0.057921256849914345
[52.0, 112, 2.3500000000000005, 17]
Child: [52.0, 112, 2.3500000000000005, 17]
Old_chrom: [52.0, 120, 2.3500000000000005, 13]
Diff: 0.09065934065934066
[44.0, 112, 2.3000000000000007, 18]
Child: [48.0, 104, 2.6500000000000004, 13]
Old_chrom: [48.0, 96, 2.6500000000000004, 9]
Diff: 0.09065934065934066
[56.0, 104, 2.6500000000000004, 14]
Child: [52.0, 104, 2.6500000000000004, 12]
Old_chrom: [48.0, 96, 2.6500000000000004, 9]
Diff: 0.09363553113553114
[44.0, 96, 2.6500000000000004, 13]
Child: [40.0, 96, 2.3999999999999986, 9]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.019230769230769232
[32.0, 96, 2.3999999999999986, 10]
Child: [32.0, 96, 2.3999999999999986, 10]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.07875457875457875
[32.0, 88, 2.4499999999999984, 10]
Child: [32.0, 88, 2.4499999999999984, 10]
Old_chrom: [32.0, 96, 2.3999999999999986, 9]
Diff: 0.09772181834699534
[24.0, 96, 2.4499999999999984, 9]
Child: [40.0, 104, 2.3999999999999986, 16]
Old_chrom: [40.0, 112, 2.3999999999999986, 16]
Diff: 0.019230769230769232
[40.0, 112, 2.4499999999999984, 15]
Child: [40.0, 112, 2.4499999999999984, 15]
Old_chrom: [40.0, 112, 2.3999999999999986, 16]
Diff: 0.07849104911622609
[48.0, 112, 2.4499999999999984, 15]
Child: [48.0, 112, 2.4499999999999984, 15]
Old_chrom: [48.0, 112, 2.3999999999999986, 14]
Diff: 0.07849104911622609
[56.0, 104, 2.3999999999999986, 15]
Child: [56.0, 104, 2.3999999999999986, 15]
Old_chrom: [48.0, 112, 2.3999999999999986, 14]
Diff: 0.07875457875457875
[48.0, 96, 2.4499999999999984, 14]
Child: [48.0, 96, 2.4499999999999984, 14]
Old_chrom: [48.0, 112, 2.3999999999999986, 14]
Diff: 0.0990954447206217
[40.0, 96, 2.4999999999999982, 15]
Child: [40.0, 112, 2.3999999999999986, 9]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.019230769230769232
[32.0, 120, 2.3499999999999988, 10]
Child: [40.0, 88, 2.899999999999997, 9]
Old_chrom: [56.0, 88, 2.899999999999997, 9]
Diff: 0.08333333333333333
[48.0, 88, 2.849999999999997, 10]
Child: [32.0, 96, 2.3999999999999986, 16]
Old_chrom: [40.0, 112, 2.3999999999999986, 16]
Diff: 0.08012820512820512
[24.0, 96, 2.4499999999999984, 17]
Child: [48.0, 112, 2.3999999999999986, 9]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.060897435897435896
[40.0, 120, 2.4499999999999984, 9]
Child: [40.0, 120, 2.4499999999999984, 9]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.0990954447206217
[48.0, 112, 2.4999999999999982, 8]
Child: [48.0, 112, 2.3999999999999986, 16]
Old_chrom: [40.0, 112, 2.3999999999999986, 16]
Diff: 0.041666666666666664
[40.0, 120, 2.3999999999999986, 17]
Child: [40.0, 120, 2.3999999999999986, 17]
Old_chrom: [40.0, 112, 2.3999999999999986, 16]
Diff: 0.03708791208791209
[40.0, 128, 2.4499999999999984, 16]
Child: [40.0, 128, 2.4499999999999984, 16]
Old_chrom: [40.0, 112, 2.3999999999999986, 16]
Diff: 0.0990954447206217
[40.0, 120, 2.4999999999999982, 15]
Child: [56.0, 112, 2.3999999999999986, 9]
Old_chrom: [56.0, 112, 2.3999999999999986, 9]
Diff: 0.0
[64.0, 120, 2.4499999999999984, 10]
Created model:  dandelion_coua
Created model:  dangerous_toad
Created model:  diamond_macaw
Created model:  esoteric_earwig
Created model:  famous_barnacle
Created model:  fanatic_dodo
Created model:  independent_nightingale
Created model:  indigo_civet
Created model:  lime_agouti
Created model:  loyal_coua
Created model:  married_goose
Created model:  olivine_cobra
Created model:  perfect_cicada
Created model:  practical_honeybee
Created model:  precise_beaver
Created model:  sly_crocodile
Created model:  succinct_seahorse
Created model:  talented_rat
Created model:  ultramarine_lori
Created model:  wakeful_crab
[2K[2Kdandelion_coua
[31m[EVAL] Best accuracy:73.65999603271484[0m
[2K[2Kdangerous_toad
[31m[EVAL] Best accuracy:71.47999572753906[0m
[2K[2Kdiamond_macaw
[31m[EVAL] Best accuracy:74.54999542236328[0m
[2K[2Kesoteric_earwig
[31m[EVAL] Best accuracy:75.11000061035156[0m
[2K[2Kfamous_barnacle
[31m[EVAL] Best accuracy:73.43999481201172[0m
[2K[2Kfanatic_dodo
[31m[EVAL] Best accuracy:71.6199951171875[0m
[2K[2Kindependent_nightingale
[31m[EVAL] Best accuracy:72.18999481201172[0m
[2K[2Kindigo_civet
[31m[EVAL] Best accuracy:67.27999877929688[0m
[2K[2Klime_agouti
[31m[EVAL] Best accuracy:71.41999816894531[0m
[2K[2Kloyal_coua
[31m[EVAL] Best accuracy:73.73999786376953[0m
[2K[2Kmarried_goose
[31m[EVAL] Best accuracy:75.79000091552734[0m
[2K[2Kolivine_cobra
[31m[EVAL] Best accuracy:72.22999572753906[0m
[2K[2Kperfect_cicada
[31m[EVAL] Best accuracy:76.2699966430664[0m
[2K[2Kpractical_honeybee
[31m[EVAL] Best accuracy:74.4000015258789[0m
[2K[2Kprecise_beaver
[31m[EVAL] Best accuracy:72.41999816894531[0m
[2K[2Ksly_crocodile
[31m[EVAL] Best accuracy:74.20999908447266[0m
[2K[2Ksuccinct_seahorse
[31m[EVAL] Best accuracy:77.19999694824219[0m
[2K[2Ktalented_rat
[31m[EVAL] Best accuracy:74.33000183105469[0m
[2K[2Kultramarine_lori
[31m[EVAL] Best accuracy:73.0[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 64.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 64.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 64.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 4598.466102600098
ic| self.metadata["time_remaining"]: 62368.97976350784
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 64.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 64.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 64.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 64.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 64.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 88, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwakeful_crab
[31m[EVAL] Best accuracy:75.8699951171875[0m
['parents.csv', 'dandelion_coua', 'dangerous_toad', 'diamond_macaw', 'esoteric_earwig', 'famous_barnacle', 'fanatic_dodo', 'independent_nightingale', 'indigo_civet', 'lime_agouti', 'loyal_coua', 'married_goose', 'olivine_cobra', 'perfect_cicada', 'practical_honeybee', 'precise_beaver', 'sly_crocodile', 'succinct_seahorse', 'talented_rat', 'ultramarine_lori', 'wakeful_crab', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.2
Child: [28.0, 96, 2.7, 9]
Old_chrom: [36.0, 88, 2.7, 8]
Diff: 0.07875457875457875
[36.0, 104, 2.75, 9]
Child: [48.0, 120, 2.4000000000000004, 10]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.0979853594140169
[48.0, 120, 2.4000000000000004, 10]
Child: [28.0, 112, 2.4000000000000004, 10]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.09958792351658102
[20.0, 120, 2.4000000000000004, 9]
Child: [40.0, 112, 2.5, 10]
Old_chrom: [48.0, 112, 2.4999999999999982, 8]
Diff: 0.07738096380962131
[40.0, 112, 2.55, 11]
Child: [36.0, 96, 2.5500000000000003, 9]
Old_chrom: [40.0, 112, 2.55, 11]
Diff: 0.09500916322349197
[36.0, 88, 2.6, 10]
Child: [32.0, 120, 2.3499999999999988, 9]
Old_chrom: [32.0, 120, 2.3499999999999988, 10]
Diff: 0.017857142857142856
[40.0, 120, 2.299999999999999, 10]
Child: [24.0, 96, 2.899999999999997, 9]
Old_chrom: [32.0, 96, 2.899999999999997, 9]
Diff: 0.041666666666666664
[24.0, 96, 2.899999999999997, 10]
Child: [24.0, 96, 2.899999999999997, 10]
Old_chrom: [32.0, 96, 2.899999999999997, 9]
Diff: 0.05952380952380952
[16.0, 104, 2.9499999999999966, 9]
Child: [48.0, 96, 2.899999999999997, 9]
Old_chrom: [56.0, 88, 2.899999999999997, 9]
Diff: 0.060897435897435896
[40.0, 104, 2.9499999999999966, 8]
Child: [64.0, 120, 2.3499999999999988, 10]
Old_chrom: [64.0, 120, 2.4499999999999984, 10]
Diff: 0.08574929257125442
[56.0, 120, 2.3499999999999988, 10]
Child: [24.0, 120, 2.3499999999999988, 9]
Old_chrom: [32.0, 120, 2.3499999999999988, 10]
Diff: 0.05952380952380952
[32.0, 112, 2.3999999999999986, 9]
Child: [32.0, 112, 2.3999999999999986, 9]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.060897435897435896
[40.0, 104, 2.3999999999999986, 10]
Child: [40.0, 104, 2.3999999999999986, 10]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.017857142857142856
[32.0, 112, 2.3999999999999986, 10]
Child: [32.0, 112, 2.3999999999999986, 10]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.07875457875457875
[40.0, 120, 2.3499999999999988, 9]
Child: [40.0, 120, 2.3499999999999988, 9]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.0990954447206217
[40.0, 120, 2.299999999999999, 8]
Child: [48.0, 96, 2.3499999999999988, 10]
Old_chrom: [56.0, 120, 2.3499999999999988, 10]
Diff: 0.09935897435897437
[56.0, 88, 2.3999999999999986, 9]
Child: [64.0, 120, 2.4499999999999984, 9]
Old_chrom: [64.0, 120, 2.4499999999999984, 10]
Diff: 0.017857142857142856
[64.0, 120, 2.4999999999999982, 9]
Child: [64.0, 120, 2.4999999999999982, 9]
Old_chrom: [64.0, 120, 2.4499999999999984, 10]
Diff: 0.07849104911622609
[64.0, 120, 2.4999999999999982, 10]
Child: [64.0, 120, 2.4999999999999982, 10]
Old_chrom: [64.0, 120, 2.4499999999999984, 10]
Diff: 0.06063390625908324
[64.0, 112, 2.549999999999998, 9]
Child: [64.0, 112, 2.549999999999998, 9]
Old_chrom: [56.0, 112, 2.5500000000000003, 10]
Diff: 0.05952382230144983
[72.0, 104, 2.549999999999998, 9]
Child: [48.0, 120, 2.4499999999999984, 9]
Old_chrom: [48.0, 112, 2.4999999999999982, 8]
Diff: 0.09772181834699534
[56.0, 120, 2.4999999999999982, 10]
Child: [48.0, 96, 2.4499999999999984, 9]
Old_chrom: [44.0, 112, 2.45, 10]
Diff: 0.07715202608068358
[40.0, 88, 2.4999999999999982, 8]
Child: [40.0, 88, 2.4999999999999982, 8]
Old_chrom: [48.0, 112, 2.4999999999999982, 8]
Diff: 0.09935897435897437
[40.0, 88, 2.4499999999999984, np.int64(8)]
Created model:  colossal_crow
Created model:  enigmatic_bonobo
Created model:  exotic_tiger
Created model:  finicky_crayfish
Created model:  glittering_caracal
Created model:  great_leopard
Created model:  green_basilisk
Created model:  hallowed_junglefowl
Created model:  hilarious_tuatara
Created model:  modest_peccary
Created model:  monumental_degu
Created model:  olive_donkey
Created model:  quirky_labrador
Created model:  roaring_kagu
Created model:  singing_koel
Created model:  transparent_bird
Created model:  visionary_turtle
Created model:  warm_ape
Created model:  warm_pheasant
Created model:  woodoo_polecat
[2K[2Kcolossal_crow
[31m[EVAL] Best accuracy:76.33000183105469[0m
[2K[2Kenigmatic_bonobo
[31m[EVAL] Best accuracy:76.08999633789062[0m
[2K[2Kexotic_tiger
[31m[EVAL] Best accuracy:77.3699951171875[0m
[2K[2Kfinicky_crayfish
[31m[EVAL] Best accuracy:74.88999938964844[0m
[2K[2Kglittering_caracal
[31m[EVAL] Best accuracy:76.16999816894531[0m
[2K[2Kgreat_leopard
[31m[EVAL] Best accuracy:76.3699951171875[0m
[2K[2Kgreen_basilisk
[31m[EVAL] Best accuracy:78.02999877929688[0m
[2K[2Khallowed_junglefowl
[31m[EVAL] Best accuracy:74.63999938964844[0m
[2K[2Khilarious_tuatara
[31m[EVAL] Best accuracy:76.94999694824219[0m
[2K[2Kmodest_peccary
[31m[EVAL] Best accuracy:76.75[0m
[2K[2Kmonumental_degu
[31m[EVAL] Best accuracy:74.63999938964844[0m
[2K[2Kolive_donkey
[31m[EVAL] Best accuracy:76.75[0m
[2K[2Kquirky_labrador
[31m[EVAL] Best accuracy:76.63999938964844[0m
[2K[2Kroaring_kagu
[31m[EVAL] Best accuracy:74.98999786376953[0m
[2K[2Ksinging_koel
[31m[EVAL] Best accuracy:75.56999969482422[0m
[2K[2Ktransparent_bird
[31m[EVAL] Best accuracy:75.50999450683594[0m
[2K[2Kvisionary_turtle
[31m[EVAL] Best accuracy:74.36000061035156[0m
[2K[2Kwarm_ape
[31m[EVAL] Best accuracy:73.86000061035156[0m
[2K[2Kwarm_pheasant
[31m[EVAL] Best accuracy:74.88999938964844[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 88, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 88, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 88, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6637.22149682045
ic| self.metadata["time_remaining"]: 62368.97976350784
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 90.65,
               'codename': 'CIFAR10',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_1/tests_CIFAR10_22_10_2024_15_23/Generation_3/woodoo_polecat',
               'input_shape': [50000, 3, 32, 32],
               'mode': 'NAS',
               'num_classes': 10,
               'test_type': 'T2_Proxy/seed_1',
               'time_remaining': 55731.27694964409,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

[2Kwoodoo_polecat
[31m[EVAL] Best accuracy:72.30999755859375[0m
['parents.csv', 'colossal_crow', 'enigmatic_bonobo', 'exotic_tiger', 'finicky_crayfish', 'glittering_caracal', 'great_leopard', 'green_basilisk', 'hallowed_junglefowl', 'hilarious_tuatara', 'modest_peccary', 'monumental_degu', 'olive_donkey', 'quirky_labrador', 'roaring_kagu', 'singing_koel', 'transparent_bird', 'visionary_turtle', 'warm_ape', 'warm_pheasant', 'woodoo_polecat', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 78.03
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_1/tests_CIFAR10_22_10_2024_15_23/Generation_3/green_basilisk/config.yaml

=== Training ===
  Allotted compute time remaining: ~15h,28m,51s
[31m[EVAL] Best accuracy:91.57999420166016[0m

=== Predicting ===
  Allotted compute time remaining: ~14h,56m,36s

rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/labels
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/predictions
rsync -avr --exclude='**/*x.npy' --exclude='**/train*.npy' --exclude='**/valid*.npy'   --include='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/labels/
sending incremental file list
CIFAR10/
CIFAR10/cifar-10-python.tar.gz
CIFAR10/metadata
CIFAR10/test_y.npy
ImageNet16-120/
ImageNet16-120/metadata
ImageNet16-120/test_y.npy
Sudoku/
Sudoku/Example Image with Corresponding Sudoku Grid.png
Sudoku/README
Sudoku/metadata
Sudoku/test_y.npy
Sudoku/Sokoto/
Sudoku/Sokoto/augmentation_results.json
Sudoku/Sokoto/aug_0/
Sudoku/Sokoto/aug_0/student_best
Sudoku/Sokoto/aug_0/worklog.txt
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_1/
Sudoku/Sokoto/aug_1/student_best
Sudoku/Sokoto/aug_1/worklog.txt
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_2/
Sudoku/Sokoto/aug_2/student_best
Sudoku/Sokoto/aug_2/worklog.txt
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_3/
Sudoku/Sokoto/aug_3/student_best
Sudoku/Sokoto/aug_3/worklog.txt
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_4/
Sudoku/Sokoto/aug_4/student_best
Sudoku/Sokoto/aug_4/worklog.txt
Sudoku/Sokoto/aug_5/
Sudoku/Sokoto/aug_5/student_best
Sudoku/Sokoto/aug_5/worklog.txt
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_6/
Sudoku/Sokoto/aug_6/student_best
Sudoku/Sokoto/aug_6/worklog.txt
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_7/
Sudoku/Sokoto/aug_7/student_best
Sudoku/Sokoto/aug_7/worklog.txt
Sudoku/Sokoto/aug_8/
Sudoku/Sokoto/aug_8/student_best
Sudoku/Sokoto/aug_8/worklog.txt
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_9/
Sudoku/Sokoto/aug_9/student_best
Sudoku/Sokoto/aug_9/worklog.txt
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/worklog-checkpoint.txt
Voxel/
Voxel/Rendered Examples.png
Voxel/metadata
Voxel/test_y.npy

sent 620,487,017 bytes  received 951 bytes  112,815,994.18 bytes/sec
total size is 620,331,646  speedup is 1.00
cp -R /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/predictions /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
cp evaluation/score.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/score.py
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2; python3 score.py
===========================================================================
=============    Your Unseen Data 2024 Submission is scoring     =============
===========================================================================
== Scoring Voxel ==
Raw Score:    83.760
Adj Score:    4.332
Model Params: 1,087,364
Runtime:      10,177.4s
== Scoring ImageNet16-120 ==
Raw Score:    37.033
Adj Score:    -1.743
Model Params: 1,840,176
Runtime:      24,634.6s
== Scoring Sudoku ==
Raw Score:    29.450
Adj Score:    2.945
Model Params: 875,092
Runtime:      10,463.3s
== Scoring CIFAR10 ==
Raw Score:    91.550
Adj Score:    0.963
Model Params: 4,142,920
Runtime:      8,924.6s
===========================
Final Score: 6.496
=== JOB_STATISTICS ===
=== current date     : Tue 22 Oct 2024 05:47:08 PM CEST
= Job-ID             : 915938 on tinygpu
= Job-Name           : /home/woody/iwb3/iwb3021h/THESIS_RESULTS/hpcruns/evonas
= Job-Command        : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/evonas_job_full_main_2.sh
= Initial workdir    : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024
= Queue/Partition    : a100
= Slurm account      : iwb3 with QOS=normal
= Requested resources:  for 23:59:00
= Elapsed runtime    : 15:05:44
= Total RAM usage    : 6.0 GiB of requested  GiB (%)   
= Node list          : tg090
= Subm/Elig/Start/End: 2024-10-21T14:07:16 / 2024-10-21T14:07:16 / 2024-10-22T02:41:24 / 2024-10-22T17:47:08
======================
=== Quota infos ======
    Path              Used     SoftQ    HardQ    Gracetime  Filec    FileQ    FiHaQ    FileGrace    
    /home/hpc          103.0G   104.9G   209.7G        N/A     196K     500K   1,000K        N/A    
    /home/vault        984.8G  1048.6G  2097.2G        N/A     180K     200K     400K        N/A    
    /home/woody        848.7G  1000.0G  1500.0G        N/A     256K   5,000K   7,500K        N/A    
======================
=== GPU utilization ==
gpu_name, gpu_bus_id, pid, gpu_utilization [%], mem_utilization [%], max_memory_usage [MiB], time [ms]
NVIDIA A100-SXM4-40GB, 00000000:C1:00.0, 651453, 24 %, 4 %, 9216 MiB, 54210779 ms
