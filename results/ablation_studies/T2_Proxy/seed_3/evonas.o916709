### Starting TaskPrologue of job 916709 on tg093 at Wed 23 Oct 2024 10:39:06 AM CEST
Running on cores 0-31 with governor ondemand
Wed Oct 23 10:39:06 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 560.28.03              Driver Version: 560.28.03      CUDA Version: 12.6     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-40GB          On  |   00000000:01:00.0 Off |                    0 |
| N/A   37C    P0             58W /  400W |       1MiB /  40960MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
### Finished TaskPrologue

Loading python/pytorch-1.13py3.10
  Loading requirement: cuda/11.6.1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/predictions
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/datasets
rsync -ar --exclude='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/datasets/
cp -R evaluation/main.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/main.py
cp -R anki_lab_submission/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2; python3 main.py --mode T2 --select_augment Proxy
ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| unique_values: array([0.02745098, 0.05098039, 0.05490196, 0.05882353, 0.0627451 ,
                          0.07058824, 0.07450981, 0.07843138, 0.08627451, 0.09019608,
                          0.09411765, 0.09803922, 0.10196079, 0.10980392, 0.11372549,
                          0.11764706, 0.12156863, 0.1254902 , 0.12941177, 0.13333334,
                          0.13725491, 0.14117648, 0.14509805, 0.14901961, 0.15294118,
                          0.15686275, 0.16078432, 0.16470589, 0.16862746, 0.17254902,
                          0.1764706 , 0.18039216, 0.18431373, 0.1882353 , 0.19215687,
                          0.19607843, 0.2       , 0.20392157, 0.21176471, 0.21568628,
                          0.21960784, 0.22352941, 0.22745098, 0.23137255, 0.23529412,
                          0.23921569, 0.24313726, 0.24705882, 0.2509804 , 0.25490198,
                          0.25882354, 0.2627451 , 0.26666668, 0.27058825, 0.27450982,
                          0.2784314 , 0.2901961 , 0.29411766, 0.29803923, 0.3019608 ,
                          0.3137255 , 0.31764707, 0.3254902 , 0.32941177, 0.33333334,
                          0.3372549 , 0.34117648, 0.34509805, 0.34901962, 0.3529412 ,
                          0.35686275, 0.36078432, 0.3647059 , 0.36862746, 0.37254903,
                          0.3764706 , 0.38039216, 0.38431373, 0.3882353 , 0.39215687,
                          0.39607844, 0.40392157, 0.40784314, 0.4117647 , 0.41568628,
                          0.41960785, 0.42352942, 0.43137255, 0.43529412, 0.4392157 ,
                          0.44313726, 0.44705883, 0.4509804 , 0.45490196, 0.45882353,
                          0.4627451 , 0.46666667, 0.47058824, 0.4745098 , 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7372549 ,
                          0.7411765 , 0.74509805, 0.7490196 , 0.7529412 , 0.75686276,
                          0.7607843 , 0.7647059 , 0.76862746, 0.77254903, 0.7764706 ,
                          0.78039217, 0.78431374, 0.7882353 , 0.7921569 , 0.79607844,
                          0.8       , 0.8039216 , 0.80784315, 0.8117647 , 0.8156863 ,
                          0.8235294 , 0.83137256, 0.8352941 , 0.8392157 , 0.84313726,
                          0.85882354, 0.8666667 , 0.87058824, 0.8745098 , 0.8784314 ,
                          0.88235295, 0.8980392 , 0.90588236, 0.9098039 , 0.9137255 ,
                          0.91764706, 0.92156863, 0.9254902 , 0.92941177, 0.93333334,
                          0.9372549 , 0.9411765 , 0.94509804, 0.95686275, 0.9607843 ],
                         dtype=float32)
ic| C: 3
ic| H: 16
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning: The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.
  warnings.warn(
ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f7a8420ffa0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f7a8420cf40>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f7a8420d030>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f7a8420cf70>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f7a8420d150>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f7a8420d870>,
                 ToTensor(),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f7a8420d330>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['devious_fossa',
                  'xanthic_ara',
                  'poised_dachshund',
                  'bronze_angelfish',
                  'russet_orca',
                  'gay_mink',
                  'sensible_dragon',
                  'enchanted_cockatoo',
                  'remarkable_jaguar',
                  'omniscient_chachalaca',
                  'ruby_turaco',
                  'astonishing_hedgehog',
                  'wisteria_dolphin',
                  'quartz_rat',
                  'carrot_hawk',
                  'foamy_uakari',
                  'roaring_coucal',
                  'clay_bulldog',
                  'bouncy_coyote',
                  'imported_galago']
ic| params: [48.0, 80, 2.249999999999999, 13, 8]
ic| params: [16.0, 88, 2.05, 22, 8]
ic| params: [48.0, 112, 2.3499999999999988, 19, 8]
ic| params: [40.0, 64, 2.249999999999999, 11, 8]
ic| params: [40.0, 104, 2.05, 18, 8]
ic| params: [64.0, 88, 2.0999999999999996, 12, 8]
ic| params: [40.0, 88, 2.6499999999999977, 19, 8]
ic| params: [56.0, 112, 2.7499999999999973, 22, 8]
ic| params: [16.0, 16, 2.249999999999999, 15, 8]
ic| params: [56.0, 64, 2.4999999999999982, 14, 8]
ic| params: [32.0, 80, 2.6999999999999975, 17, 8]
ic| params: [56.0, 96, 2.4499999999999984, 17, 8]
ic| params: [48.0, 88, 2.1999999999999993, 19, 8]
ic| params: [32.0, 48, 2.1999999999999993, 9, 8]
ic| params: [16.0, 56, 2.1499999999999995, 14, 8]
ic| params: [32.0, 64, 2.6999999999999975, 21, 8]
ic| params: [48.0, 88, 2.0999999999999996, 14, 8]
ic| params: [32.0, 80, 2.3999999999999986, 8, 8]
ic| params: [16.0, 24, 2.899999999999997, 8, 8]
ic| params: [32.0, 88, 2.4499999999999984, 10, 8]
ic| individuals: ['devious_fossa',
                  'xanthic_ara',
                  'poised_dachshund',
                  'bronze_angelfish',
                  'russet_orca',
                  'gay_mink',
                  'sensible_dragon',
                  'enchanted_cockatoo',
                  'remarkable_jaguar',
                  'omniscient_chachalaca',
                  'ruby_turaco',
                  'astonishing_hedgehog',
                  'wisteria_dolphin',
                  'quartz_rat',
                  'carrot_hawk',
                  'foamy_uakari',
                  'roaring_coucal',
                  'clay_bulldog',
                  'bouncy_coyote',
                  'imported_galago']
ic| params_dict: {'astonishing_hedgehog': [56.0, 96, 2.4499999999999984, 17, 8],
                  'bouncy_coyote': [16.0, 24, 2.899999999999997, 8, 8],
                  'bronze_angelfish': [40.0, 64, 2.249999999999999, 11, 8],
                  'carrot_hawk': [16.0, 56, 2.1499999999999995, 14, 8],
                  'clay_bulldog': [32.0, 80, 2.3999999999999986, 8, 8],
                  'devious_fossa': [48.0, 80, 2.249999999999999, 13, 8],
                  'enchanted_cockatoo': [56.0, 112, 2.7499999999999973, 22, 8],
                  'foamy_uakari': [32.0, 64, 2.6999999999999975, 21, 8],
                  'gay_mink': [64.0, 88, 2.0999999999999996, 12, 8],
                  'imported_galago': [32.0, 88, 2.4499999999999984, 10, 8],
                  'omniscient_chachalaca': [56.0, 64, 2.4999999999999982, 14, 8],
                  'poised_dachshund': [48.0, 112, 2.3499999999999988, 19, 8],
                  'quartz_rat': [32.0, 48, 2.1999999999999993, 9, 8],
                  'remarkable_jaguar': [16.0, 16, 2.249999999999999, 15, 8],
                  'roaring_coucal': [48.0, 88, 2.0999999999999996, 14, 8],
                  'ruby_turaco': [32.0, 80, 2.6999999999999975, 17, 8],
                  'russet_orca': [40.0, 104, 2.05, 18, 8],
                  'sensible_dragon': [40.0, 88, 2.6499999999999977, 19, 8],
                  'wisteria_dolphin': [48.0, 88, 2.1999999999999993, 19, 8],
                  'xanthic_ara': [16.0, 88, 2.05, 22, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a8420ffa0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a8420cf40>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a8420d030>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a8420cf70>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a8420d150>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a8420d870>,
                                                ToTensor(),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a8420d330>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
ic| f"best_augmentation: {best_aug}": 'best_augmentation: 5'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=15)]')
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41727164416
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 107421.80876755714
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
Mode: T2
===========================================================================
=============    Your Unseen Data 2024 Submission is running     =============
===========================================================================
========== Dataset    in16    =============================================
  Metadata:
   - input_shape         : [148700, 3, 16, 16]
   - codename            : in16
   - benchmark           : 46.38
   - num_classes         : 120
   - time_remaining      : 107999.48946809769

=== Processing Data ===
  Allotted compute time remaining: ~29h,59m,59s

=== Performing NAS ===
  Allotted compute time remaining: ~29h,50m,21s
None
Created model:  excellent_reindeer
Created model:  prehistoric_adder
Created model:  magenta_inchworm
Created model:  strange_wombat
Created model:  chubby_coyote
Created model:  large_chachalaca
Created model:  important_bear
Created model:  fuzzy_potoo
Created model:  mighty_ara
Created model:  perky_swan
Created model:  nimble_tench
Created model:  orchid_wombat
Created model:  sensible_marmoset
Created model:  meek_shrew
Created model:  tested_pogona
Created model:  vivacious_prawn
Created model:  masked_nyala
Created model:  excellent_salmon
Created model:  large_marten
Created model:  pastel_griffin
[2K[2Kchubby_coyote
[31m[EVAL] Best accuracy:17.03333282470703[0m
[2K[2Kexcellent_reindeer
[31m[EVAL] Best accuracy:9.766666412353516[0m
[2K[2Kexcellent_salmon
[31m[EVAL] Best accuracy:9.59999942779541[0m
[2K[2Kfuzzy_potoo
[31m[EVAL] Best accuracy:16.566665649414062[0m
[2K[2Kimportant_bear
[31m[EVAL] Best accuracy:10.666666984558105[0m
[2K[2Klarge_chachalaca
[31m[EVAL] Best accuracy:10.699999809265137[0m
[2K[2Klarge_marten
[31m[EVAL] Best accuracy:14.300000190734863[0m
[2K[2Kmagenta_inchworm
[31m[EVAL] Best accuracy:9.466666221618652[0m
[2K[2Kmasked_nyala
[31m[EVAL] Best accuracy:11.133333206176758[0m
[2K[2Kmeek_shrew
[31m[EVAL] Best accuracy:18.866666793823242[0m
[2K[2Kmighty_ara
[31m[EVAL] Best accuracy:17.566665649414062[0m
[2K[2Knimble_tench
[31m[EVAL] Best accuracy:9.766666412353516[0m
[2K[2Korchid_wombat
[31m[EVAL] Best accuracy:18.5[0m
[2K[2Kpastel_griffin
[31m[EVAL] Best accuracy:18.83333396911621[0m
[2K[2Kperky_swan
[31m[EVAL] Best accuracy:13.09999942779541[0m
[2K[2Kprehistoric_adder
[31m[EVAL] Best accuracy:18.366666793823242[0m
[2K[2Ksensible_marmoset
[31m[EVAL] Best accuracy:13.966666221618652[0m
[2K[2Kstrange_wombat
[31m[EVAL] Best accuracy:15.866666793823242[0m
[2K[2Ktested_pogona
[31m[EVAL] Best accuracy:17.700000762939453[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 8041.684991121292
ic| self.metadata["time_remaining"]: 107421.80876755714
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 32.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 48.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvivacious_prawn
[31m[EVAL] Best accuracy:17.433332443237305[0m
['excellent_reindeer', 'prehistoric_adder', 'magenta_inchworm', 'strange_wombat', 'chubby_coyote', 'large_chachalaca', 'important_bear', 'fuzzy_potoo', 'mighty_ara', 'perky_swan', 'nimble_tench', 'orchid_wombat', 'sensible_marmoset', 'meek_shrew', 'tested_pogona', 'vivacious_prawn', 'masked_nyala', 'excellent_salmon', 'large_marten', 'pastel_griffin', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 18.87
Child: [28.0, 104, 2.7, 14]
Old_chrom: [32.0, 96, 2.6999999999999975, 12]
Diff: 0.07577840227559193
[36.0, 96, 2.6500000000000004, 15]
Child: [36.0, 96, 2.6500000000000004, 15]
Old_chrom: [24.0, 96, 2.6500000000000004, 13]
Diff: 0.09821428571428571
[36.0, 88, 2.7, 14]
Child: [44.0, 104, 2.5, 12]
Old_chrom: [40.0, 104, 2.45, 11]
Diff: 0.09932438244955943
[52.0, 112, 2.5, 11]
Child: [48.0, 112, 2.5, 11]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.020833333333333332
[56.0, 104, 2.5, 10]
Child: [56.0, 104, 2.5, 10]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.05792124542124542
[56.0, 112, 2.5, 9]
Child: [56.0, 112, 2.5, 9]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.05654761904761904
[56.0, 104, 2.45, 8]
Child: [60.0, 112, 2.3000000000000003, 11]
Old_chrom: [64.0, 120, 2.299999999999999, 9]
Diff: 0.0757783981759059
[68.0, 104, 2.2500000000000004, 10]
Child: [68.0, 104, 2.2500000000000004, 10]
Old_chrom: [56.0, 104, 2.249999999999999, 12]
Diff: 0.09821429561180334
[68.0, 96, 2.2000000000000006, 10]
Child: [40.0, 120, 2.549999999999998, 13]
Old_chrom: [48.0, 112, 2.5500000000000003, 13]
Diff: 0.0608974486750762
[48.0, 128, 2.549999999999998, 12]
Child: [48.0, 128, 2.549999999999998, 12]
Old_chrom: [48.0, 112, 2.5500000000000003, 13]
Diff: 0.05631869409632163
[48.0, 120, 2.549999999999998, 13]
Child: [48.0, 120, 2.549999999999998, 13]
Old_chrom: [48.0, 112, 2.5500000000000003, 13]
Diff: 0.01923078200840954
[56.0, 128, 2.549999999999998, 12]
Child: [56.0, 128, 2.549999999999998, 12]
Old_chrom: [48.0, 112, 2.5500000000000003, 13]
Diff: 0.09798536076298828
[56.0, 128, 2.4999999999999982, 11]
Child: [64.0, 88, 2.549999999999998, 9]
Old_chrom: [64.0, 64, 2.549999999999998, 8]
Diff: 0.07554945054945056
[56.0, 80, 2.4999999999999982, 8]
Child: [32.0, 120, 2.849999999999997, 12]
Old_chrom: [40.0, 120, 2.849999999999997, 14]
Diff: 0.07738095238095238
[24.0, 120, 2.799999999999997, 13]
Child: [24.0, 120, 2.799999999999997, 13]
Old_chrom: [36.0, 112, 2.8000000000000003, 13]
Diff: 0.08173078434947713
[16.0, 128, 2.849999999999997, 13]
Child: [64.0, 120, 2.6999999999999975, 12]
Old_chrom: [56.0, 96, 2.6999999999999975, 12]
Diff: 0.09935897435897437
[64.0, 112, 2.6999999999999975, 11]
Child: [64.0, 104, 2.249999999999999, 9]
Old_chrom: [56.0, 104, 2.249999999999999, 12]
Diff: 0.09523809523809523
[64.0, 104, 2.299999999999999, 9]
Child: [40.0, 120, 2.299999999999999, 14]
Old_chrom: [40.0, 120, 2.249999999999999, 12]
Diff: 0.09634819197336895
[48.0, 120, 2.299999999999999, 14]
Created model:  agate_skunk
Created model:  agile_sawfly
Created model:  arrogant_barnacle
Created model:  brown_kestrel
Created model:  capable_rhino
Created model:  dazzling_quetzal
Created model:  elastic_urchin
Created model:  exotic_polecat
Created model:  humongous_bettong
Created model:  idealistic_heron
Created model:  meaty_jaguarundi
Created model:  orange_cuckoo
Created model:  pumpkin_bittern
Created model:  rare_porcupine
Created model:  rousing_anaconda
Created model:  ruddy_coot
Created model:  shiny_toucan
Created model:  steel_dugong
Created model:  witty_panda
Created model:  wooden_hedgehog
[2K[2Kagate_skunk
[31m[EVAL] Best accuracy:19.53333282470703[0m
[2K[2Kagile_sawfly
[31m[EVAL] Best accuracy:18.566665649414062[0m
[2K[2Karrogant_barnacle
[31m[EVAL] Best accuracy:16.46666717529297[0m
[2K[2Kbrown_kestrel
[31m[EVAL] Best accuracy:18.566665649414062[0m
[2K[2Kcapable_rhino
[31m[EVAL] Best accuracy:20.733333587646484[0m
[2K[2Kdazzling_quetzal
[31m[EVAL] Best accuracy:19.633333206176758[0m
[2K[2Kelastic_urchin
[31m[EVAL] Best accuracy:20.233333587646484[0m
[2K[2Kexotic_polecat
[31m[EVAL] Best accuracy:17.899999618530273[0m
[2K[2Khumongous_bettong
[31m[EVAL] Best accuracy:16.700000762939453[0m
[2K[2Kidealistic_heron
[31m[EVAL] Best accuracy:19.266666412353516[0m
[2K[2Kmeaty_jaguarundi
[31m[EVAL] Best accuracy:19.83333396911621[0m
[2K[2Korange_cuckoo
[31m[EVAL] Best accuracy:19.96666717529297[0m
[2K[2Kpumpkin_bittern
[31m[EVAL] Best accuracy:19.933332443237305[0m
[2K[2Krare_porcupine
[31m[EVAL] Best accuracy:18.133333206176758[0m
[2K[2Krousing_anaconda
[31m[EVAL] Best accuracy:18.233333587646484[0m
[2K[2Kruddy_coot
[31m[EVAL] Best accuracy:20.899999618530273[0m
[2K[2Kshiny_toucan
[31m[EVAL] Best accuracy:19.766666412353516[0m
[2K[2Ksteel_dugong
[31m[EVAL] Best accuracy:19.066665649414062[0m
[2K[2Kwitty_panda
[31m[EVAL] Best accuracy:19.19999885559082[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 48.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 48.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 48.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 15516.248117685318
ic| self.metadata["time_remaining"]: 107421.80876755714
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 48.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 48.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 48.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 48.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 48.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 64.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwooden_hedgehog
[31m[EVAL] Best accuracy:17.933332443237305[0m
['parents.csv', 'agate_skunk', 'agile_sawfly', 'arrogant_barnacle', 'brown_kestrel', 'capable_rhino', 'dazzling_quetzal', 'elastic_urchin', 'exotic_polecat', 'humongous_bettong', 'idealistic_heron', 'meaty_jaguarundi', 'orange_cuckoo', 'pumpkin_bittern', 'rare_porcupine', 'rousing_anaconda', 'ruddy_coot', 'shiny_toucan', 'steel_dugong', 'witty_panda', 'wooden_hedgehog', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 20.9
Child: [34.0, 120, 2.7, 12]
Old_chrom: [32.0, 96, 2.6999999999999975, 12]
Diff: 0.06810898835617803
[26.0, 120, 2.6500000000000004, 13]
Child: [26.0, 120, 2.6500000000000004, 13]
Old_chrom: [24.0, 96, 2.6500000000000004, 13]
Diff: 0.06810897435897437
[18.0, 128, 2.6000000000000005, 14]
Child: [16.0, 120, 2.5500000000000003, 13]
Old_chrom: [16.0, 88, 2.549999999999998, 13]
Diff: 0.07692308970071723
[16.0, 112, 2.5000000000000004, 13]
Child: [36.0, 128, 2.7, 12]
Old_chrom: [32.0, 96, 2.6999999999999975, 12]
Diff: 0.09775642425361392
[28.0, 120, 2.6500000000000004, 13]
Child: [54.0, 112, 2.5, 10]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.02827380952380952
[54.0, 120, 2.5, 11]
Child: [54.0, 120, 2.5, 11]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.029647435897435896
[54.0, 112, 2.45, 12]
Child: [54.0, 112, 2.45, 12]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.08890771578289278
[62.0, 120, 2.5, 11]
Child: [34.0, 112, 2.4000000000000004, 12]
Old_chrom: [36.0, 96, 2.4000000000000004, 13]
Diff: 0.06673534798534798
[26.0, 120, 2.45, 11]
Child: [54.0, 120, 2.5, 11]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.029647435897435896
[62.0, 112, 2.55, 11]
Child: [62.0, 112, 2.55, 11]
Old_chrom: [62.0, 120, 2.5, 11]
Diff: 0.07986467548985247
[70.0, 104, 2.5, 10]
Child: [70.0, 104, 2.5, 10]
Old_chrom: [62.0, 120, 2.5, 11]
Diff: 0.09798534798534797
[62.0, 112, 2.45, 10]
Child: [56.0, 120, 2.5, 10]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.05792124542124542
[64.0, 128, 2.5, 10]
Child: [64.0, 128, 2.5, 10]
Old_chrom: [56.0, 128, 2.4999999999999982, 11]
Diff: 0.05952382095247845
[64.0, 136, 2.5, 10]
Child: [64.0, 136, 2.5, 10]
Old_chrom: [56.0, 128, 2.4999999999999982, 11]
Diff: 0.07875459018324768
[72.0, 136, 2.45, 10]
Child: [36.0, 120, 2.4000000000000004, 12]
Old_chrom: [36.0, 96, 2.4000000000000004, 13]
Diff: 0.07554945054945056
[44.0, 112, 2.4000000000000004, 13]
Child: [44.0, 112, 2.4000000000000004, 13]
Old_chrom: [36.0, 96, 2.4000000000000004, 13]
Diff: 0.08012820512820512
[36.0, 112, 2.45, 14]
Child: [52.0, 112, 2.849999999999997, 13]
Old_chrom: [40.0, 120, 2.849999999999997, 14]
Diff: 0.0995879120879121
[60.0, 120, 2.899999999999997, 14]
Child: [16.0, 104, 2.249999999999999, 13]
Old_chrom: [16.0, 104, 2.249999999999999, 13]
Diff: 0.0
[16.0, 96, 2.299999999999999, 13]
Child: [16.0, 96, 2.299999999999999, 13]
Old_chrom: [16.0, 104, 2.249999999999999, 13]
Diff: 0.07986467548985247
[np.int64(16), 88, 2.249999999999999, 13]
Child: [np.int64(16), 88, 2.249999999999999, 13]
Old_chrom: [16.0, 104, 2.249999999999999, 13]
Diff: 0.038461538461538464
[np.int64(24), 88, 2.299999999999999, 14]
Child: [56.0, 128, 2.849999999999997, 11]
Old_chrom: [56.0, 104, 2.849999999999997, 13]
Diff: 0.09340659340659341
[56.0, 136, 2.899999999999997, 10]
Child: [56.0, 112, 2.5, 8]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.0744047619047619
[48.0, 112, 2.45, np.int64(8)]
Child: [48.0, 112, 2.45, np.int64(8)]
Old_chrom: [56.0, 104, 2.45, 8]
Diff: 0.060897435897435896
[56.0, 120, 2.45, np.int64(8)]
Child: [56.0, 120, 2.45, np.int64(8)]
Old_chrom: [56.0, 104, 2.45, 8]
Diff: 0.038461538461538464
[64.0, 128, 2.45, np.int64(9)]
Child: [64.0, 128, 2.45, np.int64(9)]
Old_chrom: [62.0, 112, 2.45, 10]
Diff: 0.06673534798534798
[72.0, 128, 2.5, np.int64(10)]
Child: [72.0, 128, 2.5, np.int64(10)]
Old_chrom: [62.0, 120, 2.5, 11]
Diff: 0.08917124542124541
[80.0, 128, 2.45, np.int64(10)]
Child: [52.0, 112, 2.249999999999999, 13]
Old_chrom: [56.0, 104, 2.249999999999999, 12]
Diff: 0.05792124542124542
[44.0, 112, 2.249999999999999, 13]
Child: [44.0, 112, 2.249999999999999, 13]
Old_chrom: [56.0, 104, 2.249999999999999, 12]
Diff: 0.0995879120879121
[36.0, 104, 2.299999999999999, 13]
Child: [52.0, 128, 2.4999999999999982, 11]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.03846154989020739
[44.0, 128, 2.4999999999999982, 10]
Child: [44.0, 128, 2.4999999999999982, 10]
Old_chrom: [52.0, 112, 2.5, 11]
Diff: 0.0979853594140169
[44.0, 136, 2.4999999999999982, 11]
Child: [56.0, 104, 2.45, 11]
Old_chrom: [56.0, 104, 2.45, 8]
Diff: 0.05357142857142857
[64.0, 96, 2.45, 12]
Child: [64.0, 96, 2.45, 12]
Old_chrom: [62.0, 112, 2.45, 10]
Diff: 0.08459249084249085
[72.0, 104, 2.4000000000000004, 12]
Child: [56.0, 128, 2.249999999999999, 13]
Old_chrom: [56.0, 104, 2.249999999999999, 12]
Diff: 0.07554945054945056
[64.0, 120, 2.249999999999999, 14]
Created model:  apricot_lorikeet
Created model:  aspiring_chipmunk
Created model:  bald_lori
Created model:  benign_dormouse
Created model:  courageous_pigeon
Created model:  dynamic_squid
Created model:  hopping_koel
Created model:  hulking_puma
Created model:  imaginary_kiwi
Created model:  jade_wolverine
Created model:  myrtle_malkoha
Created model:  pastel_kagu
Created model:  precise_tamarin
Created model:  prehistoric_eel
Created model:  provocative_pigeon
Created model:  refined_grasshopper
Created model:  stylish_dingo
Created model:  taupe_frigatebird
Created model:  tomato_cat
Created model:  unique_snake
[2K[2Kapricot_lorikeet
[31m[EVAL] Best accuracy:20.799999237060547[0m
[2K[2Kaspiring_chipmunk
[31m[EVAL] Best accuracy:20.633333206176758[0m
[2K[2Kbald_lori
[31m[EVAL] Best accuracy:20.19999885559082[0m
[2K[2Kbenign_dormouse
[31m[EVAL] Best accuracy:20.133333206176758[0m
[2K[2Kcourageous_pigeon
[31m[EVAL] Best accuracy:17.5[0m
[2K[2Kdynamic_squid
[31m[EVAL] Best accuracy:20.899999618530273[0m
[2K[2Khopping_koel
[31m[EVAL] Best accuracy:19.933332443237305[0m
[2K[2Khulking_puma
[31m[EVAL] Best accuracy:19.566665649414062[0m
[2K[2Kimaginary_kiwi
[31m[EVAL] Best accuracy:19.633333206176758[0m
[2K[2Kjade_wolverine
[31m[EVAL] Best accuracy:17.566665649414062[0m
[2K[2Kmyrtle_malkoha
[31m[EVAL] Best accuracy:17.700000762939453[0m
[2K[2Kpastel_kagu
[31m[EVAL] Best accuracy:16.899999618530273[0m
[2K[2Kprecise_tamarin
[31m[EVAL] Best accuracy:17.433332443237305[0m
[2K[2Kprehistoric_eel
[31m[EVAL] Best accuracy:21.799999237060547[0m
[2K[2Kprovocative_pigeon
[31m[EVAL] Best accuracy:19.933332443237305[0m
[2K[2Krefined_grasshopper
[31m[EVAL] Best accuracy:19.03333282470703[0m
[2K[2Kstylish_dingo
[31m[EVAL] Best accuracy:20.899999618530273[0m
[2K[2Ktaupe_frigatebird
[31m[EVAL] Best accuracy:20.16666603088379[0m
[2K[2Ktomato_cat
[31m[EVAL] Best accuracy:18.633333206176758[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 64.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 64.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 64.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 23011.691653728485
ic| self.metadata["time_remaining"]: 107421.80876755714
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 46.38,
               'codename': 'in16',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_3/tests_in16_23_10_2024_10_50/Generation_3/unique_snake',
               'input_shape': [148700, 3, 16, 16],
               'mode': 'NAS',
               'num_classes': 120,
               'test_type': 'T2_Proxy/seed_3',
               'time_remaining': 84409.32703208923,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| unique_values: array([0., 1.], dtype=float32)
ic| C: 20
ic| H: 20
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f79d95f35e0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f79d95f14e0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f79d95f0520>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f79d95f1840>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f79ba845b10>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f79ba844fd0>,
                 ToTensor(),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f79ba8458a0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['friendly_hyrax',
                  'messy_hamster',
                  'urban_goose',
                  'tidy_marten',
                  'amber_bird',
                  'tested_agama',
                  'wonderful_bug',
                  'sociable_clam',
                  'maize_pillbug',
                  'evasive_mustang',
                  'jasper_goldfish',
                  'polite_giraffe',
                  'adorable_porpoise',
                  'monumental_sheep',
                  'delicate_jackal',
                  'paper_sambar',
                  'important_badger',
                  'little_wren',
                  'passionate_mouse',
                  'miniature_trout']
ic| params: [16.0, 24, 2.4499999999999984, 21, 8]
ic| params: [32.0, 72, 2.549999999999998, 8, 8]
ic| params: [32.0, 64, 2.6499999999999977, 15, 8]
ic| params: [56.0, 88, 2.799999999999997, 14, 8]
ic| params: [32.0, 40, 2.4499999999999984, 9, 8]
ic| params: [48.0, 48, 2.1999999999999993, 16, 8]
ic| params: [64.0, 72, 2.4999999999999982, 18, 8]
ic| params: [64.0, 120, 2.899999999999997, 16, 8]
ic| params: [32.0, 112, 2.4999999999999982, 18, 8]
ic| params: [24.0, 56, 2.7499999999999973, 9, 8]
ic| params: [24.0, 56, 2.6999999999999975, 16, 8]
ic| params: [40.0, 72, 2.4999999999999982, 20, 8]
ic| params: [16.0, 104, 2.299999999999999, 20, 8]
ic| params: [16.0, 48, 2.4499999999999984, 14, 8]
ic| params: [16.0, 72, 2.849999999999997, 12, 8]
ic| params: [32.0, 56, 2.6499999999999977, 15, 8]
ic| params: [40.0, 120, 2.1999999999999993, 10, 8]
ic| params: [16.0, 96, 2.1999999999999993, 17, 8]
ic| params: [56.0, 72, 2.6999999999999975, 18, 8]
ic| params: [48.0, 112, 2.6499999999999977, 20, 8]
ic| individuals: ['friendly_hyrax',
                  'messy_hamster',
                  'urban_goose',
                  'tidy_marten',
                  'amber_bird',
                  'tested_agama',
                  'wonderful_bug',
                  'sociable_clam',
                  'maize_pillbug',
                  'evasive_mustang',
                  'jasper_goldfish',
                  'polite_giraffe',
                  'adorable_porpoise',
                  'monumental_sheep',
                  'delicate_jackal',
                  'paper_sambar',
                  'important_badger',
                  'little_wren',
                  'passionate_mouse',
                  'miniature_trout']
ic| params_dict: {'adorable_porpoise': [16.0, 104, 2.299999999999999, 20, 8],
                  'amber_bird': [32.0, 40, 2.4499999999999984, 9, 8],
                  'delicate_jackal': [16.0, 72, 2.849999999999997, 12, 8],
                  'evasive_mustang': [24.0, 56, 2.7499999999999973, 9, 8],
                  'friendly_hyrax': [16.0, 24, 2.4499999999999984, 21, 8],
                  'important_badger': [40.0, 120, 2.1999999999999993, 10, 8],
                  'jasper_goldfish': [24.0, 56, 2.6999999999999975, 16, 8],
                  'little_wren': [16.0, 96, 2.1999999999999993, 17, 8],
                  'maize_pillbug': [32.0, 112, 2.4999999999999982, 18, 8],
                  'messy_hamster': [32.0, 72, 2.549999999999998, 8, 8],
                  'miniature_trout': [48.0, 112, 2.6499999999999977, 20, 8],
                  'monumental_sheep': [16.0, 48, 2.4499999999999984, 14, 8],
                  'paper_sambar': [32.0, 56, 2.6499999999999977, 15, 8],
                  'passionate_mouse': [56.0, 72, 2.6999999999999975, 18, 8],
                  'polite_giraffe': [40.0, 72, 2.4999999999999982, 20, 8],
                  'sociable_clam': [64.0, 120, 2.899999999999997, 16, 8],
                  'tested_agama': [48.0, 48, 2.1999999999999993, 16, 8],
                  'tidy_marten': [56.0, 88, 2.799999999999997, 14, 8],
                  'urban_goose': [32.0, 64, 2.6499999999999977, 15, 8],
                  'wonderful_bug': [64.0, 72, 2.4999999999999982, 18, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79d95f35e0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79d95f14e0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79d95f0520>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79d95f1840>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79ba845b10>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79ba844fd0>,
                                                ToTensor(),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79ba8458a0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 14'
ic| f"selected transform {train_transform}": ('selected transform [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, '
                                              '3.3), value=[0.0], inplace=False), RandomCrop(size=(20, 20), padding=[2, 2, '
                                              '2, 2], pad_if_needed=False, fill=0, padding_mode=constant), '
                                              'RandomHorizontalFlip(p=0.5)]')
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41200779264
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 82248.25892877579
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 56, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kunique_snake
[31m[EVAL] Best accuracy:13.5[0m
['parents.csv', 'apricot_lorikeet', 'aspiring_chipmunk', 'bald_lori', 'benign_dormouse', 'courageous_pigeon', 'dynamic_squid', 'hopping_koel', 'hulking_puma', 'imaginary_kiwi', 'jade_wolverine', 'myrtle_malkoha', 'pastel_kagu', 'precise_tamarin', 'prehistoric_eel', 'provocative_pigeon', 'refined_grasshopper', 'stylish_dingo', 'taupe_frigatebird', 'tomato_cat', 'unique_snake', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 21.8
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_3/tests_in16_23_10_2024_10_50/Generation_3/prehistoric_eel/config.yaml

=== Training ===
  Allotted compute time remaining: ~23h,26m,49s
Early stopping at epoch 28
[31m[EVAL] Best accuracy:35.06666564941406[0m

=== Predicting ===
  Allotted compute time remaining: ~22h,57m,46s

========== Dataset   Volga    =============================================
  Metadata:
   - input_shape         : [50000, 20, 20, 20]
   - codename            : Volga
   - benchmark           : 71.35
   - num_classes         : 7
   - time_remaining      : 82662.62367844582

=== Processing Data ===
  Allotted compute time remaining: ~22h,57m,42s

=== Performing NAS ===
  Allotted compute time remaining: ~22h,50m,48s
spawn
Created model:  silver_piculet
Created model:  wondrous_woodpecker
Created model:  auspicious_ostrich
Created model:  tangerine_elk
Created model:  lean_quoll
Created model:  just_gecko
Created model:  tangerine_echidna
Created model:  olive_tuatara
Created model:  gregarious_crab
Created model:  convivial_ibex
Created model:  crouching_ibis
Created model:  curly_pigeon
Created model:  fantastic_coati
Created model:  able_flamingo
Created model:  impossible_petrel
Created model:  economic_junglefowl
Created model:  tasteful_civet
Created model:  fluorescent_alligator
Created model:  crystal_chowchow
Created model:  vigilant_sidewinder
[2K[2Kable_flamingo
[31m[EVAL] Best accuracy:46.279998779296875[0m
[2K[2Kauspicious_ostrich
[31m[EVAL] Best accuracy:55.12999725341797[0m
[2K[2Kconvivial_ibex
[31m[EVAL] Best accuracy:44.96999740600586[0m
[2K[2Kcrouching_ibis
[31m[EVAL] Best accuracy:52.53999710083008[0m
[2K[2Kcrystal_chowchow
[31m[EVAL] Best accuracy:63.8599967956543[0m
[2K[2Kcurly_pigeon
[31m[EVAL] Best accuracy:52.80999755859375[0m
[2K[2Keconomic_junglefowl
[31m[EVAL] Best accuracy:50.66999816894531[0m
[2K[2Kfantastic_coati
[31m[EVAL] Best accuracy:48.619998931884766[0m
[2K[2Kfluorescent_alligator
[31m[EVAL] Best accuracy:58.78999710083008[0m
[2K[2Kgregarious_crab
[31m[EVAL] Best accuracy:59.39999771118164[0m
[2K[2Kimpossible_petrel
[31m[EVAL] Best accuracy:65.69999694824219[0m
[2K[2Kjust_gecko
[31m[EVAL] Best accuracy:54.47999954223633[0m
[2K[2Klean_quoll
[31m[EVAL] Best accuracy:59.22999954223633[0m
[2K[2Kolive_tuatara
[31m[EVAL] Best accuracy:61.05999755859375[0m
[2K[2Ksilver_piculet
[31m[EVAL] Best accuracy:64.90999603271484[0m
[2K[2Ktangerine_echidna
[31m[EVAL] Best accuracy:43.88999938964844[0m
[2K[2Ktangerine_elk
[31m[EVAL] Best accuracy:50.06999969482422[0m
[2K[2Ktasteful_civet
[31m[EVAL] Best accuracy:59.63999938964844[0m
[2K[2Kvigilant_sidewinder
[31m[EVAL] Best accuracy:58.29999923706055[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 56, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 56, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 56, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 3021.8506276607513
ic| self.metadata["time_remaining"]: 82248.25892877579
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 56, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 56, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 56, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 56, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 56, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 40.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwondrous_woodpecker
[31m[EVAL] Best accuracy:38.54999923706055[0m
['silver_piculet', 'wondrous_woodpecker', 'auspicious_ostrich', 'tangerine_elk', 'lean_quoll', 'just_gecko', 'tangerine_echidna', 'olive_tuatara', 'gregarious_crab', 'convivial_ibex', 'crouching_ibis', 'curly_pigeon', 'fantastic_coati', 'able_flamingo', 'impossible_petrel', 'economic_junglefowl', 'tasteful_civet', 'fluorescent_alligator', 'crystal_chowchow', 'vigilant_sidewinder', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 65.7
Child: [28.0, 96, 2.3000000000000003, 11]
Old_chrom: [24.0, 88, 2.299999999999999, 11]
Diff: 0.040064112461620185
[20.0, 96, 2.2500000000000004, 11]
Child: [20.0, 96, 2.2500000000000004, 11]
Old_chrom: [32.0, 96, 2.249999999999999, 10]
Diff: 0.08035715275466049
[20.0, 88, 2.2000000000000006, 10]
Child: [24.0, 104, 2.35, 12]
Old_chrom: [20.0, 104, 2.35, 15]
Diff: 0.0744047619047619
[16.0, 104, 2.35, 11]
Child: [16.0, 104, 2.35, 11]
Old_chrom: [20.0, 104, 2.35, 15]
Diff: 0.09226190476190475
[np.int64(16), 104, 2.4, 10]
Child: [44.0, 88, 2.4000000000000004, 9]
Old_chrom: [40.0, 80, 2.4000000000000004, 10]
Diff: 0.05792124542124542
[44.0, 80, 2.45, 8]
Child: [16.0, 120, 2.4499999999999984, 13]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.038461538461538464
[24.0, 120, 2.4499999999999984, 13]
Child: [24.0, 120, 2.4499999999999984, 13]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.08012820512820512
[24.0, 120, 2.3999999999999986, 14]
Child: [24.0, 120, 2.3999999999999986, 14]
Old_chrom: [16.0, 112, 2.4000000000000004, 16]
Diff: 0.09661173304039053
[24.0, 112, 2.3999999999999986, 15]
Child: [16.0, 104, 2.299999999999999, 11]
Old_chrom: [24.0, 88, 2.299999999999999, 11]
Diff: 0.08012820512820512
[16.0, 104, 2.249999999999999, 10]
Child: [16.0, 104, 2.249999999999999, 10]
Old_chrom: [16.0, 120, 2.249999999999999, 10]
Diff: 0.038461538461538464
[24.0, 104, 2.1999999999999993, 11]
Child: [24.0, 104, 2.1999999999999993, 11]
Old_chrom: [20.0, 88, 2.2000000000000006, 10]
Diff: 0.07715202454953227
[32.0, 96, 2.1499999999999995, 10]
Child: [32.0, 96, 2.1499999999999995, 10]
Old_chrom: [32.0, 96, 2.249999999999999, 10]
Diff: 0.08574929257125442
[40.0, 88, 2.0999999999999996, 9]
Child: [32.0, 88, 2.299999999999999, 10]
Old_chrom: [24.0, 88, 2.299999999999999, 11]
Diff: 0.05952380952380952
[40.0, 80, 2.299999999999999, 9]
Child: [56.0, 96, 2.249999999999999, 8]
Old_chrom: [56.0, 88, 2.299999999999999, 8]
Diff: 0.07986467548985247
[48.0, 104, 2.299999999999999, 8]
Child: [48.0, 104, 2.299999999999999, 8]
Old_chrom: [56.0, 88, 2.299999999999999, 8]
Diff: 0.08012820512820512
[40.0, 104, 2.299999999999999, 8]
Child: [40.0, 104, 2.299999999999999, 8]
Old_chrom: [40.0, 80, 2.299999999999999, 9]
Diff: 0.07554945054945056
[40.0, 112, 2.249999999999999, 8]
Created model:  cinnamon_swan
Created model:  devout_orangutan
Created model:  enormous_capuchin
Created model:  fuzzy_alligator
Created model:  hungry_cockle
Created model:  hungry_mosquito
Created model:  icy_sunfish
Created model:  imported_coyote
Created model:  industrious_buffalo
Created model:  industrious_vicugna
Created model:  khaki_mantis
Created model:  lumpy_agama
Created model:  magic_magpie
Created model:  passionate_quoll
Created model:  precise_orca
Created model:  silky_dogfish
Created model:  tactful_avocet
Created model:  tall_panda
Created model:  unnatural_mule
Created model:  voracious_duck
[2K[2Kcinnamon_swan
[31m[EVAL] Best accuracy:63.689998626708984[0m
[2K[2Kdevout_orangutan
[31m[EVAL] Best accuracy:65.48999786376953[0m
[2K[2Kenormous_capuchin
[31m[EVAL] Best accuracy:57.82999801635742[0m
[2K[2Kfuzzy_alligator
[31m[EVAL] Best accuracy:58.16999816894531[0m
[2K[2Khungry_cockle
[31m[EVAL] Best accuracy:63.21999740600586[0m
[2K[2Khungry_mosquito
[31m[EVAL] Best accuracy:64.04000091552734[0m
[2K[2Kicy_sunfish
[31m[EVAL] Best accuracy:52.75[0m
[2K[2Kimported_coyote
[31m[EVAL] Best accuracy:66.45999908447266[0m
[2K[2Kindustrious_buffalo
[31m[EVAL] Best accuracy:63.619998931884766[0m
[2K[2Kindustrious_vicugna
[31m[EVAL] Best accuracy:61.53999710083008[0m
[2K[2Kkhaki_mantis
[31m[EVAL] Best accuracy:67.04999542236328[0m
[2K[2Klumpy_agama
[31m[EVAL] Best accuracy:64.3699951171875[0m
[2K[2Kmagic_magpie
[31m[EVAL] Best accuracy:62.75[0m
[2K[2Kpassionate_quoll
[31m[EVAL] Best accuracy:62.15999984741211[0m
[2K[2Kprecise_orca
[31m[EVAL] Best accuracy:58.689998626708984[0m
[2K[2Ksilky_dogfish
[31m[EVAL] Best accuracy:53.0[0m
[2K[2Ktactful_avocet
[31m[EVAL] Best accuracy:57.73999786376953[0m
[2K[2Ktall_panda
[31m[EVAL] Best accuracy:65.3699951171875[0m
[2K[2Kunnatural_mule
[31m[EVAL] Best accuracy:64.23999786376953[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 40.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 40.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 40.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 5647.2868576049805
ic| self.metadata["time_remaining"]: 82248.25892877579
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 40.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 40.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 40.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 40.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 40.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 88, 'WA': 32.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvoracious_duck
[31m[EVAL] Best accuracy:65.04999542236328[0m
['parents.csv', 'cinnamon_swan', 'devout_orangutan', 'enormous_capuchin', 'fuzzy_alligator', 'hungry_cockle', 'hungry_mosquito', 'icy_sunfish', 'imported_coyote', 'industrious_buffalo', 'industrious_vicugna', 'khaki_mantis', 'lumpy_agama', 'magic_magpie', 'passionate_quoll', 'precise_orca', 'silky_dogfish', 'tactful_avocet', 'tall_panda', 'unnatural_mule', 'voracious_duck', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 67.05
Child: [20.0, 112, 2.4000000000000004, 11]
Old_chrom: [16.0, 104, 2.4, 10]
Diff: 0.05792125113557988
[20.0, 104, 2.45, 10]
Child: [20.0, 104, 2.45, 10]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.07440477333343083
[np.int64(16), 112, 2.4000000000000004, 9]
Child: [np.int64(16), 112, 2.4000000000000004, 9]
Old_chrom: [16.0, 104, 2.4, 10]
Diff: 0.03708791780224655
[np.int64(24), 104, 2.45, 8]
Child: [np.int64(24), 104, 2.45, 8]
Old_chrom: [32.0, 104, 2.4499999999999984, 10]
Diff: 0.07738096380962131
[np.int64(16), 96, 2.45, np.int64(8)]
Child: [20.0, 120, 2.4000000000000004, 14]
Old_chrom: [16.0, 112, 2.4000000000000004, 16]
Diff: 0.07577838827838827
[np.int64(16), 128, 2.45, 14]
Child: [np.int64(16), 128, 2.45, 14]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.07554946197811949
[np.int64(24), 136, 2.45, 15]
Child: [28.0, 112, 2.4000000000000004, 11]
Old_chrom: [16.0, 104, 2.4, 10]
Diff: 0.09958791780224654
[20.0, 112, 2.3500000000000005, 12]
Child: [16.0, 112, 2.45, 13]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.01923078065943816
[np.int64(16), 104, 2.4000000000000004, 14]
Child: [np.int64(16), 104, 2.4000000000000004, 14]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.07849104911622502
[np.int64(16), 96, 2.3500000000000005, 14]
Child: [np.int64(16), 96, 2.3500000000000005, 14]
Old_chrom: [20.0, 104, 2.35, 15]
Diff: 0.05792125113557988
[np.int64(16), 88, 2.3500000000000005, 14]
Child: [np.int64(16), 88, 2.3500000000000005, 14]
Old_chrom: [20.0, 104, 2.35, 15]
Diff: 0.0771520203663491
[np.int64(16), 96, 2.4000000000000004, 13]
Child: [np.int64(16), 96, 2.4000000000000004, 13]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.0798646754898514
[np.int64(24), 96, 2.45, 14]
Child: [np.int64(24), 96, 2.45, 14]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.07875459018324768
[np.int64(24), 96, 2.5, 15]
Child: [24.0, 104, 2.45, 10]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.09523810666676416
[24.0, 96, 2.45, 11]
Child: [28.0, 112, 2.35, 9]
Old_chrom: [24.0, 120, 2.3499999999999988, 11]
Diff: 0.0757783981759059
[28.0, 112, 2.3000000000000003, 8]
Child: [28.0, 112, 2.3000000000000003, 8]
Old_chrom: [32.0, 120, 2.3000000000000003, 10]
Diff: 0.07577838827838827
[36.0, 104, 2.3000000000000003, 8]
Child: [36.0, 104, 2.3000000000000003, 8]
Old_chrom: [40.0, 80, 2.299999999999999, 9]
Diff: 0.09638279378030151
[44.0, 112, 2.2500000000000004, 8]
Child: [24.0, 112, 2.45, 13]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.060897447326104824
[24.0, 104, 2.45, 12]
Child: [24.0, 104, 2.45, 12]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.05952382095247845
[32.0, 112, 2.5, 12]
Child: [32.0, 112, 2.5, 12]
Old_chrom: [36.0, 88, 2.5, 11]
Diff: 0.09638278388278387
[32.0, 120, 2.45, 13]
Child: [28.0, 112, 2.35, 12]
Old_chrom: [24.0, 120, 2.3499999999999988, 11]
Diff: 0.05792125531876304
[36.0, 104, 2.3000000000000003, 12]
Child: [36.0, 104, 2.3000000000000003, 12]
Old_chrom: [32.0, 120, 2.3000000000000003, 10]
Diff: 0.0950091575091575
[28.0, 104, 2.2500000000000004, 12]
Child: [24.0, 120, 2.4, 10]
Old_chrom: [24.0, 120, 2.3499999999999988, 11]
Diff: 0.07849104911622691
[24.0, 112, 2.4, 9]
Child: [24.0, 112, 2.4, 9]
Old_chrom: [16.0, 104, 2.4, 10]
Diff: 0.07875457875457875
[24.0, 104, 2.4499999999999997, 8]
Child: [24.0, 104, 2.4499999999999997, 8]
Old_chrom: [32.0, 104, 2.4499999999999984, 10]
Diff: 0.07738096227847
[32.0, 96, 2.4999999999999996, 9]
Child: [32.0, 96, 2.4999999999999996, 9]
Old_chrom: [32.0, 104, 2.4499999999999984, 10]
Diff: 0.09772181834699614
[32.0, 104, 2.5499999999999994, 9]
Child: [24.0, 120, 2.4000000000000004, 16]
Old_chrom: [16.0, 112, 2.4000000000000004, 16]
Diff: 0.060897435897435896
[24.0, 112, 2.45, 16]
Child: [24.0, 112, 2.45, 16]
Old_chrom: [24.0, 112, 2.3999999999999986, 15]
Diff: 0.07849104911622717
[24.0, 112, 2.45, 17]
Child: [24.0, 112, 2.45, 17]
Old_chrom: [24.0, 112, 2.3999999999999986, 15]
Diff: 0.09634819197337002
[16.0, 112, 2.4000000000000004, 16]
Child: [32.0, 120, 2.3499999999999988, 10]
Old_chrom: [24.0, 120, 2.3499999999999988, 11]
Diff: 0.05952380952380952
[24.0, 112, 2.3999999999999986, 9]
Child: [24.0, 112, 2.3999999999999986, 9]
Old_chrom: [16.0, 104, 2.4, 10]
Diff: 0.07875458865209638
[24.0, 120, 2.4499999999999984, 8]
Child: [24.0, 120, 2.4499999999999984, 8]
Old_chrom: [np.int64(16), 96, 2.45, np.int64(8)]
Diff: 0.0993589857876433
[32.0, 120, 2.3999999999999986, np.int64(8)]
Child: [40.0, 112, 2.3499999999999988, 11]
Old_chrom: [36.0, 112, 2.35, 9]
Diff: 0.056547628945136666
[48.0, 104, 2.3499999999999988, 11]
Child: [16.0, 112, 2.4, 10]
Old_chrom: [16.0, 104, 2.4, 10]
Diff: 0.019230769230769232
[16.0, 104, 2.4, 10]
Child: [16.0, 104, 2.4, 10]
Old_chrom: [16.0, 104, 2.4, 10]
Diff: 0.0
[24.0, 96, 2.4499999999999997, 10]
Child: [24.0, 96, 2.4499999999999997, 10]
Old_chrom: [32.0, 104, 2.4499999999999984, 10]
Diff: 0.06089744579495352
[16.0, 88, 2.4499999999999997, 10]
Child: [16.0, 88, 2.4499999999999997, 10]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.09203297693048465
[16.0, 88, 2.4, 9]
Child: [16.0, 104, 2.4499999999999984, 10]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.05357142857142857
[np.int64(16), 104, 2.4999999999999982, 10]
Child: [np.int64(16), 104, 2.4999999999999982, 10]
Old_chrom: [16.0, 104, 2.4, 10]
Diff: 0.08574929257125384
[np.int64(16), 112, 2.4999999999999982, 9]
Child: [40.0, 104, 2.4, 8]
Old_chrom: [40.0, 80, 2.4000000000000004, 10]
Diff: 0.09340659912092787
[40.0, 104, 2.4, 8]
Child: [32.0, 112, 2.4000000000000004, 10]
Old_chrom: [32.0, 104, 2.4499999999999984, 10]
Diff: 0.0798646754898514
[40.0, 120, 2.3500000000000005, 10]
Child: [40.0, 120, 2.3500000000000005, 10]
Old_chrom: [36.0, 112, 2.35, 9]
Diff: 0.05792125113557988
[40.0, 120, 2.3000000000000007, 10]
Child: [40.0, 120, 2.3000000000000007, 10]
Old_chrom: [32.0, 120, 2.3000000000000003, 10]
Diff: 0.04166667238100113
[40.0, 120, 2.3000000000000007, 11]
Child: [40.0, 120, 2.3000000000000007, 11]
Old_chrom: [32.0, 120, 2.3000000000000003, 10]
Diff: 0.059523815238143984
[32.0, 128, 2.250000000000001, 10]
Child: [32.0, 128, 2.250000000000001, 10]
Old_chrom: [32.0, 96, 2.249999999999999, 10]
Diff: 0.07692308835174586
[24.0, 136, 2.3000000000000007, 9]
Child: [24.0, 136, 2.3000000000000007, 9]
Old_chrom: [32.0, 120, 2.3000000000000003, 10]
Diff: 0.09798535369968245
[32.0, 128, 2.250000000000001, 8]
Child: [40.0, 112, 2.4499999999999984, 10]
Old_chrom: [32.0, 104, 2.4499999999999984, 10]
Diff: 0.060897435897435896
[32.0, 104, 2.4499999999999984, 10]
Child: [32.0, 104, 2.4499999999999984, 10]
Old_chrom: [32.0, 104, 2.4499999999999984, 10]
Diff: 0.0
[32.0, 112, 2.3999999999999986, 10]
Child: [32.0, 112, 2.3999999999999986, 10]
Old_chrom: [32.0, 104, 2.4499999999999984, 10]
Diff: 0.07986467548985247
[24.0, 104, 2.3499999999999988, 10]
Child: [24.0, 104, 2.3499999999999988, 10]
Old_chrom: [24.0, 120, 2.3499999999999988, 11]
Diff: 0.05631868131868132
[24.0, 104, 2.299999999999999, 11]
Child: [24.0, 104, 2.299999999999999, 11]
Old_chrom: [24.0, 88, 2.299999999999999, 11]
Diff: 0.038461538461538464
[32.0, 96, 2.299999999999999, 11]
Child: [32.0, 96, 2.299999999999999, 11]
Old_chrom: [24.0, 88, 2.299999999999999, 11]
Diff: 0.060897435897435896
[32.0, 88, 2.3499999999999988, 11]
Created model:  ambrosial_saluki
Created model:  attractive_skua
Created model:  awesome_tanuki
Created model:  daffy_mole
Created model:  gainful_puma
Created model:  hilarious_lizard
Created model:  meek_rattlesnake
Created model:  nano_snake
Created model:  offbeat_leech
Created model:  orchid_dodo
Created model:  polar_dachshund
Created model:  rampant_leopard
Created model:  scrupulous_uakari
Created model:  sexy_condor
Created model:  shapeless_crayfish
Created model:  spiked_lori
Created model:  spotted_bumblebee
Created model:  strong_parrot
Created model:  tactful_quail
Created model:  wandering_booby
[2K[2Kambrosial_saluki
[31m[EVAL] Best accuracy:64.0999984741211[0m
[2K[2Kattractive_skua
[31m[EVAL] Best accuracy:66.52999877929688[0m
[2K[2Kawesome_tanuki
[31m[EVAL] Best accuracy:65.77999877929688[0m
[2K[2Kdaffy_mole
[31m[EVAL] Best accuracy:61.62999725341797[0m
[2K[2Kgainful_puma
[31m[EVAL] Best accuracy:62.47999954223633[0m
[2K[2Khilarious_lizard
[31m[EVAL] Best accuracy:61.3599967956543[0m
[2K[2Kmeek_rattlesnake
[31m[EVAL] Best accuracy:62.87999725341797[0m
[2K[2Knano_snake
[31m[EVAL] Best accuracy:61.05999755859375[0m
[2K[2Koffbeat_leech
[31m[EVAL] Best accuracy:61.37999725341797[0m
[2K[2Korchid_dodo
[31m[EVAL] Best accuracy:67.6199951171875[0m
[2K[2Kpolar_dachshund
[31m[EVAL] Best accuracy:66.81999969482422[0m
[2K[2Krampant_leopard
[31m[EVAL] Best accuracy:65.22999572753906[0m
[2K[2Kscrupulous_uakari
[31m[EVAL] Best accuracy:66.22000122070312[0m
[2K[2Ksexy_condor
[31m[EVAL] Best accuracy:61.48999786376953[0m
[2K[2Kshapeless_crayfish
[31m[EVAL] Best accuracy:60.43000030517578[0m
[2K[2Kspiked_lori
[31m[EVAL] Best accuracy:63.38999938964844[0m
[2K[2Kspotted_bumblebee
[31m[EVAL] Best accuracy:63.89999771118164[0m
[2K[2Kstrong_parrot
[31m[EVAL] Best accuracy:65.83999633789062[0m
[2K[2Ktactful_quail
[31m[EVAL] Best accuracy:60.87999725341797[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 88, 'WA': 32.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 88, 'WA': 32.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 88, 'WA': 32.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 8253.251685619354
ic| self.metadata["time_remaining"]: 82248.25892877579
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 71.35,
               'codename': 'Volga',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_3/tests_Volga_23_10_2024_17_50/Generation_3/wandering_booby',
               'input_shape': [50000, 20, 20, 20],
               'mode': 'NAS',
               'num_classes': 7,
               'test_type': 'T2_Proxy/seed_3',
               'time_remaining': 73994.67424440384,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| unique_values: array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ],
                         dtype=float32)
ic| C: 1
ic| H: 9
ic| PH: 1
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f79d9531990>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f79d9532350>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f79d95326b0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f79d9530be0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f79bac2aad0>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f7a840c4b20>,
                 ToTensor(),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f7a840c6590>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['gleaming_guppy',
                  'pistachio_wrasse',
                  'asparagus_penguin',
                  'succinct_trout',
                  'didactic_seagull',
                  'gigantic_corgi',
                  'cherry_grasshopper',
                  'cherubic_muskrat',
                  'strong_mackerel',
                  'wealthy_warthog',
                  'meticulous_mongoose',
                  'cryptic_marten',
                  'dandelion_mantis',
                  'berserk_coucal',
                  'secret_oxpecker',
                  'aquamarine_quail',
                  'eager_armadillo',
                  'fractal_dog',
                  'merry_bullfrog',
                  'shapeless_hamster']
ic| params: [40.0, 80, 2.849999999999997, 14, 8]
ic| params: [56.0, 72, 2.4999999999999982, 10, 8]
ic| params: [16.0, 64, 2.599999999999998, 15, 8]
ic| params: [64.0, 104, 2.7499999999999973, 12, 8]
ic| params: [48.0, 104, 2.6999999999999975, 15, 8]
ic| params: [48.0, 48, 2.05, 13, 8]
ic| params: [24.0, 48, 2.4499999999999984, 9, 8]
ic| params: [32.0, 56, 2.849999999999997, 15, 8]
ic| params: [32.0, 32, 2.6499999999999977, 21, 8]
ic| params: [16.0, 48, 2.3499999999999988, 8, 8]
ic| params: [48.0, 64, 2.899999999999997, 12, 8]
ic| params: [40.0, 48, 2.6999999999999975, 22, 8]
ic| params: [24.0, 40, 2.1499999999999995, 19, 8]
ic| params: [56.0, 120, 2.05, 12, 8]
ic| params: [32.0, 72, 2.7499999999999973, 12, 8]
ic| params: [48.0, 64, 2.299999999999999, 11, 8]
ic| params: [24.0, 104, 2.299999999999999, 19, 8]
ic| params: [56.0, 72, 2.249999999999999, 14, 8]
ic| params: [32.0, 40, 2.249999999999999, 21, 8]
ic| params: [48.0, 56, 2.899999999999997, 11, 8]
ic| individuals: ['gleaming_guppy',
                  'pistachio_wrasse',
                  'asparagus_penguin',
                  'succinct_trout',
                  'didactic_seagull',
                  'gigantic_corgi',
                  'cherry_grasshopper',
                  'cherubic_muskrat',
                  'strong_mackerel',
                  'wealthy_warthog',
                  'meticulous_mongoose',
                  'cryptic_marten',
                  'dandelion_mantis',
                  'berserk_coucal',
                  'secret_oxpecker',
                  'aquamarine_quail',
                  'eager_armadillo',
                  'fractal_dog',
                  'merry_bullfrog',
                  'shapeless_hamster']
ic| params_dict: {'aquamarine_quail': [48.0, 64, 2.299999999999999, 11, 8],
                  'asparagus_penguin': [16.0, 64, 2.599999999999998, 15, 8],
                  'berserk_coucal': [56.0, 120, 2.05, 12, 8],
                  'cherry_grasshopper': [24.0, 48, 2.4499999999999984, 9, 8],
                  'cherubic_muskrat': [32.0, 56, 2.849999999999997, 15, 8],
                  'cryptic_marten': [40.0, 48, 2.6999999999999975, 22, 8],
                  'dandelion_mantis': [24.0, 40, 2.1499999999999995, 19, 8],
                  'didactic_seagull': [48.0, 104, 2.6999999999999975, 15, 8],
                  'eager_armadillo': [24.0, 104, 2.299999999999999, 19, 8],
                  'fractal_dog': [56.0, 72, 2.249999999999999, 14, 8],
                  'gigantic_corgi': [48.0, 48, 2.05, 13, 8],
                  'gleaming_guppy': [40.0, 80, 2.849999999999997, 14, 8],
                  'merry_bullfrog': [32.0, 40, 2.249999999999999, 21, 8],
                  'meticulous_mongoose': [48.0, 64, 2.899999999999997, 12, 8],
                  'pistachio_wrasse': [56.0, 72, 2.4999999999999982, 10, 8],
                  'secret_oxpecker': [32.0, 72, 2.7499999999999973, 12, 8],
                  'shapeless_hamster': [48.0, 56, 2.899999999999997, 11, 8],
                  'strong_mackerel': [32.0, 32, 2.6499999999999977, 21, 8],
                  'succinct_trout': [64.0, 104, 2.7499999999999973, 12, 8],
                  'wealthy_warthog': [16.0, 48, 2.3499999999999988, 8, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79d9531990>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79d9532350>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79d95326b0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79d9530be0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79bac2aad0>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a840c4b20>,
                                                ToTensor(),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a840c6590>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 1'
ic| f"selected transform {train_transform}": ('selected transform [RandAugment(interpolation=InterpolationMode.NEAREST, '
                                              'num_ops=2, magnitude=9, num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41636986880
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 71226.77844119072
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwandering_booby
[31m[EVAL] Best accuracy:60.849998474121094[0m
['parents.csv', 'ambrosial_saluki', 'attractive_skua', 'awesome_tanuki', 'daffy_mole', 'gainful_puma', 'hilarious_lizard', 'meek_rattlesnake', 'nano_snake', 'offbeat_leech', 'orchid_dodo', 'polar_dachshund', 'rampant_leopard', 'scrupulous_uakari', 'sexy_condor', 'shapeless_crayfish', 'spiked_lori', 'spotted_bumblebee', 'strong_parrot', 'tactful_quail', 'wandering_booby', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 67.62
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_3/tests_Volga_23_10_2024_17_50/Generation_3/orchid_dodo/config.yaml

=== Training ===
  Allotted compute time remaining: ~20h,33m,14s
[31m[EVAL] Best accuracy:83.29999542236328[0m

=== Predicting ===
  Allotted compute time remaining: ~19h,56m,16s

========== Dataset   Sokoto   =============================================
  Metadata:
   - input_shape         : [50000, 1, 9, 9]
   - codename            : Sokoto
   - benchmark           : 0.0
   - num_classes         : 9
   - time_remaining      : 71775.47349262238

=== Processing Data ===
  Allotted compute time remaining: ~19h,56m,15s

=== Performing NAS ===
  Allotted compute time remaining: ~19h,47m,6s
spawn
Created model:  spectral_baboon
Created model:  adventurous_swine
Created model:  ultra_parakeet
Created model:  black_reindeer
Created model:  refined_limpet
Created model:  flawless_gerbil
Created model:  pastel_eagle
Created model:  ultramarine_eel
Created model:  obedient_robin
Created model:  snobbish_barracuda
Created model:  quartz_wildcat
Created model:  orchid_peacock
Created model:  hot_herring
Created model:  little_tamarin
Created model:  massive_lionfish
Created model:  witty_woodpecker
Created model:  exotic_cougar
Created model:  resourceful_aardwark
Created model:  tan_ostrich
Created model:  piquant_gharial
[2K[2Kadventurous_swine
[31m[EVAL] Best accuracy:12.819999694824219[0m
[2K[2Kblack_reindeer
[31m[EVAL] Best accuracy:11.380000114440918[0m
[2K[2Kexotic_cougar
[31m[EVAL] Best accuracy:12.769999504089355[0m
[2K[2Kflawless_gerbil
[31m[EVAL] Best accuracy:11.929999351501465[0m
[2K[2Khot_herring
[31m[EVAL] Best accuracy:13.0[0m
[2K[2Klittle_tamarin
[31m[EVAL] Best accuracy:11.40999984741211[0m
[2K[2Kmassive_lionfish
[31m[EVAL] Best accuracy:13.15999984741211[0m
[2K[2Kobedient_robin
[31m[EVAL] Best accuracy:15.4399995803833[0m
[2K[2Korchid_peacock
[31m[EVAL] Best accuracy:11.460000038146973[0m
[2K[2Kpastel_eagle
[31m[EVAL] Best accuracy:12.649999618530273[0m
[2K[2Kpiquant_gharial
[31m[EVAL] Best accuracy:16.84000015258789[0m
[2K[2Kquartz_wildcat
[31m[EVAL] Best accuracy:11.369999885559082[0m
[2K[2Krefined_limpet
[31m[EVAL] Best accuracy:12.979999542236328[0m
[2K[2Kresourceful_aardwark
[31m[EVAL] Best accuracy:14.989999771118164[0m
[2K[2Ksnobbish_barracuda
[31m[EVAL] Best accuracy:11.479999542236328[0m
[2K[2Kspectral_baboon
[31m[EVAL] Best accuracy:12.269999504089355[0m
[2K[2Ktan_ostrich
[31m[EVAL] Best accuracy:11.389999389648438[0m
[2K[2Kultra_parakeet
[31m[EVAL] Best accuracy:12.4399995803833[0m
[2K[2Kultramarine_eel
[31m[EVAL] Best accuracy:16.549999237060547[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 3185.4125170707703
ic| self.metadata["time_remaining"]: 71226.77844119072
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 48.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 32.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwitty_woodpecker
[31m[EVAL] Best accuracy:14.029999732971191[0m
['spectral_baboon', 'adventurous_swine', 'ultra_parakeet', 'black_reindeer', 'refined_limpet', 'flawless_gerbil', 'pastel_eagle', 'ultramarine_eel', 'obedient_robin', 'snobbish_barracuda', 'quartz_wildcat', 'orchid_peacock', 'hot_herring', 'little_tamarin', 'massive_lionfish', 'witty_woodpecker', 'exotic_cougar', 'resourceful_aardwark', 'tan_ostrich', 'piquant_gharial', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 16.84
Child: [44.0, 120, 2.6, 10]
Old_chrom: [40.0, 120, 2.6499999999999977, 11]
Diff: 0.09932438244955807
[52.0, 112, 2.5500000000000003, 9]
Child: [44.0, 120, 2.6500000000000004, 11]
Old_chrom: [40.0, 120, 2.6499999999999977, 11]
Diff: 0.02083334733053699
[36.0, 120, 2.6500000000000004, 11]
Child: [36.0, 120, 2.6500000000000004, 11]
Old_chrom: [40.0, 120, 2.6499999999999977, 11]
Diff: 0.02083334733053699
[28.0, 112, 2.6000000000000005, 12]
Child: [40.0, 120, 2.75, 12]
Old_chrom: [40.0, 112, 2.799999999999997, 13]
Diff: 0.0977218183469937
[48.0, 120, 2.8, 12]
Child: [36.0, 120, 2.5500000000000003, 13]
Old_chrom: [36.0, 120, 2.5, 12]
Diff: 0.07849104911622637
[44.0, 120, 2.6, 12]
Child: [44.0, 120, 2.6, 12]
Old_chrom: [40.0, 120, 2.6499999999999977, 11]
Diff: 0.09932438244955807
[44.0, 120, 2.65, 13]
Child: [36.0, 80, 2.5500000000000003, 11]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.09772181834699559
[28.0, 88, 2.5500000000000003, 10]
Child: [40.0, 120, 2.4999999999999982, 8]
Old_chrom: [48.0, 120, 2.4999999999999982, 8]
Diff: 0.041666666666666664
[40.0, 112, 2.4999999999999982, 8]
Child: [40.0, 112, 2.4999999999999982, 8]
Old_chrom: [48.0, 120, 2.4999999999999982, 8]
Diff: 0.060897435897435896
[48.0, 104, 2.4499999999999984, np.int64(8)]
Child: [48.0, 104, 2.4499999999999984, np.int64(8)]
Old_chrom: [48.0, 120, 2.4999999999999982, 8]
Diff: 0.0990954447206217
[56.0, 96, 2.4499999999999984, np.int64(8)]
Child: [32.0, 120, 2.4999999999999982, 8]
Old_chrom: [48.0, 120, 2.4999999999999982, 8]
Diff: 0.08333333333333333
[32.0, 120, 2.4499999999999984, 8]
Child: [40.0, 120, 2.4999999999999982, 13]
Old_chrom: [36.0, 120, 2.5, 12]
Diff: 0.03869048761914512
[32.0, 120, 2.4999999999999982, 12]
Child: [32.0, 120, 2.4999999999999982, 12]
Old_chrom: [36.0, 120, 2.5, 12]
Diff: 0.02083334476200226
[32.0, 112, 2.549999999999998, 13]
Child: [32.0, 112, 2.549999999999998, 13]
Old_chrom: [28.0, 112, 2.6000000000000005, 12]
Diff: 0.09932438244956104
[32.0, 120, 2.599999999999998, 14]
Child: [40.0, 120, 2.299999999999999, 13]
Old_chrom: [32.0, 120, 2.299999999999999, 13]
Diff: 0.041666666666666664
[40.0, 120, 2.299999999999999, 12]
Child: [40.0, 120, 2.299999999999999, 12]
Old_chrom: [32.0, 120, 2.299999999999999, 13]
Diff: 0.05952380952380952
[48.0, 128, 2.3499999999999988, 11]
Child: [40.0, 120, 2.6499999999999977, 13]
Old_chrom: [40.0, 120, 2.6499999999999977, 11]
Diff: 0.03571428571428571
[32.0, 120, 2.6999999999999975, 13]
Child: [40.0, 48, 2.299999999999999, 11]
Old_chrom: [32.0, 48, 2.299999999999999, 9]
Diff: 0.07738095238095238
[32.0, 40, 2.299999999999999, 11]
Child: [32.0, 40, 2.299999999999999, 11]
Old_chrom: [32.0, 48, 2.299999999999999, 9]
Diff: 0.054945054945054944
[32.0, 48, 2.249999999999999, 12]
Child: [32.0, 48, 2.249999999999999, 12]
Old_chrom: [24.0, 48, 2.249999999999999, 14]
Diff: 0.07738095238095238
[32.0, 56, 2.249999999999999, 13]
Child: [32.0, 56, 2.249999999999999, 13]
Old_chrom: [24.0, 48, 2.249999999999999, 14]
Diff: 0.07875457875457875
[24.0, 56, 2.1999999999999993, 14]
Child: [24.0, 56, 2.1999999999999993, 14]
Old_chrom: [24.0, 48, 2.249999999999999, 14]
Diff: 0.07986467548985247
[24.0, 48, 2.1499999999999995, 15]
Child: [40.0, 112, 2.299999999999999, 13]
Old_chrom: [32.0, 120, 2.299999999999999, 13]
Diff: 0.060897435897435896
[48.0, 104, 2.3499999999999988, 14]
Child: [32.0, 48, 2.299999999999999, 13]
Old_chrom: [32.0, 48, 2.299999999999999, 9]
Diff: 0.07142857142857142
[24.0, 56, 2.249999999999999, 12]
Child: [24.0, 56, 2.249999999999999, 12]
Old_chrom: [24.0, 48, 2.249999999999999, 14]
Diff: 0.054945054945054944
[16.0, 56, 2.299999999999999, 12]
Created model:  acrid_bug
Created model:  crouching_koala
Created model:  curvy_grasshopper
Created model:  daffodil_labradoodle
Created model:  demonic_mantis
Created model:  encouraging_pillbug
Created model:  enormous_polecat
Created model:  gainful_hawk
Created model:  lemon_goshawk
Created model:  lilac_grasshopper
Created model:  nimble_mouse
Created model:  offbeat_mustang
Created model:  original_vicugna
Created model:  outstanding_rattlesnake
Created model:  outstanding_rooster
Created model:  phenomenal_slug
Created model:  refreshing_turkey
Created model:  therapeutic_limpet
Created model:  warm_bison
Created model:  zippy_auk
[2K[2Kacrid_bug
[31m[EVAL] Best accuracy:11.9399995803833[0m
[2K[2Kcrouching_koala
[31m[EVAL] Best accuracy:12.239999771118164[0m
[2K[2Kcurvy_grasshopper
[31m[EVAL] Best accuracy:13.819999694824219[0m
[2K[2Kdaffodil_labradoodle
[31m[EVAL] Best accuracy:11.679999351501465[0m
[2K[2Kdemonic_mantis
[31m[EVAL] Best accuracy:13.769999504089355[0m
[2K[2Kencouraging_pillbug
[31m[EVAL] Best accuracy:11.769999504089355[0m
[2K[2Kenormous_polecat
[31m[EVAL] Best accuracy:16.5[0m
[2K[2Kgainful_hawk
[31m[EVAL] Best accuracy:13.289999961853027[0m
[2K[2Klemon_goshawk
[31m[EVAL] Best accuracy:15.589999198913574[0m
[2K[2Klilac_grasshopper
[31m[EVAL] Best accuracy:15.029999732971191[0m
[2K[2Knimble_mouse
[31m[EVAL] Best accuracy:15.84999942779541[0m
[2K[2Koffbeat_mustang
[31m[EVAL] Best accuracy:12.539999961853027[0m
[2K[2Koriginal_vicugna
[31m[EVAL] Best accuracy:13.65999984741211[0m
[2K[2Koutstanding_rattlesnake
[31m[EVAL] Best accuracy:12.9399995803833[0m
[2K[2Koutstanding_rooster
[31m[EVAL] Best accuracy:14.25999927520752[0m
[2K[2Kphenomenal_slug
[31m[EVAL] Best accuracy:15.4399995803833[0m
[2K[2Krefreshing_turkey
[31m[EVAL] Best accuracy:11.479999542236328[0m
[2K[2Ktherapeutic_limpet
[31m[EVAL] Best accuracy:13.839999198913574[0m
[2K[2Kwarm_bison
[31m[EVAL] Best accuracy:14.420000076293945[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 32.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 32.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 32.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6226.474754810333
ic| self.metadata["time_remaining"]: 71226.77844119072
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 32.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 32.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 32.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 32.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 48, 'WA': 32.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 36.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kzippy_auk
[31m[EVAL] Best accuracy:13.170000076293945[0m
['parents.csv', 'acrid_bug', 'crouching_koala', 'curvy_grasshopper', 'daffodil_labradoodle', 'demonic_mantis', 'encouraging_pillbug', 'enormous_polecat', 'gainful_hawk', 'lemon_goshawk', 'lilac_grasshopper', 'nimble_mouse', 'offbeat_mustang', 'original_vicugna', 'outstanding_rattlesnake', 'outstanding_rooster', 'phenomenal_slug', 'refreshing_turkey', 'therapeutic_limpet', 'warm_bison', 'zippy_auk', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 16.5
Child: [46.0, 96, 2.5, 9]
Old_chrom: [48.0, 120, 2.4999999999999982, 8]
Diff: 0.08596612864478614
[38.0, 104, 2.45, 8]
Child: [34.0, 88, 2.45, 11]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.08890771578289278
[34.0, 96, 2.4000000000000004, 10]
Child: [34.0, 104, 2.6, 12]
Old_chrom: [28.0, 112, 2.6000000000000005, 12]
Diff: 0.050480774945103696
[42.0, 104, 2.65, 11]
Child: [42.0, 104, 2.65, 11]
Old_chrom: [40.0, 120, 2.6499999999999977, 11]
Diff: 0.048878217905845435
[34.0, 112, 2.6999999999999997, 11]
Child: [34.0, 112, 2.6999999999999997, 11]
Old_chrom: [32.0, 120, 2.6999999999999975, 13]
Diff: 0.06536173438936191
[42.0, 120, 2.6999999999999997, 12]
Child: [42.0, 120, 2.6999999999999997, 12]
Old_chrom: [40.0, 120, 2.6499999999999977, 11]
Diff: 0.08890771578289411
[34.0, 128, 2.6999999999999997, 12]
Child: [32.0, 88, 2.5500000000000003, 10]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.08146723959241685
[32.0, 80, 2.5000000000000004, 11]
Child: [44.0, 96, 2.4000000000000004, 10]
Old_chrom: [56.0, 96, 2.3999999999999986, 12]
Diff: 0.09821429714295464
[44.0, 96, 2.3500000000000005, 11]
Child: [42.0, 96, 2.5, 9]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.0683379120879121
[34.0, 96, 2.55, 9]
Child: [34.0, 96, 2.55, 9]
Old_chrom: [28.0, 88, 2.5500000000000003, 10]
Diff: 0.06833791780224654
[42.0, 96, 2.5, 9]
Child: [42.0, 96, 2.5, 9]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.0683379120879121
[50.0, 96, 2.5, 9]
Child: [50.0, 96, 2.5, 9]
Old_chrom: [48.0, 120, 2.4999999999999982, 8]
Diff: 0.08596612864478614
[58.0, 96, 2.45, 8]
Child: [32.0, 104, 2.5, 12]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.0950091575091575
[40.0, 104, 2.5, 13]
Child: [30.0, 88, 2.45, 11]
Old_chrom: [32.0, 80, 2.5000000000000004, 11]
Diff: 0.09028134215651941
[22.0, 96, 2.45, 10]
Child: [30.0, 104, 2.6500000000000004, 12]
Old_chrom: [28.0, 112, 2.6000000000000005, 12]
Diff: 0.09028134215651915
[30.0, 112, 2.6000000000000005, 12]
Child: [36.0, 96, 2.4499999999999984, 10]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.07986467548985354
[36.0, 104, 2.4999999999999982, 9]
Child: [36.0, 104, 2.4999999999999982, 9]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.05631869274735025
[36.0, 104, 2.4999999999999982, 8]
Child: [36.0, 104, 2.4999999999999982, 8]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.0741758356044931
[44.0, 104, 2.549999999999998, np.int64(8)]
Child: [44.0, 104, 2.549999999999998, np.int64(8)]
Old_chrom: [52.0, 112, 2.5500000000000003, 9]
Diff: 0.07875459153221906
[52.0, 96, 2.599999999999998, np.int64(9)]
Child: [52.0, 96, 2.599999999999998, np.int64(9)]
Old_chrom: [52.0, 112, 2.5500000000000003, 9]
Diff: 0.09909544472062036
[60.0, 96, 2.6499999999999977, np.int64(10)]
Child: [32.0, 88, 2.5, 10]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.020833333333333332
[32.0, 96, 2.5, 10]
Child: [32.0, 96, 2.5, 10]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.04006410256410256
[40.0, 104, 2.5, 9]
Child: [40.0, 104, 2.5, 9]
Old_chrom: [48.0, 120, 2.4999999999999982, 8]
Diff: 0.0979853594140169
[40.0, 112, 2.55, 10]
Child: [36.0, 120, 2.6999999999999975, 10]
Old_chrom: [40.0, 120, 2.6499999999999977, 11]
Diff: 0.09932438244955943
[36.0, 120, 2.6999999999999975, 10]
Child: [28.0, 88, 2.5, 10]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.041666666666666664
[36.0, 80, 2.45, 10]
Child: [36.0, 80, 2.45, 10]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.07986467548985247
[44.0, 72, 2.5, 10]
Child: [44.0, 72, 2.5, 10]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.08012820512820512
[52.0, 64, 2.5, 11]
Child: [32.0, 96, 2.4499999999999984, 11]
Old_chrom: [34.0, 96, 2.4000000000000004, 10]
Diff: 0.0889077157828917
[24.0, 96, 2.4999999999999982, 11]
Child: [28.0, 96, 2.4499999999999984, 10]
Old_chrom: [34.0, 96, 2.4000000000000004, 10]
Diff: 0.09188390625908216
[20.0, 104, 2.4499999999999984, 10]
Child: [32.0, 120, 2.6999999999999975, 11]
Old_chrom: [32.0, 120, 2.6999999999999975, 13]
Diff: 0.03571428571428571
[24.0, 120, 2.7499999999999973, 12]
Child: [32.0, 88, 2.5500000000000003, 10]
Old_chrom: [36.0, 88, 2.5, 10]
Diff: 0.08146723959241685
[32.0, 80, 2.6, 9]
Child: [28.0, 88, 2.6999999999999975, 13]
Old_chrom: [32.0, 120, 2.6999999999999975, 13]
Diff: 0.09775641025641026
[36.0, 88, 2.7499999999999973, 12]
Created model:  astute_parakeet
Created model:  axiomatic_nautilus
Created model:  daffy_buzzard
Created model:  dangerous_panther
Created model:  excellent_meerkat
Created model:  fortunate_dragonfly
Created model:  heavenly_labradoodle
Created model:  ingenious_hippo
Created model:  judicious_quokka
Created model:  mysterious_harrier
Created model:  qualified_panda
Created model:  quick_tench
Created model:  skinny_crocodile
Created model:  splendid_hummingbird
Created model:  statuesque_penguin
Created model:  swinging_agouti
Created model:  unnatural_caracara
Created model:  visionary_potoo
Created model:  whimsical_gharial
Created model:  zippy_sponge
[2K[2Kastute_parakeet
[31m[EVAL] Best accuracy:16.3799991607666[0m
[2K[2Kaxiomatic_nautilus
[31m[EVAL] Best accuracy:11.679999351501465[0m
[2K[2Kdaffy_buzzard
[31m[EVAL] Best accuracy:15.09999942779541[0m
[2K[2Kdangerous_panther
[31m[EVAL] Best accuracy:13.420000076293945[0m
[2K[2Kexcellent_meerkat
[31m[EVAL] Best accuracy:14.879999160766602[0m
[2K[2Kfortunate_dragonfly
[31m[EVAL] Best accuracy:15.59999942779541[0m
[2K[2Kheavenly_labradoodle
[31m[EVAL] Best accuracy:14.789999961853027[0m
[2K[2Kingenious_hippo
[31m[EVAL] Best accuracy:13.9399995803833[0m
[2K[2Kjudicious_quokka
[31m[EVAL] Best accuracy:16.34000015258789[0m
[2K[2Kmysterious_harrier
[31m[EVAL] Best accuracy:15.449999809265137[0m
[2K[2Kqualified_panda
[31m[EVAL] Best accuracy:12.179999351501465[0m
[2K[2Kquick_tench
[31m[EVAL] Best accuracy:14.170000076293945[0m
[2K[2Kskinny_crocodile
[31m[EVAL] Best accuracy:17.3799991607666[0m
[2K[2Ksplendid_hummingbird
[31m[EVAL] Best accuracy:13.420000076293945[0m
[2K[2Kstatuesque_penguin
[31m[EVAL] Best accuracy:13.559999465942383[0m
[2K[2Kswinging_agouti
[31m[EVAL] Best accuracy:13.789999961853027[0m
[2K[2Kunnatural_caracara
[31m[EVAL] Best accuracy:12.6899995803833[0m
[2K[2Kvisionary_potoo
[31m[EVAL] Best accuracy:15.139999389648438[0m
[2K[2Kwhimsical_gharial
[31m[EVAL] Best accuracy:16.920000076293945[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 36.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 36.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 88, 'WA': 36.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 9224.782183408737
ic| self.metadata["time_remaining"]: 71226.77844119072
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 0.0,
               'codename': 'Sokoto',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_3/tests_Sokoto_23_10_2024_20_53/Generation_3/zippy_sponge',
               'input_shape': [50000, 1, 9, 9],
               'mode': 'NAS',
               'num_classes': 9,
               'test_type': 'T2_Proxy/seed_3',
               'time_remaining': 62001.77276420593,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| unique_values: array([0.09411765, 0.09803922, 0.10196079, 0.10588235, 0.10980392,
                          0.11372549, 0.11764706, 0.12156863, 0.1254902 , 0.12941177,
                          0.13333334, 0.13725491, 0.14117648, 0.14509805, 0.14901961,
                          0.15294118, 0.15686275, 0.16078432, 0.16470589, 0.16862746,
                          0.17254902, 0.1764706 , 0.18039216, 0.18431373, 0.1882353 ,
                          0.19215687, 0.19607843, 0.2       , 0.20392157, 0.20784314,
                          0.21176471, 0.21568628, 0.21960784, 0.22352941, 0.22745098,
                          0.23137255, 0.23529412, 0.23921569, 0.24313726, 0.24705882,
                          0.2509804 , 0.25490198, 0.25882354, 0.2627451 , 0.26666668,
                          0.27058825, 0.27450982, 0.2784314 , 0.28235295, 0.28627452,
                          0.2901961 , 0.29411766, 0.29803923, 0.3019608 , 0.30588236,
                          0.30980393, 0.3137255 , 0.31764707, 0.32156864, 0.3254902 ,
                          0.32941177, 0.33333334, 0.3372549 , 0.34117648, 0.34509805,
                          0.34901962, 0.3529412 , 0.35686275, 0.36078432, 0.3647059 ,
                          0.36862746, 0.37254903, 0.3764706 , 0.38039216, 0.38431373,
                          0.3882353 , 0.39215687, 0.39607844, 0.4       , 0.40392157,
                          0.40784314, 0.4117647 , 0.41568628, 0.41960785, 0.42352942,
                          0.42745098, 0.43137255, 0.43529412, 0.4392157 , 0.44313726,
                          0.44705883, 0.4509804 , 0.45490196, 0.45882353, 0.4627451 ,
                          0.46666667, 0.47058824, 0.4745098 , 0.47843137, 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7411765 ,
                          0.74509805, 0.7490196 , 0.7529412 , 0.75686276, 0.7647059 ,
                          0.76862746, 0.77254903, 0.7764706 , 0.78431374, 0.7882353 ,
                          0.7921569 , 0.79607844, 0.8       , 0.8039216 , 0.8156863 ,
                          0.81960785, 0.8235294 , 0.827451  , 0.83137256, 0.8392157 ,
                          0.8509804 , 0.85882354, 0.8627451 , 0.8666667 , 0.87058824,
                          0.8784314 , 0.88235295, 0.8901961 , 0.89411765, 0.90588236,
                          0.9098039 , 0.9137255 , 0.92156863, 0.92941177, 0.93333334,
                          0.9411765 , 0.9490196 , 0.9529412 , 0.972549  ], dtype=float32)
ic| C: 3
ic| H: 32
ic| PH: 4
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f79c8178940>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f79c8178820>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f79c817a710>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f79c817b880>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f7a826e6170>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f7a826e4af0>,
                 ToTensor(),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f7a826e5300>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['spiritual_hyrax',
                  'rational_condor',
                  'ingenious_kittiwake',
                  'sociable_smilodon',
                  'brainy_anteater',
                  'hopeful_panther',
                  'outstanding_quokka',
                  'rare_tuatara',
                  'festive_caterpillar',
                  'truthful_muskox',
                  'outstanding_sponge',
                  'ambitious_meerkat',
                  'active_walrus',
                  'poised_mongoose',
                  'laughing_sponge',
                  'dark_toucan',
                  'amorphous_rooster',
                  'lumpy_ringtail',
                  'poetic_cassowary',
                  'ultraviolet_cobra']
ic| params: [24.0, 48, 2.599999999999998, 18, 8]
ic| params: [48.0, 112, 2.849999999999997, 11, 8]
ic| params: [32.0, 112, 2.599999999999998, 19, 8]
ic| params: [16.0, 120, 2.249999999999999, 20, 8]
ic| params: [40.0, 56, 2.1999999999999993, 13, 8]
ic| params: [16.0, 96, 2.799999999999997, 12, 8]
ic| params: [64.0, 72, 2.6999999999999975, 16, 8]
ic| params: [32.0, 48, 2.899999999999997, 12, 8]
ic| params: [16.0, 16, 2.299999999999999, 14, 8]
ic| params: [64.0, 112, 2.249999999999999, 16, 8]
ic| params: [32.0, 56, 2.899999999999997, 17, 8]
ic| params: [24.0, 40, 2.1499999999999995, 15, 8]
ic| params: [24.0, 24, 2.899999999999997, 13, 8]
ic| params: [24.0, 24, 2.1499999999999995, 22, 8]
ic| params: [16.0, 104, 2.1499999999999995, 18, 8]
ic| params: [48.0, 96, 2.7499999999999973, 12, 8]
ic| params: [16.0, 48, 2.6999999999999975, 10, 8]
ic| params: [32.0, 80, 2.549999999999998, 21, 8]
ic| params: [16.0, 112, 2.3499999999999988, 14, 8]
ic| params: [40.0, 96, 2.549999999999998, 18, 8]
ic| individuals: ['spiritual_hyrax',
                  'rational_condor',
                  'ingenious_kittiwake',
                  'sociable_smilodon',
                  'brainy_anteater',
                  'hopeful_panther',
                  'outstanding_quokka',
                  'rare_tuatara',
                  'festive_caterpillar',
                  'truthful_muskox',
                  'outstanding_sponge',
                  'ambitious_meerkat',
                  'active_walrus',
                  'poised_mongoose',
                  'laughing_sponge',
                  'dark_toucan',
                  'amorphous_rooster',
                  'lumpy_ringtail',
                  'poetic_cassowary',
                  'ultraviolet_cobra']
ic| params_dict: {'active_walrus': [24.0, 24, 2.899999999999997, 13, 8],
                  'ambitious_meerkat': [24.0, 40, 2.1499999999999995, 15, 8],
                  'amorphous_rooster': [16.0, 48, 2.6999999999999975, 10, 8],
                  'brainy_anteater': [40.0, 56, 2.1999999999999993, 13, 8],
                  'dark_toucan': [48.0, 96, 2.7499999999999973, 12, 8],
                  'festive_caterpillar': [16.0, 16, 2.299999999999999, 14, 8],
                  'hopeful_panther': [16.0, 96, 2.799999999999997, 12, 8],
                  'ingenious_kittiwake': [32.0, 112, 2.599999999999998, 19, 8],
                  'laughing_sponge': [16.0, 104, 2.1499999999999995, 18, 8],
                  'lumpy_ringtail': [32.0, 80, 2.549999999999998, 21, 8],
                  'outstanding_quokka': [64.0, 72, 2.6999999999999975, 16, 8],
                  'outstanding_sponge': [32.0, 56, 2.899999999999997, 17, 8],
                  'poetic_cassowary': [16.0, 112, 2.3499999999999988, 14, 8],
                  'poised_mongoose': [24.0, 24, 2.1499999999999995, 22, 8],
                  'rare_tuatara': [32.0, 48, 2.899999999999997, 12, 8],
                  'rational_condor': [48.0, 112, 2.849999999999997, 11, 8],
                  'sociable_smilodon': [16.0, 120, 2.249999999999999, 20, 8],
                  'spiritual_hyrax': [24.0, 48, 2.599999999999998, 18, 8],
                  'truthful_muskox': [64.0, 112, 2.249999999999999, 16, 8],
                  'ultraviolet_cobra': [40.0, 96, 2.549999999999998, 18, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79c8178940>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79c8178820>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79c817a710>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f79c817b880>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a826e6170>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a826e4af0>,
                                                ToTensor(),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f7a826e5300>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 5'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=15)]')
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 40879915008
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 58785.769444704056
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kzippy_sponge
[31m[EVAL] Best accuracy:12.670000076293945[0m
['parents.csv', 'astute_parakeet', 'axiomatic_nautilus', 'daffy_buzzard', 'dangerous_panther', 'excellent_meerkat', 'fortunate_dragonfly', 'heavenly_labradoodle', 'ingenious_hippo', 'judicious_quokka', 'mysterious_harrier', 'qualified_panda', 'quick_tench', 'skinny_crocodile', 'splendid_hummingbird', 'statuesque_penguin', 'swinging_agouti', 'unnatural_caracara', 'visionary_potoo', 'whimsical_gharial', 'zippy_sponge', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 17.38
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_3/tests_Sokoto_23_10_2024_20_53/Generation_3/skinny_crocodile/config.yaml

=== Training ===
  Allotted compute time remaining: ~17h,13m,21s
[31m[EVAL] Best accuracy:55.88999938964844[0m

=== Predicting ===
  Allotted compute time remaining: ~16h,29m,49s

========== Dataset  CIFAR10   =============================================
  Metadata:
   - input_shape         : [50000, 3, 32, 32]
   - codename            : CIFAR10
   - benchmark           : 90.65
   - num_classes         : 10
   - time_remaining      : 59387.1555659771

=== Processing Data ===
  Allotted compute time remaining: ~16h,29m,47s

=== Performing NAS ===
  Allotted compute time remaining: ~16h,19m,45s
spawn
Created model:  uncovered_caterpillar
Created model:  certain_wasp
Created model:  rich_seal
Created model:  meek_coua
Created model:  astute_seagull
Created model:  thankful_eel
Created model:  thundering_axolotl
Created model:  versed_bird
Created model:  speedy_antelope
Created model:  beautiful_alligator
Created model:  fragrant_sawfly
Created model:  sticky_lizard
Created model:  shaggy_agouti
Created model:  copper_jaguarundi
Created model:  speedy_quoll
Created model:  adamant_tuna
Created model:  teal_coucal
Created model:  debonair_squid
Created model:  wooden_mussel
Created model:  nostalgic_millipede
[2K[2Kadamant_tuna
[31m[EVAL] Best accuracy:74.87999725341797[0m
[2K[2Kastute_seagull
[31m[EVAL] Best accuracy:73.02999877929688[0m
[2K[2Kbeautiful_alligator
[31m[EVAL] Best accuracy:71.95999908447266[0m
[2K[2Kcertain_wasp
[31m[EVAL] Best accuracy:73.12999725341797[0m
[2K[2Kcopper_jaguarundi
[31m[EVAL] Best accuracy:71.0199966430664[0m
[2K[2Kdebonair_squid
[31m[EVAL] Best accuracy:70.23999786376953[0m
[2K[2Kfragrant_sawfly
[31m[EVAL] Best accuracy:58.459999084472656[0m
[2K[2Kmeek_coua
[31m[EVAL] Best accuracy:71.55999755859375[0m
[2K[2Knostalgic_millipede
[31m[EVAL] Best accuracy:75.08999633789062[0m
[2K[2Krich_seal
[31m[EVAL] Best accuracy:70.7699966430664[0m
[2K[2Kshaggy_agouti
[31m[EVAL] Best accuracy:73.02999877929688[0m
[2K[2Kspeedy_antelope
[31m[EVAL] Best accuracy:67.61000061035156[0m
[2K[2Kspeedy_quoll
[31m[EVAL] Best accuracy:68.12999725341797[0m
[2K[2Ksticky_lizard
[31m[EVAL] Best accuracy:66.20999908447266[0m
[2K[2Kteal_coucal
[31m[EVAL] Best accuracy:78.4000015258789[0m
[2K[2Kthankful_eel
[31m[EVAL] Best accuracy:69.54999542236328[0m
[2K[2Kthundering_axolotl
[31m[EVAL] Best accuracy:76.0999984741211[0m
[2K[2Kuncovered_caterpillar
[31m[EVAL] Best accuracy:62.849998474121094[0m
[2K[2Kversed_bird
[31m[EVAL] Best accuracy:67.83999633789062[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2405.571091890335
ic| self.metadata["time_remaining"]: 58785.769444704056
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 112, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwooden_mussel
[31m[EVAL] Best accuracy:67.98999786376953[0m
['uncovered_caterpillar', 'certain_wasp', 'rich_seal', 'meek_coua', 'astute_seagull', 'thankful_eel', 'thundering_axolotl', 'versed_bird', 'speedy_antelope', 'beautiful_alligator', 'fragrant_sawfly', 'sticky_lizard', 'shaggy_agouti', 'copper_jaguarundi', 'speedy_quoll', 'adamant_tuna', 'teal_coucal', 'debonair_squid', 'wooden_mussel', 'nostalgic_millipede', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 78.4
Child: [40.0, 88, 2.6, 13]
Old_chrom: [40.0, 112, 2.6, 13]
Diff: 0.057692307692307696
[48.0, 80, 2.65, 13]
Child: [56.0, 104, 2.849999999999997, 10]
Old_chrom: [56.0, 112, 2.849999999999997, 10]
Diff: 0.019230769230769232
[56.0, 104, 2.849999999999997, 11]
Child: [56.0, 104, 2.849999999999997, 11]
Old_chrom: [56.0, 112, 2.849999999999997, 10]
Diff: 0.03708791208791209
[64.0, 104, 2.849999999999997, 11]
Child: [64.0, 104, 2.849999999999997, 11]
Old_chrom: [56.0, 112, 2.849999999999997, 10]
Diff: 0.07875457875457875
[56.0, 104, 2.899999999999997, 11]
Child: [56.0, 104, 2.899999999999997, 11]
Old_chrom: [56.0, 112, 2.849999999999997, 10]
Diff: 0.09772181834699534
[56.0, 112, 2.899999999999997, 11]
Child: [56.0, 112, 2.3999999999999986, 9]
Old_chrom: [56.0, 104, 2.3999999999999986, 9]
Diff: 0.019230769230769232
[64.0, 104, 2.3499999999999988, 8]
Child: [56.0, 104, 2.3999999999999986, 9]
Old_chrom: [56.0, 104, 2.3999999999999986, 9]
Diff: 0.0
[48.0, 112, 2.3499999999999988, 10]
Child: [56.0, 104, 2.6499999999999977, 9]
Old_chrom: [56.0, 112, 2.6500000000000004, 10]
Diff: 0.03708792608511574
[56.0, 112, 2.599999999999998, 10]
Child: [56.0, 112, 2.599999999999998, 10]
Old_chrom: [56.0, 112, 2.6500000000000004, 10]
Diff: 0.06063390625908486
[56.0, 112, 2.599999999999998, 10]
Child: [56.0, 112, 2.599999999999998, 10]
Old_chrom: [56.0, 112, 2.6500000000000004, 10]
Diff: 0.06063390625908486
[64.0, 120, 2.6499999999999977, 10]
Child: [64.0, 120, 2.6499999999999977, 10]
Old_chrom: [56.0, 112, 2.6500000000000004, 10]
Diff: 0.060897449894639556
[72.0, 112, 2.6499999999999977, 10]
Child: [72.0, 112, 2.6499999999999977, 10]
Old_chrom: [56.0, 112, 2.6500000000000004, 10]
Diff: 0.08333334733053699
[64.0, 120, 2.6999999999999975, 11]
Child: [64.0, 120, 2.6999999999999975, 11]
Old_chrom: [56.0, 112, 2.7, 13]
Diff: 0.09661173560892528
[56.0, 112, 2.6499999999999977, 12]
Created model:  astonishing_groundhog
Created model:  banana_coucal
Created model:  bipedal_deer
Created model:  black_mouse
Created model:  efficient_perch
Created model:  enormous_mandrill
Created model:  functional_chimpanzee
Created model:  heretic_sponge
Created model:  magnificent_vulture
Created model:  mellow_falcon
Created model:  merciful_cicada
Created model:  nano_centipede
Created model:  naughty_mule
Created model:  orthodox_turtle
Created model:  proficient_rabbit
Created model:  rigorous_rabbit
Created model:  shapeless_mackerel
Created model:  snobbish_pug
Created model:  stalwart_koel
Created model:  tacky_harrier
[2K[2Kastonishing_groundhog
[31m[EVAL] Best accuracy:73.04000091552734[0m
[2K[2Kbanana_coucal
[31m[EVAL] Best accuracy:73.0199966430664[0m
[2K[2Kbipedal_deer
[31m[EVAL] Best accuracy:73.6500015258789[0m
[2K[2Kblack_mouse
[31m[EVAL] Best accuracy:73.30999755859375[0m
[2K[2Kefficient_perch
[31m[EVAL] Best accuracy:69.33999633789062[0m
[2K[2Kenormous_mandrill
[31m[EVAL] Best accuracy:74.30999755859375[0m
[2K[2Kfunctional_chimpanzee
[31m[EVAL] Best accuracy:74.23999786376953[0m
[2K[2Kheretic_sponge
[31m[EVAL] Best accuracy:73.72999572753906[0m
[2K[2Kmagnificent_vulture
[31m[EVAL] Best accuracy:73.04000091552734[0m
[2K[2Kmellow_falcon
[31m[EVAL] Best accuracy:74.08000183105469[0m
[2K[2Kmerciful_cicada
[31m[EVAL] Best accuracy:71.8699951171875[0m
[2K[2Knano_centipede
[31m[EVAL] Best accuracy:74.97000122070312[0m
[2K[2Knaughty_mule
[31m[EVAL] Best accuracy:73.72999572753906[0m
[2K[2Korthodox_turtle
[31m[EVAL] Best accuracy:72.65999603271484[0m
[2K[2Kproficient_rabbit
[31m[EVAL] Best accuracy:75.36000061035156[0m
[2K[2Krigorous_rabbit
[31m[EVAL] Best accuracy:75.19999694824219[0m
[2K[2Kshapeless_mackerel
[31m[EVAL] Best accuracy:69.81999969482422[0m
[2K[2Ksnobbish_pug
[31m[EVAL] Best accuracy:73.45999908447266[0m
[2K[2Kstalwart_koel
[31m[EVAL] Best accuracy:68.83999633789062[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 112, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 112, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 112, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 4618.68036365509
ic| self.metadata["time_remaining"]: 58785.769444704056
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 112, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 112, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 112, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 112, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 112, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Ktacky_harrier
[31m[EVAL] Best accuracy:75.83000183105469[0m
['parents.csv', 'astonishing_groundhog', 'banana_coucal', 'bipedal_deer', 'black_mouse', 'efficient_perch', 'enormous_mandrill', 'functional_chimpanzee', 'heretic_sponge', 'magnificent_vulture', 'mellow_falcon', 'merciful_cicada', 'nano_centipede', 'naughty_mule', 'orthodox_turtle', 'proficient_rabbit', 'rigorous_rabbit', 'shapeless_mackerel', 'snobbish_pug', 'stalwart_koel', 'tacky_harrier', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 75.83
Child: [40.0, 112, 2.6, 14]
Old_chrom: [40.0, 112, 2.6, 13]
Diff: 0.017857142857142856
[48.0, 104, 2.6, 14]
Child: [48.0, 104, 2.6, 14]
Old_chrom: [40.0, 112, 2.6, 13]
Diff: 0.07875457875457875
[40.0, 104, 2.5500000000000003, 14]
Child: [40.0, 104, 2.5500000000000003, 14]
Old_chrom: [40.0, 112, 2.6, 13]
Diff: 0.09772181834699534
[32.0, 96, 2.6, 15]
Child: [40.0, 112, 2.5500000000000003, 11]
Old_chrom: [40.0, 112, 2.6, 13]
Diff: 0.09634819197336895
[32.0, 112, 2.5500000000000003, 11]
Child: [56.0, 112, 2.8000000000000003, 12]
Old_chrom: [56.0, 112, 2.849999999999997, 10]
Diff: 0.09634819197336707
[48.0, 120, 2.8000000000000003, 12]
Child: [48.0, 112, 2.6500000000000004, 13]
Old_chrom: [56.0, 112, 2.6499999999999977, 12]
Diff: 0.05952382352101318
[56.0, 112, 2.7, 12]
Child: [56.0, 112, 2.7, 12]
Old_chrom: [56.0, 112, 2.6499999999999977, 12]
Diff: 0.06063390625908486
[56.0, 104, 2.7, 12]
Child: [56.0, 104, 2.7, 12]
Old_chrom: [56.0, 112, 2.6499999999999977, 12]
Diff: 0.0798646754898541
[64.0, 96, 2.6500000000000004, 12]
Child: [64.0, 96, 2.6500000000000004, 12]
Old_chrom: [56.0, 112, 2.6499999999999977, 12]
Diff: 0.08012821912540878
[64.0, 104, 2.6500000000000004, 13]
Child: [24.0, 112, 2.5, 13]
Old_chrom: [32.0, 96, 2.4999999999999982, 12]
Diff: 0.0979853594140169
[32.0, 104, 2.5, 14]
Child: [40.0, 112, 2.75, 14]
Old_chrom: [40.0, 112, 2.8000000000000003, 13]
Diff: 0.07849104911622637
[32.0, 120, 2.8, 13]
Child: [32.0, 120, 2.8, 13]
Old_chrom: [40.0, 112, 2.8000000000000003, 13]
Diff: 0.06089744161177036
[24.0, 112, 2.8, 13]
Child: [24.0, 112, 2.8, 13]
Old_chrom: [40.0, 112, 2.8000000000000003, 13]
Diff: 0.08333333904766779
[32.0, 104, 2.75, 13]
Child: [32.0, 112, 2.6, 15]
Old_chrom: [40.0, 112, 2.6, 13]
Diff: 0.07738095238095238
[24.0, 104, 2.6, 16]
Child: [24.0, 104, 2.6, 16]
Old_chrom: [24.0, 112, 2.549999999999998, 16]
Diff: 0.07986467548985382
[32.0, 96, 2.6, 16]
Child: [32.0, 96, 2.6, 16]
Old_chrom: [32.0, 96, 2.6, 15]
Diff: 0.017857142857142856
[40.0, 96, 2.5500000000000003, 16]
Child: [40.0, 112, 2.6500000000000004, 10]
Old_chrom: [56.0, 112, 2.6500000000000004, 10]
Diff: 0.08333333333333333
[40.0, 120, 2.6500000000000004, 9]
Child: [32.0, 112, 2.5, 11]
Old_chrom: [32.0, 96, 2.4999999999999982, 12]
Diff: 0.05631869274735025
[32.0, 104, 2.45, 10]
Child: [48.0, 112, 2.75, 12]
Old_chrom: [48.0, 120, 2.8000000000000003, 12]
Diff: 0.07986467548985274
[48.0, 112, 2.75, 12]
Child: [48.0, 112, 2.75, 12]
Old_chrom: [48.0, 120, 2.8000000000000003, 12]
Diff: 0.07986467548985274
[56.0, 104, 2.75, 12]
Child: [56.0, 104, 2.75, 12]
Old_chrom: [56.0, 112, 2.7, 13]
Diff: 0.09772181834699534
[56.0, 104, 2.8, 12]
Child: [56.0, 112, 2.549999999999998, 12]
Old_chrom: [56.0, 104, 2.549999999999998, 16]
Diff: 0.09065934065934066
[64.0, 104, 2.599999999999998, 12]
Child: [56.0, 112, 2.3999999999999986, 9]
Old_chrom: [56.0, 104, 2.3999999999999986, 9]
Diff: 0.019230769230769232
[56.0, 120, 2.3999999999999986, 10]
Child: [56.0, 120, 2.3999999999999986, 10]
Old_chrom: [56.0, 104, 2.3999999999999986, 9]
Diff: 0.05631868131868132
[56.0, 112, 2.3999999999999986, 9]
Child: [56.0, 112, 2.3999999999999986, 9]
Old_chrom: [56.0, 104, 2.3999999999999986, 9]
Diff: 0.019230769230769232
[64.0, 112, 2.3499999999999988, 8]
Child: [64.0, 112, 2.3499999999999988, 8]
Old_chrom: [64.0, 104, 2.3499999999999988, 8]
Diff: 0.019230769230769232
[72.0, 104, 2.3999999999999986, np.int64(8)]
Child: [56.0, 112, 2.899999999999997, 11]
Old_chrom: [56.0, 112, 2.849999999999997, 10]
Diff: 0.07849104911622609
[48.0, 120, 2.899999999999997, 11]
Child: [48.0, 120, 2.899999999999997, 11]
Old_chrom: [56.0, 112, 2.899999999999997, 11]
Diff: 0.060897435897435896
[40.0, 120, 2.9499999999999966, 10]
Child: [40.0, 112, 2.6499999999999977, 12]
Old_chrom: [56.0, 112, 2.6499999999999977, 12]
Diff: 0.08333333333333333
[32.0, 112, 2.599999999999998, 13]
Child: [24.0, 112, 2.549999999999998, 9]
Old_chrom: [32.0, 112, 2.5500000000000003, 11]
Diff: 0.07738096515859269
[16.0, 112, 2.4999999999999982, 8]
Child: [24.0, 112, 2.6, 13]
Old_chrom: [40.0, 112, 2.6, 13]
Diff: 0.08333333333333333
[32.0, 120, 2.6, 13]
Child: [56.0, 112, 2.3999999999999986, 11]
Old_chrom: [56.0, 104, 2.3999999999999986, 9]
Diff: 0.054945054945054944
[64.0, 112, 2.3499999999999988, 11]
Child: [64.0, 112, 2.3499999999999988, 11]
Old_chrom: [64.0, 104, 2.3499999999999988, 8]
Diff: 0.0728021978021978
[72.0, 112, 2.3999999999999986, 12]
Child: [72.0, 112, 2.3999999999999986, 12]
Old_chrom: [72.0, 104, 2.3999999999999986, np.int64(8)]
Diff: 0.09065934065934066
[80.0, 104, 2.3499999999999988, 11]
Child: [40.0, 112, 2.899999999999997, 13]
Old_chrom: [40.0, 112, 2.8000000000000003, 13]
Diff: 0.08574929257125309
[48.0, 104, 2.849999999999997, 12]
Created model:  adept_bird
Created model:  ambrosial_pug
Created model:  cautious_spoonbill
Created model:  dangerous_pug
Created model:  eccentric_poodle
Created model:  enlightened_wildcat
Created model:  expert_centipede
Created model:  futuristic_cockatoo
Created model:  hilarious_galago
Created model:  jade_spider
Created model:  jasper_viper
Created model:  magenta_shark
Created model:  meteoric_lemur
Created model:  polar_goose
Created model:  prompt_asp
Created model:  subtle_tarsier
Created model:  swinging_quetzal
Created model:  terrestrial_dolphin
Created model:  vehement_petrel
Created model:  wisteria_tamarin
[2K[2Kadept_bird
[31m[EVAL] Best accuracy:71.9000015258789[0m
[2K[2Kambrosial_pug
[31m[EVAL] Best accuracy:75.83000183105469[0m
[2K[2Kcautious_spoonbill
[31m[EVAL] Best accuracy:76.77999877929688[0m
[2K[2Kdangerous_pug
[31m[EVAL] Best accuracy:73.43999481201172[0m
[2K[2Keccentric_poodle
[31m[EVAL] Best accuracy:71.11000061035156[0m
[2K[2Kenlightened_wildcat
[31m[EVAL] Best accuracy:75.18999481201172[0m
[2K[2Kexpert_centipede
[31m[EVAL] Best accuracy:72.58999633789062[0m
[2K[2Kfuturistic_cockatoo
[31m[EVAL] Best accuracy:75.08000183105469[0m
[2K[2Khilarious_galago
[31m[EVAL] Best accuracy:75.11000061035156[0m
[2K[2Kjade_spider
[31m[EVAL] Best accuracy:74.19999694824219[0m
[2K[2Kjasper_viper
[31m[EVAL] Best accuracy:74.65999603271484[0m
[2K[2Kmagenta_shark
[31m[EVAL] Best accuracy:71.50999450683594[0m
[2K[2Kmeteoric_lemur
[31m[EVAL] Best accuracy:77.33000183105469[0m
[2K[2Kpolar_goose
[31m[EVAL] Best accuracy:76.54999542236328[0m
[2K[2Kprompt_asp
[31m[EVAL] Best accuracy:73.91999816894531[0m
[2K[2Ksubtle_tarsier
[31m[EVAL] Best accuracy:73.79000091552734[0m
[2K[2Kswinging_quetzal
[31m[EVAL] Best accuracy:74.37999725341797[0m
[2K[2Kterrestrial_dolphin
[31m[EVAL] Best accuracy:74.6199951171875[0m
[2K[2Kvehement_petrel
[31m[EVAL] Best accuracy:75.90999603271484[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6832.635089874268
ic| self.metadata["time_remaining"]: 58785.769444704056
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 90.65,
               'codename': 'CIFAR10',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_3/tests_CIFAR10_24_10_2024_00_21/Generation_3/wisteria_tamarin',
               'input_shape': [50000, 3, 32, 32],
               'mode': 'NAS',
               'num_classes': 10,
               'test_type': 'T2_Proxy/seed_3',
               'time_remaining': 51951.71794986725,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

[2Kwisteria_tamarin
[31m[EVAL] Best accuracy:71.97999572753906[0m
['parents.csv', 'adept_bird', 'ambrosial_pug', 'cautious_spoonbill', 'dangerous_pug', 'eccentric_poodle', 'enlightened_wildcat', 'expert_centipede', 'futuristic_cockatoo', 'hilarious_galago', 'jade_spider', 'jasper_viper', 'magenta_shark', 'meteoric_lemur', 'polar_goose', 'prompt_asp', 'subtle_tarsier', 'swinging_quetzal', 'terrestrial_dolphin', 'vehement_petrel', 'wisteria_tamarin', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.33
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_3/tests_CIFAR10_24_10_2024_00_21/Generation_1/teal_coucal/config.yaml

=== Training ===
  Allotted compute time remaining: ~14h,25m,51s
Early stopping at epoch 100
[31m[EVAL] Best accuracy:91.75999450683594[0m

=== Predicting ===
  Allotted compute time remaining: ~13h,52m,33s

rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/labels
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/predictions
rsync -avr --exclude='**/*x.npy' --exclude='**/train*.npy' --exclude='**/valid*.npy'   --include='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/labels/
sending incremental file list
CIFAR10/
CIFAR10/cifar-10-python.tar.gz
CIFAR10/metadata
CIFAR10/test_y.npy
ImageNet16-120/
ImageNet16-120/metadata
ImageNet16-120/test_y.npy
Sudoku/
Sudoku/Example Image with Corresponding Sudoku Grid.png
Sudoku/README
Sudoku/metadata
Sudoku/test_y.npy
Sudoku/Sokoto/
Sudoku/Sokoto/augmentation_results.json
Sudoku/Sokoto/aug_0/
Sudoku/Sokoto/aug_0/student_best
Sudoku/Sokoto/aug_0/worklog.txt
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_1/
Sudoku/Sokoto/aug_1/student_best
Sudoku/Sokoto/aug_1/worklog.txt
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_2/
Sudoku/Sokoto/aug_2/student_best
Sudoku/Sokoto/aug_2/worklog.txt
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_3/
Sudoku/Sokoto/aug_3/student_best
Sudoku/Sokoto/aug_3/worklog.txt
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_4/
Sudoku/Sokoto/aug_4/student_best
Sudoku/Sokoto/aug_4/worklog.txt
Sudoku/Sokoto/aug_5/
Sudoku/Sokoto/aug_5/student_best
Sudoku/Sokoto/aug_5/worklog.txt
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_6/
Sudoku/Sokoto/aug_6/student_best
Sudoku/Sokoto/aug_6/worklog.txt
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_7/
Sudoku/Sokoto/aug_7/student_best
Sudoku/Sokoto/aug_7/worklog.txt
Sudoku/Sokoto/aug_8/
Sudoku/Sokoto/aug_8/student_best
Sudoku/Sokoto/aug_8/worklog.txt
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_9/
Sudoku/Sokoto/aug_9/student_best
Sudoku/Sokoto/aug_9/worklog.txt
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/worklog-checkpoint.txt
Voxel/
Voxel/Rendered Examples.png
Voxel/metadata
Voxel/test_y.npy

sent 620,487,017 bytes  received 951 bytes  112,815,994.18 bytes/sec
total size is 620,331,646  speedup is 1.00
cp -R /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/predictions /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
cp evaluation/score.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/score.py
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2; python3 score.py
===========================================================================
=============    Your Unseen Data 2024 Submission is scoring     =============
===========================================================================
== Scoring Voxel ==
Raw Score:    83.670
Adj Score:    4.300
Model Params: 1,408,952
Runtime:      10,887.0s
== Scoring ImageNet16-120 ==
Raw Score:    35.633
Adj Score:    -2.004
Model Params: 3,364,910
Runtime:      25,334.0s
== Scoring Sudoku ==
Raw Score:    54.780
Adj Score:    5.478
Model Params: 2,033,280
Runtime:      12,387.2s
== Scoring CIFAR10 ==
Raw Score:    91.660
Adj Score:    1.080
Model Params: 5,492,558
Runtime:      9,434.7s
===========================
Final Score: 8.854
=== JOB_STATISTICS ===
=== current date     : Thu 24 Oct 2024 02:48:36 AM CEST
= Job-ID             : 916709 on tinygpu
= Job-Name           : /home/woody/iwb3/iwb3021h/THESIS_RESULTS/hpcruns/evonas
= Job-Command        : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/evonas_job_full_main_2.sh
= Initial workdir    : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024
= Queue/Partition    : a100
= Slurm account      : iwb3 with QOS=normal
= Requested resources:  for 23:59:00
= Elapsed runtime    : 16:09:33
= Total RAM usage    : 6.0 GiB of requested  GiB (%)   
= Node list          : tg093
= Subm/Elig/Start/End: 2024-10-22T20:43:47 / 2024-10-22T20:43:47 / 2024-10-23T10:39:03 / 2024-10-24T02:48:36
======================
=== Quota infos ======
    Path              Used     SoftQ    HardQ    Gracetime  Filec    FileQ    FiHaQ    FileGrace    
    /home/hpc          103.0G   104.9G   209.7G        N/A     196K     500K   1,000K        N/A    
    /home/woody        887.5G  1000.0G  1500.0G        N/A     262K   5,000K   7,500K        N/A    
======================
=== GPU utilization ==
gpu_name, gpu_bus_id, pid, gpu_utilization [%], mem_utilization [%], max_memory_usage [MiB], time [ms]
NVIDIA A100-SXM4-40GB, 00000000:01:00.0, 438798, 23 %, 4 %, 9728 MiB, 58053673 ms
