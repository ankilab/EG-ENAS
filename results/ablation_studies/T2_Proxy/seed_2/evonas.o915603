### Starting TaskPrologue of job 915603 on tg095 at Sun 20 Oct 2024 07:12:30 PM CEST
Running on cores 96-127 with governor ondemand
Sun Oct 20 19:12:30 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 560.28.03              Driver Version: 560.28.03      CUDA Version: 12.6     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-40GB          On  |   00000000:C1:00.0 Off |                    0 |
| N/A   34C    P0             51W /  400W |       1MiB /  40960MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
### Finished TaskPrologue

Loading python/pytorch-1.13py3.10
  Loading requirement: cuda/11.6.1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/predictions
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/datasets
rsync -ar --exclude='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/datasets/
cp -R evaluation/main.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/main.py
cp -R anki_lab_submission/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2; python3 main.py --mode T2 --select_augment Proxy
ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| unique_values: array([0.02745098, 0.05098039, 0.05490196, 0.05882353, 0.0627451 ,
                          0.07058824, 0.07450981, 0.07843138, 0.08627451, 0.09019608,
                          0.09411765, 0.09803922, 0.10196079, 0.10980392, 0.11372549,
                          0.11764706, 0.12156863, 0.1254902 , 0.12941177, 0.13333334,
                          0.13725491, 0.14117648, 0.14509805, 0.14901961, 0.15294118,
                          0.15686275, 0.16078432, 0.16470589, 0.16862746, 0.17254902,
                          0.1764706 , 0.18039216, 0.18431373, 0.1882353 , 0.19215687,
                          0.19607843, 0.2       , 0.20392157, 0.21176471, 0.21568628,
                          0.21960784, 0.22352941, 0.22745098, 0.23137255, 0.23529412,
                          0.23921569, 0.24313726, 0.24705882, 0.2509804 , 0.25490198,
                          0.25882354, 0.2627451 , 0.26666668, 0.27058825, 0.27450982,
                          0.2784314 , 0.2901961 , 0.29411766, 0.29803923, 0.3019608 ,
                          0.3137255 , 0.31764707, 0.3254902 , 0.32941177, 0.33333334,
                          0.3372549 , 0.34117648, 0.34509805, 0.34901962, 0.3529412 ,
                          0.35686275, 0.36078432, 0.3647059 , 0.36862746, 0.37254903,
                          0.3764706 , 0.38039216, 0.38431373, 0.3882353 , 0.39215687,
                          0.39607844, 0.40392157, 0.40784314, 0.4117647 , 0.41568628,
                          0.41960785, 0.42352942, 0.43137255, 0.43529412, 0.4392157 ,
                          0.44313726, 0.44705883, 0.4509804 , 0.45490196, 0.45882353,
                          0.4627451 , 0.46666667, 0.47058824, 0.4745098 , 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7372549 ,
                          0.7411765 , 0.74509805, 0.7490196 , 0.7529412 , 0.75686276,
                          0.7607843 , 0.7647059 , 0.76862746, 0.77254903, 0.7764706 ,
                          0.78039217, 0.78431374, 0.7882353 , 0.7921569 , 0.79607844,
                          0.8       , 0.8039216 , 0.80784315, 0.8117647 , 0.8156863 ,
                          0.8235294 , 0.83137256, 0.8352941 , 0.8392157 , 0.84313726,
                          0.85882354, 0.8666667 , 0.87058824, 0.8745098 , 0.8784314 ,
                          0.88235295, 0.8980392 , 0.90588236, 0.9098039 , 0.9137255 ,
                          0.91764706, 0.92156863, 0.9254902 , 0.92941177, 0.93333334,
                          0.9372549 , 0.9411765 , 0.94509804, 0.95686275, 0.9607843 ],
                         dtype=float32)
ic| C: 3
ic| H: 16
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning: The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.
  warnings.warn(
ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f629ae87ee0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f629ae87fa0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f629ae84f70>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f629ae87fd0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f629ae85090>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f629ae85840>,
                 ToTensor(),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f629ae852a0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['spiked_bulldog',
                  'solid_bat',
                  'xanthic_squid',
                  'outstanding_junglefowl',
                  'icy_salamander',
                  'pastoral_rooster',
                  'hairy_goose',
                  'papaya_worm',
                  'manipulative_marmot',
                  'pompous_kingfisher']
ic| params: [16.0, 24, 2.599999999999998, 21, 8]
ic| params: [32.0, 88, 2.3499999999999988, 17, 8]
ic| params: [56.0, 120, 2.6999999999999975, 18, 8]
ic| params: [48.0, 72, 2.849999999999997, 12, 8]
ic| params: [32.0, 72, 2.549999999999998, 22, 8]
ic| params: [48.0, 72, 2.899999999999997, 10, 8]
ic| params: [24.0, 56, 2.299999999999999, 10, 8]
ic| params: [56.0, 80, 2.299999999999999, 22, 8]
ic| params: [56.0, 80, 2.599999999999998, 20, 8]
ic| params: [64.0, 72, 2.299999999999999, 20, 8]
ic| individuals: ['spiked_bulldog',
                  'solid_bat',
                  'xanthic_squid',
                  'outstanding_junglefowl',
                  'icy_salamander',
                  'pastoral_rooster',
                  'hairy_goose',
                  'papaya_worm',
                  'manipulative_marmot',
                  'pompous_kingfisher']
ic| params_dict: {'hairy_goose': [24.0, 56, 2.299999999999999, 10, 8],
                  'icy_salamander': [32.0, 72, 2.549999999999998, 22, 8],
                  'manipulative_marmot': [56.0, 80, 2.599999999999998, 20, 8],
                  'outstanding_junglefowl': [48.0, 72, 2.849999999999997, 12, 8],
                  'papaya_worm': [56.0, 80, 2.299999999999999, 22, 8],
                  'pastoral_rooster': [48.0, 72, 2.899999999999997, 10, 8],
                  'pompous_kingfisher': [64.0, 72, 2.299999999999999, 20, 8],
                  'solid_bat': [32.0, 88, 2.3499999999999988, 17, 8],
                  'spiked_bulldog': [16.0, 24, 2.599999999999998, 21, 8],
                  'xanthic_squid': [56.0, 120, 2.6999999999999975, 18, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f629ae87ee0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f629ae87fa0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f629ae84f70>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f629ae87fd0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f629ae85090>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f629ae85840>,
                                                ToTensor(),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f629ae852a0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
ic| f"best_augmentation: {best_aug}": 'best_augmentation: 4'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41265790976
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 107642.50639891624
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 56, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
Mode: T2
===========================================================================
=============    Your Unseen Data 2024 Submission is running     =============
===========================================================================
========== Dataset    in16    =============================================
  Metadata:
   - input_shape         : [148700, 3, 16, 16]
   - codename            : in16
   - benchmark           : 46.38
   - num_classes         : 120
   - time_remaining      : 107999.47173666954

=== Processing Data ===
  Allotted compute time remaining: ~29h,59m,59s

=== Performing NAS ===
  Allotted compute time remaining: ~29h,54m,2s
None
Created model:  mottled_mantis
Created model:  eggplant_owl
Created model:  light_panther
Created model:  cerulean_python
Created model:  blond_lori
Created model:  sturdy_ladybug
Created model:  exuberant_gaur
Created model:  ruby_tarsier
Created model:  rose_swine
Created model:  tangible_pelican
Created model:  perfect_kestrel
Created model:  winged_cuttlefish
Created model:  chirpy_goose
Created model:  large_aardwolf
Created model:  aromatic_poodle
Created model:  chestnut_parakeet
Created model:  radical_myna
Created model:  interesting_manul
Created model:  hairy_ferret
Created model:  charcoal_guillemot
[2K[2Karomatic_poodle
[31m[EVAL] Best accuracy:17.233333587646484[0m
[2K[2Kblond_lori
[31m[EVAL] Best accuracy:16.066665649414062[0m
[2K[2Kcerulean_python
[31m[EVAL] Best accuracy:10.09999942779541[0m
[2K[2Kcharcoal_guillemot
[31m[EVAL] Best accuracy:9.366666793823242[0m
[2K[2Kchestnut_parakeet
[31m[EVAL] Best accuracy:16.066665649414062[0m
[2K[2Kchirpy_goose
[31m[EVAL] Best accuracy:15.066666603088379[0m
[2K[2Keggplant_owl
[31m[EVAL] Best accuracy:12.833333015441895[0m
[2K[2Kexuberant_gaur
[31m[EVAL] Best accuracy:10.566666603088379[0m
[2K[2Khairy_ferret
[31m[EVAL] Best accuracy:16.33333396911621[0m
[2K[2Kinteresting_manul
[31m[EVAL] Best accuracy:12.300000190734863[0m
[2K[2Klarge_aardwolf
[31m[EVAL] Best accuracy:19.433332443237305[0m
[2K[2Klight_panther
[31m[EVAL] Best accuracy:16.933332443237305[0m
[2K[2Kmottled_mantis
[31m[EVAL] Best accuracy:13.933333396911621[0m
[2K[2Kperfect_kestrel
[31m[EVAL] Best accuracy:13.366666793823242[0m
[2K[2Kradical_myna
[31m[EVAL] Best accuracy:12.866666793823242[0m
[2K[2Krose_swine
[31m[EVAL] Best accuracy:21.399999618530273[0m
[2K[2Kruby_tarsier
[31m[EVAL] Best accuracy:9.199999809265137[0m
[2K[2Ksturdy_ladybug
[31m[EVAL] Best accuracy:11.866666793823242[0m
[2K[2Ktangible_pelican
[31m[EVAL] Best accuracy:20.299999237060547[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 56, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 56, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 56, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7953.467494249344
ic| self.metadata["time_remaining"]: 107642.50639891624
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 56, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 56, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 56, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 56, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 21, 'W0': 56, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwinged_cuttlefish
[31m[EVAL] Best accuracy:9.800000190734863[0m
['mottled_mantis', 'eggplant_owl', 'light_panther', 'cerulean_python', 'blond_lori', 'sturdy_ladybug', 'exuberant_gaur', 'ruby_tarsier', 'rose_swine', 'tangible_pelican', 'perfect_kestrel', 'winged_cuttlefish', 'chirpy_goose', 'large_aardwolf', 'aromatic_poodle', 'chestnut_parakeet', 'radical_myna', 'interesting_manul', 'hairy_ferret', 'charcoal_guillemot', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 21.4
Child: [20.0, 120, 2.45, 11]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.02083334476200226
[np.int64(16), 112, 2.45, 11]
Child: [np.int64(16), 112, 2.45, 11]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.060897447326104824
[np.int64(16), 104, 2.5, 12]
Child: [28.0, 112, 2.25, 9]
Old_chrom: [32.0, 112, 2.3000000000000003, 10]
Diff: 0.09932438244955971
[20.0, 104, 2.2, 8]
Child: [24.0, 104, 2.3000000000000003, 11]
Old_chrom: [32.0, 112, 2.3000000000000003, 10]
Diff: 0.07875457875457875
[16.0, 96, 2.2500000000000004, 10]
Child: [24.0, 104, 2.6500000000000004, 15]
Old_chrom: [28.0, 104, 2.7, 15]
Diff: 0.08146723959241657
[16.0, 96, 2.7, 16]
Child: [16.0, 96, 2.7, 16]
Old_chrom: [28.0, 104, 2.7, 15]
Diff: 0.0995879120879121
[16.0, 96, 2.7, 17]
Child: [24.0, 120, 2.3999999999999986, 10]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.07849104911622609
[32.0, 120, 2.3499999999999988, 11]
Child: [32.0, 120, 2.3499999999999988, 11]
Old_chrom: [32.0, 112, 2.3000000000000003, 10]
Diff: 0.09772181834699453
[24.0, 128, 2.3499999999999988, 11]
Child: [40.0, 104, 2.899999999999997, 19]
Old_chrom: [32.0, 88, 2.899999999999997, 19]
Diff: 0.08012820512820512
[48.0, 96, 2.9499999999999966, 20]
Child: [16.0, 88, 2.1999999999999993, 10]
Old_chrom: [20.0, 104, 2.2, 8]
Diff: 0.09500916559044681
[np.int64(16), 88, 2.249999999999999, 11]
Created model:  bald_quoll
Created model:  brilliant_caracal
Created model:  calm_caterpillar
Created model:  careful_moth
Created model:  competent_elk
Created model:  conscious_nyala
Created model:  curly_donkey
Created model:  ingenious_bumblebee
Created model:  jolly_beetle
Created model:  judicious_lemur
Created model:  loutish_moose
Created model:  lovely_frigatebird
Created model:  mahogany_sturgeon
Created model:  massive_sloth
Created model:  monumental_slug
Created model:  nonchalant_bettong
Created model:  optimal_badger
Created model:  scarlet_gerbil
Created model:  succinct_adder
Created model:  vague_coua
[2K[2Kbald_quoll
[31m[EVAL] Best accuracy:20.266666412353516[0m
[2K[2Kbrilliant_caracal
[31m[EVAL] Best accuracy:19.299999237060547[0m
[2K[2Kcalm_caterpillar
[31m[EVAL] Best accuracy:19.433332443237305[0m
[2K[2Kcareful_moth
[31m[EVAL] Best accuracy:18.899999618530273[0m
[2K[2Kcompetent_elk
[31m[EVAL] Best accuracy:20.433332443237305[0m
[2K[2Kconscious_nyala
[31m[EVAL] Best accuracy:17.633333206176758[0m
[2K[2Kcurly_donkey
[31m[EVAL] Best accuracy:17.600000381469727[0m
[2K[2Kingenious_bumblebee
[31m[EVAL] Best accuracy:18.5[0m
[2K[2Kjolly_beetle
[31m[EVAL] Best accuracy:18.866666793823242[0m
[2K[2Kjudicious_lemur
[31m[EVAL] Best accuracy:16.399999618530273[0m
[2K[2Kloutish_moose
[31m[EVAL] Best accuracy:21.53333282470703[0m
[2K[2Klovely_frigatebird
[31m[EVAL] Best accuracy:21.633333206176758[0m
[2K[2Kmahogany_sturgeon
[31m[EVAL] Best accuracy:20.16666603088379[0m
[2K[2Kmassive_sloth
[31m[EVAL] Best accuracy:19.733333587646484[0m
[2K[2Kmonumental_slug
[31m[EVAL] Best accuracy:18.733333587646484[0m
[2K[2Knonchalant_bettong
[31m[EVAL] Best accuracy:18.96666717529297[0m
[2K[2Koptimal_badger
[31m[EVAL] Best accuracy:16.733333587646484[0m
[2K[2Kscarlet_gerbil
[31m[EVAL] Best accuracy:17.866666793823242[0m
[2K[2Ksuccinct_adder
[31m[EVAL] Best accuracy:17.03333282470703[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 15453.55320763588
ic| self.metadata["time_remaining"]: 107642.50639891624
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 88, 'WA': 32.0, 'WM': 2.1999999999999993, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvague_coua
[31m[EVAL] Best accuracy:14.266666412353516[0m
['parents.csv', 'bald_quoll', 'brilliant_caracal', 'calm_caterpillar', 'careful_moth', 'competent_elk', 'conscious_nyala', 'curly_donkey', 'ingenious_bumblebee', 'jolly_beetle', 'judicious_lemur', 'loutish_moose', 'lovely_frigatebird', 'mahogany_sturgeon', 'massive_sloth', 'monumental_slug', 'nonchalant_bettong', 'optimal_badger', 'scarlet_gerbil', 'succinct_adder', 'vague_coua', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 21.63
Child: [22.0, 120, 2.3000000000000003, 10]
Old_chrom: [32.0, 112, 2.3000000000000003, 10]
Diff: 0.07131410256410256
[np.int64(16), 128, 2.35, 10]
Child: [np.int64(16), 128, 2.35, 10]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.0990954447206209
[np.int64(16), 136, 2.4, 10]
Child: [28.0, 120, 2.35, 11]
Old_chrom: [24.0, 128, 2.3499999999999988, 11]
Diff: 0.040064112461620185
[28.0, 120, 2.35, 10]
Child: [28.0, 120, 2.35, 10]
Old_chrom: [24.0, 128, 2.3499999999999988, 11]
Diff: 0.05792125531876304
[28.0, 120, 2.35, 11]
Child: [28.0, 120, 2.35, 11]
Old_chrom: [24.0, 128, 2.3499999999999988, 11]
Diff: 0.040064112461620185
[28.0, 128, 2.4, 11]
Child: [28.0, 128, 2.4, 11]
Old_chrom: [24.0, 128, 2.3499999999999988, 11]
Diff: 0.08146723959241739
[28.0, 136, 2.4, 11]
Child: [28.0, 112, 2.4000000000000004, 11]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.08035715428581178
[20.0, 104, 2.4000000000000004, 12]
Child: [22.0, 112, 2.15, 8]
Old_chrom: [24.0, 120, 2.0999999999999996, 8]
Diff: 0.09028134215651941
[22.0, 120, 2.15, 9]
Child: [28.0, 120, 2.2, 9]
Old_chrom: [20.0, 104, 2.2, 8]
Diff: 0.09798534798534797
[36.0, 128, 2.1500000000000004, 10]
Child: [28.0, 104, 2.3000000000000003, 10]
Old_chrom: [32.0, 112, 2.3000000000000003, 10]
Diff: 0.04006410256410256
[36.0, 112, 2.2500000000000004, 9]
Child: [36.0, 112, 2.2500000000000004, 9]
Old_chrom: [32.0, 112, 2.3000000000000003, 10]
Diff: 0.09932438244955943
[36.0, 104, 2.3000000000000003, 8]
Child: [26.0, 112, 2.25, 9]
Old_chrom: [24.0, 128, 2.25, 10]
Diff: 0.06673534798534798
[26.0, 104, 2.2, 10]
Child: [26.0, 104, 2.2, 10]
Old_chrom: [20.0, 104, 2.2, 8]
Diff: 0.06696428571428571
[34.0, 96, 2.1500000000000004, 10]
Child: [34.0, 96, 2.1500000000000004, 10]
Old_chrom: [36.0, 96, 2.15, 10]
Diff: 0.01041667238100113
[34.0, 88, 2.2, 11]
Child: [34.0, 88, 2.2, 11]
Old_chrom: [32.0, 88, 2.1999999999999993, 12]
Diff: 0.02827381760509882
[42.0, 88, 2.2, 10]
Child: [42.0, 88, 2.2, 10]
Old_chrom: [32.0, 88, 2.1999999999999993, 12]
Diff: 0.08779762712890835
[50.0, 88, 2.1500000000000004, 9]
Child: [26.0, 96, 2.35, 10]
Old_chrom: [28.0, 104, 2.35, 12]
Diff: 0.0653617216117216
[34.0, 96, 2.3000000000000003, 10]
Child: [34.0, 96, 2.3000000000000003, 10]
Old_chrom: [32.0, 112, 2.3000000000000003, 10]
Diff: 0.04887820512820513
[42.0, 88, 2.35, 11]
Child: [32.0, 104, 2.4000000000000004, 11]
Old_chrom: [32.0, 88, 2.4499999999999984, 11]
Diff: 0.09909544472062062
[32.0, 96, 2.3500000000000005, 11]
Child: [24.0, 120, 2.3499999999999988, 11]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.08574929257125442
[32.0, 112, 2.3499999999999988, 11]
Child: [20.0, 104, 2.3499999999999988, 11]
Old_chrom: [24.0, 128, 2.3499999999999988, 11]
Diff: 0.07852564102564102
[28.0, 112, 2.299999999999999, 11]
Child: [28.0, 112, 2.299999999999999, 11]
Old_chrom: [32.0, 112, 2.3000000000000003, 10]
Diff: 0.03869048608799382
[28.0, 120, 2.249999999999999, 12]
Child: [28.0, 120, 2.249999999999999, 12]
Old_chrom: [24.0, 128, 2.25, 10]
Diff: 0.07577839635967756
[28.0, 128, 2.1999999999999993, 12]
Child: [32.0, 128, 2.3499999999999988, 10]
Old_chrom: [24.0, 128, 2.3499999999999988, 11]
Diff: 0.05952380952380952
[40.0, 120, 2.3499999999999988, 10]
Child: [40.0, 120, 2.3499999999999988, 10]
Old_chrom: [32.0, 112, 2.3499999999999988, 11]
Diff: 0.07875457875457875
[40.0, 120, 2.3999999999999986, 11]
Child: [24.0, 88, 2.4499999999999984, 11]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.07692307692307693
[24.0, 96, 2.4999999999999982, 11]
Child: [24.0, 96, 2.4999999999999982, 11]
Old_chrom: [16.0, 104, 2.5, 12]
Diff: 0.07875459018324768
[24.0, 104, 2.4999999999999982, 12]
Child: [24.0, 104, 2.4999999999999982, 12]
Old_chrom: [16.0, 104, 2.5, 12]
Diff: 0.04166667809533559
[32.0, 112, 2.4499999999999984, 13]
Child: [32.0, 112, 2.4499999999999984, 13]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.0966117216117216
[24.0, 120, 2.4999999999999982, 12]
Child: [24.0, 104, 2.2, 8]
Old_chrom: [20.0, 104, 2.2, 8]
Diff: 0.020833333333333332
[24.0, 112, 2.2, 9]
Child: [24.0, 112, 2.2, 9]
Old_chrom: [20.0, 104, 2.2, 8]
Diff: 0.05792124542124542
[16.0, 112, 2.2, 10]
Child: [16.0, 112, 2.2, 10]
Old_chrom: [20.0, 104, 2.2, 8]
Diff: 0.07577838827838827
[24.0, 112, 2.25, 9]
Child: [24.0, 112, 2.25, 9]
Old_chrom: [16.0, 96, 2.2500000000000004, 10]
Diff: 0.09798535369968245
[16.0, 104, 2.25, 8]
Child: [24.0, 120, 2.3000000000000003, 10]
Old_chrom: [24.0, 128, 2.3499999999999988, 11]
Diff: 0.09772181834699453
[32.0, 128, 2.35, 10]
Child: [24.0, 88, 2.4499999999999984, 8]
Old_chrom: [32.0, 88, 2.4499999999999984, 11]
Diff: 0.09523809523809523
[16.0, 80, 2.4499999999999984, 9]
Child: [20.0, 104, 2.3000000000000003, 10]
Old_chrom: [32.0, 112, 2.3000000000000003, 10]
Diff: 0.08173076923076923
[np.int64(16), 104, 2.35, 11]
Child: [20.0, 104, 2.4499999999999984, 11]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.05929487179487179
[28.0, 96, 2.4499999999999984, 12]
Child: [28.0, 96, 2.4499999999999984, 12]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.09638278388278387
[20.0, 88, 2.4999999999999982, 13]
Child: [32.0, 88, 2.4499999999999984, 10]
Old_chrom: [32.0, 88, 2.4499999999999984, 11]
Diff: 0.017857142857142856
[32.0, 88, 2.4499999999999984, 11]
Child: [32.0, 88, 2.4499999999999984, 11]
Old_chrom: [32.0, 88, 2.4499999999999984, 11]
Diff: 0.0
[40.0, 80, 2.4499999999999984, 12]
Child: [40.0, 80, 2.4499999999999984, 12]
Old_chrom: [32.0, 88, 2.4499999999999984, 11]
Diff: 0.07875457875457875
[32.0, 72, 2.4499999999999984, 11]
Child: [32.0, 72, 2.4499999999999984, 11]
Old_chrom: [32.0, 88, 2.4499999999999984, 11]
Diff: 0.038461538461538464
[32.0, 80, 2.4999999999999982, 12]
Child: [32.0, 80, 2.4999999999999982, 12]
Old_chrom: [32.0, 88, 2.4499999999999984, 11]
Diff: 0.09772181834699534
[24.0, 88, 2.4999999999999982, 13]
Created model:  alluring_spider
Created model:  belligerent_gaur
Created model:  belligerent_ladybug
Created model:  benign_seahorse
Created model:  cinnamon_kakapo
Created model:  curly_dodo
Created model:  didactic_tody
Created model:  divergent_dragon
Created model:  economic_ringtail
Created model:  enchanted_tuna
Created model:  flawless_duck
Created model:  logical_lori
Created model:  opalescent_eagle
Created model:  platinum_petrel
Created model:  quaint_viper
Created model:  quizzical_skunk
Created model:  sexy_dormouse
Created model:  terrestrial_snail
Created model:  truthful_tortoise
Created model:  zealous_oriole
[2K[2Kalluring_spider
[31m[EVAL] Best accuracy:20.933332443237305[0m
[2K[2Kbelligerent_gaur
[31m[EVAL] Best accuracy:22.16666603088379[0m
[2K[2Kbelligerent_ladybug
[31m[EVAL] Best accuracy:20.933332443237305[0m
[2K[2Kbenign_seahorse
[31m[EVAL] Best accuracy:20.100000381469727[0m
[2K[2Kcinnamon_kakapo
[31m[EVAL] Best accuracy:20.83333396911621[0m
[2K[2Kcurly_dodo
[31m[EVAL] Best accuracy:21.766666412353516[0m
[2K[2Kdidactic_tody
[31m[EVAL] Best accuracy:19.46666717529297[0m
[2K[2Kdivergent_dragon
[31m[EVAL] Best accuracy:18.53333282470703[0m
[2K[2Keconomic_ringtail
[31m[EVAL] Best accuracy:18.133333206176758[0m
[2K[2Kenchanted_tuna
[31m[EVAL] Best accuracy:18.899999618530273[0m
[2K[2Kflawless_duck
[31m[EVAL] Best accuracy:19.53333282470703[0m
[2K[2Klogical_lori
[31m[EVAL] Best accuracy:20.69999885559082[0m
[2K[2Kopalescent_eagle
[31m[EVAL] Best accuracy:19.633333206176758[0m
[2K[2Kplatinum_petrel
[31m[EVAL] Best accuracy:20.066665649414062[0m
[2K[2Kquaint_viper
[31m[EVAL] Best accuracy:19.566665649414062[0m
[2K[2Kquizzical_skunk
[31m[EVAL] Best accuracy:21.399999618530273[0m
[2K[2Ksexy_dormouse
[31m[EVAL] Best accuracy:18.66666603088379[0m
[2K[2Kterrestrial_snail
[31m[EVAL] Best accuracy:19.266666412353516[0m
[2K[2Ktruthful_tortoise
[31m[EVAL] Best accuracy:18.03333282470703[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 88, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 22593.670994758606
ic| self.metadata["time_remaining"]: 107642.50639891624
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 46.38,
               'codename': 'in16',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_2/tests_in16_20_10_2024_19_19/Generation_3/zealous_oriole',
               'input_shape': [148700, 3, 16, 16],
               'mode': 'NAS',
               'num_classes': 120,
               'test_type': 'T2_Proxy/seed_2',
               'time_remaining': 85048.15324044228,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| unique_values: array([0., 1.], dtype=float32)
ic| C: 20
ic| H: 20
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f61a7aec940>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f61a7aefd30>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f61a7aed090>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f61a7aedae0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f61a700bb20>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f61a7aed180>,
                 ToTensor(),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f61a7aee230>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['granite_numbat',
                  'utopian_dragonfly',
                  'carrot_hedgehog',
                  'tireless_tench',
                  'pistachio_llama',
                  'towering_jaguar',
                  'solid_serval',
                  'rose_tuna',
                  'upbeat_chihuahua',
                  'precious_potoo']
ic| params: [40.0, 112, 2.599999999999998, 8, 8]
ic| params: [24.0, 120, 2.4999999999999982, 15, 8]
ic| params: [56.0, 80, 2.4999999999999982, 9, 8]
ic| params: [32.0, 56, 2.4999999999999982, 18, 8]
ic| params: [64.0, 112, 2.849999999999997, 18, 8]
ic| params: [48.0, 120, 2.249999999999999, 20, 8]
ic| params: [16.0, 40, 2.7499999999999973, 16, 8]
ic| params: [32.0, 72, 2.1999999999999993, 9, 8]
ic| params: [32.0, 56, 2.1499999999999995, 13, 8]
ic| params: [24.0, 72, 2.7499999999999973, 21, 8]
ic| individuals: ['granite_numbat',
                  'utopian_dragonfly',
                  'carrot_hedgehog',
                  'tireless_tench',
                  'pistachio_llama',
                  'towering_jaguar',
                  'solid_serval',
                  'rose_tuna',
                  'upbeat_chihuahua',
                  'precious_potoo']
ic| params_dict: {'carrot_hedgehog': [56.0, 80, 2.4999999999999982, 9, 8],
                  'granite_numbat': [40.0, 112, 2.599999999999998, 8, 8],
                  'pistachio_llama': [64.0, 112, 2.849999999999997, 18, 8],
                  'precious_potoo': [24.0, 72, 2.7499999999999973, 21, 8],
                  'rose_tuna': [32.0, 72, 2.1999999999999993, 9, 8],
                  'solid_serval': [16.0, 40, 2.7499999999999973, 16, 8],
                  'tireless_tench': [32.0, 56, 2.4999999999999982, 18, 8],
                  'towering_jaguar': [48.0, 120, 2.249999999999999, 20, 8],
                  'upbeat_chihuahua': [32.0, 56, 2.1499999999999995, 13, 8],
                  'utopian_dragonfly': [24.0, 120, 2.4999999999999982, 15, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a7aec940>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a7aefd30>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a7aed090>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a7aedae0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a700bb20>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a7aed180>,
                                                ToTensor(),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a7aee230>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 13'
ic| f"selected transform {train_transform}": ('selected transform [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], '
                                              'pad_if_needed=False, fill=0, padding_mode=constant), '
                                              'RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)]')
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41142059008
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 81923.24131131172
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 88, 'WA': 64.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kzealous_oriole
[31m[EVAL] Best accuracy:19.600000381469727[0m
['parents.csv', 'alluring_spider', 'belligerent_gaur', 'belligerent_ladybug', 'benign_seahorse', 'cinnamon_kakapo', 'curly_dodo', 'didactic_tody', 'divergent_dragon', 'economic_ringtail', 'enchanted_tuna', 'flawless_duck', 'logical_lori', 'opalescent_eagle', 'platinum_petrel', 'quaint_viper', 'quizzical_skunk', 'sexy_dormouse', 'terrestrial_snail', 'truthful_tortoise', 'zealous_oriole', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 22.17
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_2/tests_in16_20_10_2024_19_19/Generation_3/belligerent_gaur/config.yaml

=== Training ===
  Allotted compute time remaining: ~23h,37m,28s
Early stopping at epoch 47
[31m[EVAL] Best accuracy:38.0[0m

=== Predicting ===
  Allotted compute time remaining: ~22h,48m,50s

========== Dataset   Volga    =============================================
  Metadata:
   - input_shape         : [50000, 20, 20, 20]
   - codename            : Volga
   - benchmark           : 71.35
   - num_classes         : 7
   - time_remaining      : 82127.34303498268

=== Processing Data ===
  Allotted compute time remaining: ~22h,48m,47s

=== Performing NAS ===
  Allotted compute time remaining: ~22h,45m,23s
spawn
Created model:  light_seal
Created model:  slim_oryx
Created model:  translucent_bulldog
Created model:  didactic_whippet
Created model:  fabulous_firefly
Created model:  gainful_echidna
Created model:  splendid_slug
Created model:  impressive_malamute
Created model:  unyielding_stoat
Created model:  monumental_silkworm
Created model:  daffy_warthog
Created model:  translucent_collie
Created model:  laughing_angelfish
Created model:  discreet_roadrunner
Created model:  polite_beagle
Created model:  astonishing_zebra
Created model:  mysterious_bumblebee
Created model:  strict_iguana
Created model:  capable_caiman
Created model:  amber_fennec
[2K[2Kamber_fennec
[31m[EVAL] Best accuracy:47.56999969482422[0m
[2K[2Kastonishing_zebra
[31m[EVAL] Best accuracy:52.6099967956543[0m
[2K[2Kcapable_caiman
[31m[EVAL] Best accuracy:63.529998779296875[0m
[2K[2Kdaffy_warthog
[31m[EVAL] Best accuracy:61.519996643066406[0m
[2K[2Kdidactic_whippet
[31m[EVAL] Best accuracy:59.459999084472656[0m
[2K[2Kdiscreet_roadrunner
[31m[EVAL] Best accuracy:59.43000030517578[0m
[2K[2Kfabulous_firefly
[31m[EVAL] Best accuracy:58.78999710083008[0m
[2K[2Kgainful_echidna
[31m[EVAL] Best accuracy:55.0[0m
[2K[2Kimpressive_malamute
[31m[EVAL] Best accuracy:47.30999755859375[0m
[2K[2Klaughing_angelfish
[31m[EVAL] Best accuracy:64.79000091552734[0m
[2K[2Klight_seal
[31m[EVAL] Best accuracy:62.689998626708984[0m
[2K[2Kmonumental_silkworm
[31m[EVAL] Best accuracy:65.97000122070312[0m
[2K[2Kmysterious_bumblebee
[31m[EVAL] Best accuracy:59.19999694824219[0m
[2K[2Kpolite_beagle
[31m[EVAL] Best accuracy:53.27000045776367[0m
[2K[2Kslim_oryx
[31m[EVAL] Best accuracy:32.22999954223633[0m
[2K[2Ksplendid_slug
[31m[EVAL] Best accuracy:61.369998931884766[0m
[2K[2Kstrict_iguana
[31m[EVAL] Best accuracy:57.0099983215332[0m
[2K[2Ktranslucent_bulldog
[31m[EVAL] Best accuracy:65.47000122070312[0m
[2K[2Ktranslucent_collie
[31m[EVAL] Best accuracy:59.38999938964844[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 88, 'WA': 64.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 88, 'WA': 64.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 88, 'WA': 64.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2765.4727714061737
ic| self.metadata["time_remaining"]: 81923.24131131172
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 88, 'WA': 64.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 88, 'WA': 64.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 88, 'WA': 64.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 88, 'WA': 64.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 88, 'WA': 64.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 56, 'WA': 24.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kunyielding_stoat
[31m[EVAL] Best accuracy:54.709999084472656[0m
['light_seal', 'slim_oryx', 'translucent_bulldog', 'didactic_whippet', 'fabulous_firefly', 'gainful_echidna', 'splendid_slug', 'impressive_malamute', 'unyielding_stoat', 'monumental_silkworm', 'daffy_warthog', 'translucent_collie', 'laughing_angelfish', 'discreet_roadrunner', 'polite_beagle', 'astonishing_zebra', 'mysterious_bumblebee', 'strict_iguana', 'capable_caiman', 'amber_fennec', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 65.97
Child: [20.0, 112, 2.6500000000000004, 9]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.09932438244956104
[20.0, 104, 2.6000000000000005, 9]
Child: [20.0, 112, 2.5500000000000003, 11]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.09932438244955807
[np.int64(16), 120, 2.5000000000000004, 10]
Child: [20.0, 104, 2.75, 13]
Old_chrom: [16.0, 88, 2.75, 12]
Diff: 0.07715201465201466
[28.0, 112, 2.8, 12]
Child: [24.0, 112, 2.5, 12]
Old_chrom: [np.int64(16), 120, 2.5000000000000004, 10]
Diff: 0.09661172732605608
[16.0, 104, 2.55, 11]
Child: [20.0, 88, 2.7, 13]
Old_chrom: [16.0, 88, 2.75, 12]
Diff: 0.09932438244955943
[28.0, 88, 2.75, 14]
Child: [24.0, 112, 2.6999999999999975, 8]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.060897435897435896
[16.0, 104, 2.6999999999999975, 8]
Child: [16.0, 104, 2.6999999999999975, 8]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.0
[np.int64(16), 96, 2.7499999999999973, np.int64(8)]
Child: [np.int64(16), 96, 2.7499999999999973, np.int64(8)]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.07986467548985247
[np.int64(16), 88, 2.7499999999999973, np.int64(8)]
Child: [np.int64(16), 88, 2.7499999999999973, np.int64(8)]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.0990954447206217
[np.int64(16), 96, 2.6999999999999975, np.int64(9)]
Child: [24.0, 112, 2.6999999999999975, 8]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.060897435897435896
[24.0, 112, 2.7499999999999973, 9]
Child: [16.0, 104, 2.6999999999999975, 15]
Old_chrom: [24.0, 112, 2.7, 14]
Diff: 0.07875459275178241
[16.0, 112, 2.7499999999999973, 16]
Child: [16.0, 112, 2.7499999999999973, 16]
Old_chrom: [24.0, 104, 2.7499999999999973, 18]
Diff: 0.0966117216117216
[24.0, 104, 2.799999999999997, 15]
Child: [24.0, 104, 2.6999999999999975, 8]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.041666666666666664
[16.0, 112, 2.6499999999999977, np.int64(8)]
Child: [16.0, 112, 2.6499999999999977, np.int64(8)]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.07986467548985247
[16.0, 104, 2.6499999999999977, np.int64(8)]
Child: [16.0, 104, 2.6499999999999977, np.int64(8)]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.06063390625908324
[16.0, 96, 2.6499999999999977, np.int64(8)]
Child: [16.0, 96, 2.6499999999999977, np.int64(8)]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.07986467548985247
[16.0, 96, 2.6499999999999977, np.int64(8)]
Child: [16.0, 96, 2.6499999999999977, np.int64(8)]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.07986467548985247
[24.0, 88, 2.6499999999999977, np.int64(8)]
Child: [24.0, 112, 2.599999999999998, 10]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.0
[24.0, 120, 2.599999999999998, 10]
Child: [24.0, 120, 2.599999999999998, 10]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.019230769230769232
[16.0, 120, 2.6499999999999977, 9]
Child: [24.0, 104, 2.7499999999999973, 10]
Old_chrom: [24.0, 112, 2.7499999999999973, 9]
Diff: 0.03708791208791209
[32.0, 112, 2.799999999999997, 9]
Child: [32.0, 112, 2.799999999999997, 9]
Old_chrom: [28.0, 112, 2.8, 12]
Diff: 0.07440477590196556
[24.0, 120, 2.849999999999997, 8]
Child: [24.0, 64, 2.799999999999997, 13]
Old_chrom: [16.0, 64, 2.799999999999997, 15]
Diff: 0.07738095238095238
[16.0, 56, 2.799999999999997, 14]
Child: [16.0, 56, 2.799999999999997, 14]
Old_chrom: [16.0, 64, 2.799999999999997, 15]
Diff: 0.03708791208791209
[np.int64(16), 64, 2.7499999999999973, 15]
Child: [np.int64(16), 64, 2.7499999999999973, 15]
Old_chrom: [16.0, 64, 2.799999999999997, 15]
Diff: 0.06063390625908324
[np.int64(16), 72, 2.7499999999999973, 16]
Child: [np.int64(16), 72, 2.7499999999999973, 16]
Old_chrom: [16.0, 64, 2.799999999999997, 15]
Diff: 0.09772181834699534
[np.int64(24), 72, 2.799999999999997, 15]
Child: [24.0, 104, 2.3499999999999988, 13]
Old_chrom: [24.0, 112, 2.3499999999999988, 13]
Diff: 0.019230769230769232
[32.0, 96, 2.299999999999999, 14]
Child: [24.0, 64, 2.799999999999997, 18]
Old_chrom: [16.0, 64, 2.799999999999997, 15]
Diff: 0.09523809523809523
[24.0, 56, 2.849999999999997, 17]
Created model:  able_ladybug
Created model:  accomplished_walrus
Created model:  amusing_donkey
Created model:  bulky_quetzal
Created model:  classy_tench
Created model:  electric_weasel
Created model:  encouraging_monkey
Created model:  fluorescent_panda
Created model:  ginger_jerboa
Created model:  heavy_perch
Created model:  hilarious_galago
Created model:  honored_mule
Created model:  just_taipan
Created model:  literate_crow
Created model:  loyal_eagle
Created model:  prophetic_wallaby
Created model:  resilient_beagle
Created model:  shiny_python
Created model:  smiling_wren
Created model:  smoky_cockle
[2K[2Kable_ladybug
[31m[EVAL] Best accuracy:65.91999816894531[0m
[2K[2Kaccomplished_walrus
[31m[EVAL] Best accuracy:68.70999908447266[0m
[2K[2Kamusing_donkey
[31m[EVAL] Best accuracy:66.20999908447266[0m
[2K[2Kbulky_quetzal
[31m[EVAL] Best accuracy:66.45999908447266[0m
[2K[2Kclassy_tench
[31m[EVAL] Best accuracy:67.04999542236328[0m
[2K[2Kelectric_weasel
[31m[EVAL] Best accuracy:60.57999801635742[0m
[2K[2Kencouraging_monkey
[31m[EVAL] Best accuracy:62.56999969482422[0m
[2K[2Kfluorescent_panda
[31m[EVAL] Best accuracy:63.63999938964844[0m
[2K[2Kginger_jerboa
[31m[EVAL] Best accuracy:65.13999938964844[0m
[2K[2Kheavy_perch
[31m[EVAL] Best accuracy:64.33000183105469[0m
[2K[2Khilarious_galago
[31m[EVAL] Best accuracy:62.93000030517578[0m
[2K[2Khonored_mule
[31m[EVAL] Best accuracy:66.26000213623047[0m
[2K[2Kjust_taipan
[31m[EVAL] Best accuracy:65.68999481201172[0m
[2K[2Kliterate_crow
[31m[EVAL] Best accuracy:63.54999923706055[0m
[2K[2Kloyal_eagle
[31m[EVAL] Best accuracy:67.29000091552734[0m
[2K[2Kprophetic_wallaby
[31m[EVAL] Best accuracy:62.459999084472656[0m
[2K[2Kresilient_beagle
[31m[EVAL] Best accuracy:64.86000061035156[0m
[2K[2Kshiny_python
[31m[EVAL] Best accuracy:60.459999084472656[0m
[2K[2Ksmiling_wren
[31m[EVAL] Best accuracy:59.71999740600586[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 56, 'WA': 24.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 56, 'WA': 24.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 56, 'WA': 24.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 5334.926174879074
ic| self.metadata["time_remaining"]: 81923.24131131172
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 56, 'WA': 24.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 56, 'WA': 24.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 56, 'WA': 24.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 56, 'WA': 24.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 56, 'WA': 24.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 104, 'WA': 24.0, 'WM': 2.8999999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Ksmoky_cockle
[31m[EVAL] Best accuracy:58.98999786376953[0m
['parents.csv', 'able_ladybug', 'accomplished_walrus', 'amusing_donkey', 'bulky_quetzal', 'classy_tench', 'electric_weasel', 'encouraging_monkey', 'fluorescent_panda', 'ginger_jerboa', 'heavy_perch', 'hilarious_galago', 'honored_mule', 'just_taipan', 'literate_crow', 'loyal_eagle', 'prophetic_wallaby', 'resilient_beagle', 'shiny_python', 'smiling_wren', 'smoky_cockle', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 68.71
Child: [16.0, 120, 2.6, 10]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.0608974486750762
[np.int64(16), 128, 2.6, 9]
Child: [np.int64(16), 128, 2.6, 9]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.09798536076298828
[np.int64(24), 128, 2.5500000000000003, 8]
Child: [16.0, 112, 2.5500000000000003, 11]
Old_chrom: [16.0, 120, 2.5000000000000004, 10]
Diff: 0.09772181834699534
[np.int64(16), 104, 2.5500000000000003, 10]
Child: [22.0, 120, 2.7, 11]
Old_chrom: [24.0, 112, 2.7, 14]
Diff: 0.08321886446886446
[22.0, 128, 2.7, 12]
Child: [20.0, 120, 2.6500000000000004, 10]
Old_chrom: [16.0, 120, 2.6499999999999977, 9]
Diff: 0.038690490187679845
[28.0, 120, 2.6500000000000004, 9]
Child: [28.0, 120, 2.6500000000000004, 9]
Old_chrom: [16.0, 120, 2.6499999999999977, 9]
Diff: 0.06250001399720366
[28.0, 120, 2.7, 8]
Child: [16.0, 112, 2.6, 10]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.04166667944430697
[16.0, 120, 2.65, 9]
Child: [16.0, 120, 2.65, 9]
Old_chrom: [16.0, 120, 2.6499999999999977, 9]
Diff: 1.2777640308626678e-08
[np.int64(16), 112, 2.6, 10]
Child: [np.int64(16), 112, 2.6, 10]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.04166667944430697
[np.int64(16), 120, 2.5500000000000003, 11]
Child: [np.int64(16), 120, 2.5500000000000003, 11]
Old_chrom: [16.0, 120, 2.5000000000000004, 10]
Diff: 0.07849104911622609
[np.int64(24), 120, 2.5500000000000003, 12]
Child: [np.int64(24), 120, 2.5500000000000003, 12]
Old_chrom: [16.0, 104, 2.55, 11]
Diff: 0.09798535369968245
[np.int64(16), 120, 2.5500000000000003, 11]
Child: [22.0, 120, 2.75, 11]
Old_chrom: [24.0, 112, 2.7499999999999973, 9]
Diff: 0.06536173560892526
[np.int64(16), 128, 2.75, 10]
Child: [np.int64(16), 128, 2.75, 10]
Old_chrom: [24.0, 112, 2.7499999999999973, 9]
Diff: 0.09798536198255164
[np.int64(16), 136, 2.8, 10]
Child: [20.0, 120, 2.7, 9]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.0771520286492183
[28.0, 128, 2.75, 9]
Child: [28.0, 128, 2.75, 9]
Old_chrom: [24.0, 112, 2.7499999999999973, 9]
Diff: 0.05929488579207545
[36.0, 128, 2.7, 10]
Child: [36.0, 128, 2.7, 10]
Old_chrom: [28.0, 120, 2.7, 8]
Diff: 0.0966117216117216
[28.0, 136, 2.6500000000000004, 10]
Child: [22.0, 112, 2.7, 12]
Old_chrom: [24.0, 112, 2.7, 14]
Diff: 0.04613095238095238
[30.0, 104, 2.6500000000000004, 13]
Child: [20.0, 112, 2.6500000000000004, 10]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.0814672395924182
[28.0, 112, 2.6500000000000004, 9]
Child: [26.0, 112, 2.8000000000000003, 11]
Old_chrom: [28.0, 112, 2.8, 12]
Diff: 0.028273815238143984
[26.0, 112, 2.8000000000000003, 11]
Child: [26.0, 112, 2.8000000000000003, 11]
Old_chrom: [28.0, 112, 2.8, 12]
Diff: 0.028273815238143984
[26.0, 112, 2.7500000000000004, 10]
Child: [26.0, 112, 2.7500000000000004, 10]
Old_chrom: [24.0, 112, 2.7499999999999973, 9]
Diff: 0.028273824642517424
[18.0, 104, 2.8000000000000003, 11]
Child: [18.0, 104, 2.8000000000000003, 11]
Old_chrom: [28.0, 112, 2.8, 12]
Diff: 0.08917125113557989
[np.int64(16), 112, 2.85, 12]
Child: [16.0, 120, 2.5000000000000004, 10]
Old_chrom: [16.0, 120, 2.5000000000000004, 10]
Diff: 0.0
[np.int64(16), 112, 2.5000000000000004, 11]
Child: [np.int64(16), 112, 2.5000000000000004, 11]
Old_chrom: [16.0, 120, 2.5000000000000004, 10]
Diff: 0.03708791208791209
[np.int64(16), 112, 2.4500000000000006, 12]
Child: [16.0, 120, 2.55, 11]
Old_chrom: [16.0, 120, 2.5000000000000004, 10]
Diff: 0.07849104911622583
[16.0, 112, 2.55, 12]
Child: [16.0, 112, 2.55, 12]
Old_chrom: [16.0, 104, 2.55, 11]
Diff: 0.03708791208791209
[16.0, 120, 2.55, 13]
Child: [16.0, 120, 2.55, 13]
Old_chrom: [16.0, 104, 2.55, 11]
Diff: 0.07417582417582418
[np.int64(16), 128, 2.55, 14]
Child: [np.int64(16), 128, 2.55, 14]
Old_chrom: [np.int64(16), 120, 2.5500000000000003, 11]
Diff: 0.07280220351653227
[np.int64(24), 120, 2.55, 13]
Child: [np.int64(24), 120, 2.55, 13]
Old_chrom: [24.0, 112, 2.5500000000000003, 16]
Diff: 0.07280220351653227
[np.int64(16), 120, 2.5, 12]
Child: [np.int64(16), 120, 2.5, 12]
Old_chrom: [16.0, 120, 2.5000000000000004, 10]
Diff: 0.035714291428620176
[np.int64(24), 112, 2.45, 12]
Child: [np.int64(24), 112, 2.45, 12]
Old_chrom: [np.int64(16), 112, 2.4500000000000006, 12]
Diff: 0.04166667238100113
[np.int64(16), 120, 2.4000000000000004, 13]
Child: [np.int64(16), 120, 2.4000000000000004, 13]
Old_chrom: [np.int64(16), 112, 2.4500000000000006, 12]
Diff: 0.09772181834699559
[np.int64(16), 128, 2.4000000000000004, 12]
Child: [16.0, 120, 2.8, 12]
Old_chrom: [28.0, 112, 2.8, 12]
Diff: 0.08173076923076923
[24.0, 128, 2.8499999999999996, 11]
Child: [24.0, 112, 2.5000000000000004, 10]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.08574929257125347
[32.0, 120, 2.4500000000000006, 10]
Child: [16.0, 120, 2.6499999999999977, 11]
Old_chrom: [16.0, 120, 2.6499999999999977, 9]
Diff: 0.03571428571428571
[24.0, 112, 2.599999999999998, 11]
Child: [24.0, 112, 2.599999999999998, 11]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.017857142857142856
[32.0, 120, 2.599999999999998, 11]
Child: [32.0, 120, 2.599999999999998, 11]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.07875457875457875
[24.0, 128, 2.599999999999998, 11]
Child: [24.0, 128, 2.599999999999998, 11]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.05631868131868132
[32.0, 120, 2.6499999999999977, 11]
Child: [32.0, 120, 2.6499999999999977, 11]
Old_chrom: [28.0, 136, 2.6500000000000004, 10]
Diff: 0.0771520286492183
[24.0, 128, 2.6499999999999977, 11]
Child: [24.0, 128, 2.6499999999999977, 11]
Old_chrom: [16.0, 120, 2.6499999999999977, 9]
Diff: 0.0966117216117216
[32.0, 128, 2.6499999999999977, 11]
Child: [28.0, 112, 2.6499999999999977, 9]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.09932438244955943
[36.0, 120, 2.599999999999998, 8]
Child: [24.0, 120, 2.6499999999999977, 9]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.09772181834699534
[16.0, 120, 2.6499999999999977, 10]
Child: [28.0, 104, 2.55, 12]
Old_chrom: [16.0, 104, 2.55, 11]
Diff: 0.08035714285714285
[20.0, 104, 2.5999999999999996, 13]
Child: [24.0, 112, 2.55, 11]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.07849104911622502
[32.0, 104, 2.5999999999999996, 10]
Child: [32.0, 104, 2.5999999999999996, 10]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.060897447326104824
[40.0, 112, 2.6499999999999995, 11]
Child: [40.0, 112, 2.6499999999999995, 11]
Old_chrom: [28.0, 112, 2.6500000000000004, 9]
Diff: 0.09821429379557502
[40.0, 112, 2.6499999999999995, 10]
Child: [24.0, 112, 2.8, 12]
Old_chrom: [28.0, 112, 2.8, 12]
Diff: 0.020833333333333332
[16.0, 104, 2.8499999999999996, 11]
Child: [16.0, 104, 2.8499999999999996, 11]
Old_chrom: [np.int64(16), 112, 2.85, 12]
Diff: 0.03708791780224655
[np.int64(16), 112, 2.8999999999999995, 11]
Child: [np.int64(16), 112, 2.8999999999999995, 11]
Old_chrom: [np.int64(16), 112, 2.85, 12]
Diff: 0.07849104911622583
[np.int64(24), 104, 2.8999999999999995, 10]
Created model:  almond_cockle
Created model:  amazing_jackrabbit
Created model:  analytic_beetle
Created model:  apricot_sawfly
Created model:  auspicious_gazelle
Created model:  authentic_capybara
Created model:  azure_quetzal
Created model:  fortunate_kagu
Created model:  intrepid_bettong
Created model:  masterful_tody
Created model:  mutant_bison
Created model:  puzzling_agama
Created model:  quartz_herring
Created model:  quizzical_raven
Created model:  steadfast_swift
Created model:  steel_jerboa
Created model:  transparent_trogon
Created model:  vague_cat
Created model:  wondrous_condor
Created model:  xanthic_skylark
[2K[2Kalmond_cockle
[31m[EVAL] Best accuracy:67.5999984741211[0m
[2K[2Kamazing_jackrabbit
[31m[EVAL] Best accuracy:65.3499984741211[0m
[2K[2Kanalytic_beetle
[31m[EVAL] Best accuracy:69.00999450683594[0m
[2K[2Kapricot_sawfly
[31m[EVAL] Best accuracy:65.90999603271484[0m
[2K[2Kauspicious_gazelle
[31m[EVAL] Best accuracy:66.33000183105469[0m
[2K[2Kauthentic_capybara
[31m[EVAL] Best accuracy:67.04000091552734[0m
[2K[2Kazure_quetzal
[31m[EVAL] Best accuracy:68.41999816894531[0m
[2K[2Kfortunate_kagu
[31m[EVAL] Best accuracy:63.5099983215332[0m
[2K[2Kintrepid_bettong
[31m[EVAL] Best accuracy:65.8499984741211[0m
[2K[2Kmasterful_tody
[31m[EVAL] Best accuracy:68.47000122070312[0m
[2K[2Kmutant_bison
[31m[EVAL] Best accuracy:65.45999908447266[0m
[2K[2Kpuzzling_agama
[31m[EVAL] Best accuracy:66.30999755859375[0m
[2K[2Kquartz_herring
[31m[EVAL] Best accuracy:68.29000091552734[0m
[2K[2Kquizzical_raven
[31m[EVAL] Best accuracy:65.54000091552734[0m
[2K[2Ksteadfast_swift
[31m[EVAL] Best accuracy:68.5999984741211[0m
[2K[2Ksteel_jerboa
[31m[EVAL] Best accuracy:64.15999603271484[0m
[2K[2Ktransparent_trogon
[31m[EVAL] Best accuracy:64.37999725341797[0m
[2K[2Kvague_cat
[31m[EVAL] Best accuracy:67.83999633789062[0m
[2K[2Kwondrous_condor
[31m[EVAL] Best accuracy:64.55999755859375[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 104, 'WA': 24.0, 'WM': 2.8999999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 104, 'WA': 24.0, 'WM': 2.8999999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 104, 'WA': 24.0, 'WM': 2.8999999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7805.994809389114
ic| self.metadata["time_remaining"]: 81923.24131131172
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 71.35,
               'codename': 'Volga',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_2/tests_Volga_21_10_2024_02_28/Generation_3/xanthic_skylark',
               'input_shape': [50000, 20, 20, 20],
               'mode': 'NAS',
               'num_classes': 7,
               'test_type': 'T2_Proxy/seed_2',
               'time_remaining': 74116.99751996994,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| unique_values: array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ],
                         dtype=float32)
ic| C: 1
ic| H: 9
ic| PH: 1
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f61a71ef520>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f61a71ef190>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f61a71efa90>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f61a71ee6e0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f61a6330b50>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f629ae851e0>,
                 ToTensor(),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f61a71dfe80>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['brave_agama',
                  'skinny_toad',
                  'mini_hippo',
                  'small_serval',
                  'keen_fulmar',
                  'unnatural_urchin',
                  'sensible_squid',
                  'imaginary_prawn',
                  'orchid_caracara',
                  'dazzling_cobra']
ic| params: [24.0, 64, 2.249999999999999, 15, 8]
ic| params: [48.0, 96, 2.849999999999997, 21, 8]
ic| params: [64.0, 112, 2.7499999999999973, 10, 8]
ic| params: [24.0, 120, 2.599999999999998, 10, 8]
ic| params: [56.0, 88, 2.249999999999999, 18, 8]
ic| params: [40.0, 72, 2.3499999999999988, 14, 8]
ic| params: [64.0, 112, 2.599999999999998, 20, 8]
ic| params: [40.0, 48, 2.05, 22, 8]
ic| params: [32.0, 96, 2.4499999999999984, 11, 8]
ic| params: [32.0, 80, 2.7499999999999973, 22, 8]
ic| individuals: ['brave_agama',
                  'skinny_toad',
                  'mini_hippo',
                  'small_serval',
                  'keen_fulmar',
                  'unnatural_urchin',
                  'sensible_squid',
                  'imaginary_prawn',
                  'orchid_caracara',
                  'dazzling_cobra']
ic| params_dict: {'brave_agama': [24.0, 64, 2.249999999999999, 15, 8],
                  'dazzling_cobra': [32.0, 80, 2.7499999999999973, 22, 8],
                  'imaginary_prawn': [40.0, 48, 2.05, 22, 8],
                  'keen_fulmar': [56.0, 88, 2.249999999999999, 18, 8],
                  'mini_hippo': [64.0, 112, 2.7499999999999973, 10, 8],
                  'orchid_caracara': [32.0, 96, 2.4499999999999984, 11, 8],
                  'sensible_squid': [64.0, 112, 2.599999999999998, 20, 8],
                  'skinny_toad': [48.0, 96, 2.849999999999997, 21, 8],
                  'small_serval': [24.0, 120, 2.599999999999998, 10, 8],
                  'unnatural_urchin': [40.0, 72, 2.3499999999999988, 14, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a71ef520>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a71ef190>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a71efa90>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a71ee6e0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a6330b50>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f629ae851e0>,
                                                ToTensor(),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61a71dfe80>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 4'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41129476096
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 71463.95876908302
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 120, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kxanthic_skylark
[31m[EVAL] Best accuracy:66.66999816894531[0m
['parents.csv', 'almond_cockle', 'amazing_jackrabbit', 'analytic_beetle', 'apricot_sawfly', 'auspicious_gazelle', 'authentic_capybara', 'azure_quetzal', 'fortunate_kagu', 'intrepid_bettong', 'masterful_tody', 'mutant_bison', 'puzzling_agama', 'quartz_herring', 'quizzical_raven', 'steadfast_swift', 'steel_jerboa', 'transparent_trogon', 'vague_cat', 'wondrous_condor', 'xanthic_skylark', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 69.01
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_2/tests_Volga_21_10_2024_02_28/Generation_3/analytic_beetle/config.yaml

=== Training ===
  Allotted compute time remaining: ~20h,35m,16s
Early stopping at epoch 100
[31m[EVAL] Best accuracy:83.81999969482422[0m

=== Predicting ===
  Allotted compute time remaining: ~19h,56m,54s

========== Dataset   Sokoto   =============================================
  Metadata:
   - input_shape         : [50000, 1, 9, 9]
   - codename            : Sokoto
   - benchmark           : 0.0
   - num_classes         : 9
   - time_remaining      : 71813.43464016914

=== Processing Data ===
  Allotted compute time remaining: ~19h,56m,53s

=== Performing NAS ===
  Allotted compute time remaining: ~19h,51m,3s
spawn
Created model:  golden_oryx
Created model:  pompous_leech
Created model:  bizarre_uakari
Created model:  grinning_bettong
Created model:  granite_hawk
Created model:  impossible_booby
Created model:  sturdy_husky
Created model:  tough_mayfly
Created model:  crystal_reindeer
Created model:  burrowing_bettong
Created model:  curly_pig
Created model:  vague_puffin
Created model:  prompt_jaguarundi
Created model:  black_horse
Created model:  sandy_aardwolf
Created model:  prompt_mussel
Created model:  smoky_rat
Created model:  gifted_bison
Created model:  gifted_lynx
Created model:  devious_ammonite
[2K[2Kbizarre_uakari
[31m[EVAL] Best accuracy:12.929999351501465[0m
[2K[2Kblack_horse
[31m[EVAL] Best accuracy:11.529999732971191[0m
[2K[2Kburrowing_bettong
[31m[EVAL] Best accuracy:14.369999885559082[0m
[2K[2Kcrystal_reindeer
[31m[EVAL] Best accuracy:11.469999313354492[0m
[2K[2Kcurly_pig
[31m[EVAL] Best accuracy:11.210000038146973[0m
[2K[2Kdevious_ammonite
[31m[EVAL] Best accuracy:14.09999942779541[0m
[2K[2Kgifted_bison
[31m[EVAL] Best accuracy:12.170000076293945[0m
[2K[2Kgifted_lynx
[31m[EVAL] Best accuracy:11.50999927520752[0m
[2K[2Kgolden_oryx
[31m[EVAL] Best accuracy:11.609999656677246[0m
[2K[2Kgranite_hawk
[31m[EVAL] Best accuracy:12.109999656677246[0m
[2K[2Kgrinning_bettong
[31m[EVAL] Best accuracy:11.649999618530273[0m
[2K[2Kimpossible_booby
[31m[EVAL] Best accuracy:12.049999237060547[0m
[2K[2Kpompous_leech
[31m[EVAL] Best accuracy:13.309999465942383[0m
[2K[2Kprompt_jaguarundi
[31m[EVAL] Best accuracy:16.149999618530273[0m
[2K[2Kprompt_mussel
[31m[EVAL] Best accuracy:13.219999313354492[0m
[2K[2Ksandy_aardwolf
[31m[EVAL] Best accuracy:14.369999885559082[0m
[2K[2Ksmoky_rat
[31m[EVAL] Best accuracy:11.359999656677246[0m
[2K[2Ksturdy_husky
[31m[EVAL] Best accuracy:11.389999389648438[0m
[2K[2Ktough_mayfly
[31m[EVAL] Best accuracy:11.59999942779541[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 120, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 120, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 120, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2649.658317089081
ic| self.metadata["time_remaining"]: 71463.95876908302
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 120, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 120, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 120, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 120, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 120, 'WA': 40.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 24.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvague_puffin
[31m[EVAL] Best accuracy:17.0[0m
['golden_oryx', 'pompous_leech', 'bizarre_uakari', 'grinning_bettong', 'granite_hawk', 'impossible_booby', 'sturdy_husky', 'tough_mayfly', 'crystal_reindeer', 'burrowing_bettong', 'curly_pig', 'vague_puffin', 'prompt_jaguarundi', 'black_horse', 'sandy_aardwolf', 'prompt_mussel', 'smoky_rat', 'gifted_bison', 'gifted_lynx', 'devious_ammonite', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 17.0
Child: [32.0, 64, 2.35, 9]
Old_chrom: [32.0, 72, 2.35, 12]
Diff: 0.0728021978021978
[24.0, 56, 2.35, 8]
Child: [40.0, 104, 2.3000000000000003, 13]
Old_chrom: [40.0, 72, 2.299999999999999, 14]
Diff: 0.09478022967773742
[32.0, 104, 2.35, 12]
Child: [40.0, 88, 2.05, 8]
Old_chrom: [40.0, 88, 2.0999999999999996, 8]
Diff: 0.06063390625908324
[40.0, 80, 2.05, 9]
Child: [40.0, 80, 2.05, 9]
Old_chrom: [40.0, 88, 2.0999999999999996, 8]
Diff: 0.09772181834699534
[32.0, 88, 2.0999999999999996, 9]
Child: [24.0, 88, 2.0999999999999996, 10]
Old_chrom: [28.0, 88, 2.1, 11]
Diff: 0.038690481904810656
[24.0, 80, 2.1499999999999995, 11]
Child: [24.0, 56, 2.6499999999999977, 10]
Old_chrom: [16.0, 56, 2.6499999999999977, 13]
Diff: 0.09523809523809523
[16.0, 48, 2.6499999999999977, 9]
Child: [40.0, 120, 2.6499999999999977, 10]
Old_chrom: [40.0, 88, 2.6499999999999977, 10]
Diff: 0.07692307692307693
[32.0, 128, 2.6499999999999977, 10]
Created model:  alluring_termite
Created model:  ambrosial_wombat
Created model:  amigurumi_chachalaca
Created model:  arcane_kiwi
Created model:  caped_kagu
Created model:  dainty_gazelle
Created model:  dazzling_goose
Created model:  esoteric_scorpion
Created model:  famous_chachalaca
Created model:  furry_gopher
Created model:  messy_buzzard
Created model:  monumental_dingo
Created model:  passionate_orangutan
Created model:  peridot_monkey
Created model:  rapid_chimpanzee
Created model:  remarkable_ant
Created model:  rough_ladybug
Created model:  slim_locust
Created model:  tidy_herring
Created model:  vigorous_donkey
[2K[2Kalluring_termite
[31m[EVAL] Best accuracy:16.869998931884766[0m
[2K[2Kambrosial_wombat
[31m[EVAL] Best accuracy:14.059999465942383[0m
[2K[2Kamigurumi_chachalaca
[31m[EVAL] Best accuracy:11.630000114440918[0m
[2K[2Karcane_kiwi
[31m[EVAL] Best accuracy:12.829999923706055[0m
[2K[2Kcaped_kagu
[31m[EVAL] Best accuracy:15.869999885559082[0m
[2K[2Kdainty_gazelle
[31m[EVAL] Best accuracy:16.829999923706055[0m
[2K[2Kdazzling_goose
[31m[EVAL] Best accuracy:16.989999771118164[0m
[2K[2Kesoteric_scorpion
[31m[EVAL] Best accuracy:12.039999961853027[0m
[2K[2Kfamous_chachalaca
[31m[EVAL] Best accuracy:11.399999618530273[0m
[2K[2Kfurry_gopher
[31m[EVAL] Best accuracy:13.649999618530273[0m
[2K[2Kmessy_buzzard
[31m[EVAL] Best accuracy:15.15999984741211[0m
[2K[2Kmonumental_dingo
[31m[EVAL] Best accuracy:11.6899995803833[0m
[2K[2Kpassionate_orangutan
[31m[EVAL] Best accuracy:11.819999694824219[0m
[2K[2Kperidot_monkey
[31m[EVAL] Best accuracy:16.40999984741211[0m
[2K[2Krapid_chimpanzee
[31m[EVAL] Best accuracy:16.440000534057617[0m
[2K[2Kremarkable_ant
[31m[EVAL] Best accuracy:16.93000030517578[0m
[2K[2Krough_ladybug
[31m[EVAL] Best accuracy:11.50999927520752[0m
[2K[2Kslim_locust
[31m[EVAL] Best accuracy:15.449999809265137[0m
[2K[2Ktidy_herring
[31m[EVAL] Best accuracy:17.639999389648438[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 24.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 24.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 24.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 5088.10334777832
ic| self.metadata["time_remaining"]: 71463.95876908302
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 24.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 24.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 24.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 24.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 24.0, 'WM': 2.4499999999999984, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 88, 'WA': 16.0, 'WM': 2.0500000000000003, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvigorous_donkey
[31m[EVAL] Best accuracy:13.699999809265137[0m
['parents.csv', 'alluring_termite', 'ambrosial_wombat', 'amigurumi_chachalaca', 'arcane_kiwi', 'caped_kagu', 'dainty_gazelle', 'dazzling_goose', 'esoteric_scorpion', 'famous_chachalaca', 'furry_gopher', 'messy_buzzard', 'monumental_dingo', 'passionate_orangutan', 'peridot_monkey', 'rapid_chimpanzee', 'remarkable_ant', 'rough_ladybug', 'slim_locust', 'tidy_herring', 'vigorous_donkey', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 17.64
Child: [28.0, 104, 2.4000000000000004, 11]
Old_chrom: [32.0, 104, 2.35, 12]
Diff: 0.09932438244955971
[36.0, 112, 2.3500000000000005, 10]
Child: [30.0, 112, 2.4000000000000004, 11]
Old_chrom: [48.0, 112, 2.3999999999999986, 11]
Diff: 0.09375001142866893
[22.0, 120, 2.45, 12]
Child: [28.0, 96, 2.25, 12]
Old_chrom: [28.0, 104, 2.25, 15]
Diff: 0.0728021978021978
[20.0, 96, 2.2, 11]
Child: [30.0, 96, 2.25, 12]
Old_chrom: [28.0, 104, 2.25, 15]
Diff: 0.08321886446886446
[38.0, 96, 2.2, 12]
Child: [28.0, 80, 2.35, 10]
Old_chrom: [32.0, 72, 2.35, 12]
Diff: 0.07577838827838827
[36.0, 88, 2.3000000000000003, 10]
Child: [26.0, 88, 2.15, 11]
Old_chrom: [24.0, 80, 2.1499999999999995, 11]
Diff: 0.02964744161177036
[26.0, 88, 2.1999999999999997, 12]
Child: [26.0, 88, 2.1999999999999997, 12]
Old_chrom: [20.0, 96, 2.2, 11]
Diff: 0.06833791780224654
[26.0, 80, 2.2499999999999996, 11]
Child: [26.0, 80, 2.2499999999999996, 11]
Old_chrom: [24.0, 80, 2.1499999999999995, 11]
Diff: 0.09616595923792128
[34.0, 72, 2.1999999999999997, 12]
Child: [26.0, 72, 2.25, 10]
Old_chrom: [24.0, 72, 2.25, 10]
Diff: 0.010416666666666666
[26.0, 64, 2.25, 11]
Child: [26.0, 64, 2.25, 11]
Old_chrom: [24.0, 72, 2.25, 10]
Diff: 0.04750457875457875
[18.0, 72, 2.25, 12]
Child: [18.0, 72, 2.25, 12]
Old_chrom: [20.0, 64, 2.3000000000000003, 12]
Diff: 0.09028134215651941
[26.0, 80, 2.2, 11]
Child: [32.0, 128, 2.6499999999999977, 12]
Old_chrom: [32.0, 128, 2.6499999999999977, 10]
Diff: 0.03571428571428571
[40.0, 136, 2.6999999999999975, 13]
Child: [28.0, 128, 2.6499999999999977, 11]
Old_chrom: [32.0, 128, 2.6499999999999977, 10]
Diff: 0.03869047619047619
[20.0, 120, 2.6999999999999975, 12]
Child: [24.0, 56, 2.6499999999999977, 10]
Old_chrom: [16.0, 48, 2.6499999999999977, 9]
Diff: 0.07875457875457875
[32.0, 64, 2.599999999999998, 11]
Child: [32.0, 64, 2.599999999999998, 11]
Old_chrom: [36.0, 48, 2.6, 10]
Diff: 0.07715202742965496
[32.0, 56, 2.6499999999999977, 10]
Child: [32.0, 56, 2.6499999999999977, 10]
Old_chrom: [48.0, 56, 2.6499999999999977, 10]
Diff: 0.08333333333333333
[24.0, 64, 2.6499999999999977, 11]
Child: [24.0, 104, 2.35, 11]
Old_chrom: [32.0, 104, 2.35, 12]
Diff: 0.05952380952380952
[24.0, 104, 2.3000000000000003, 11]
Child: [32.0, 104, 2.1, 11]
Old_chrom: [28.0, 88, 2.1, 11]
Diff: 0.05929487179487179
[24.0, 96, 2.1, 10]
Child: [24.0, 96, 2.1, 10]
Old_chrom: [28.0, 88, 2.1, 11]
Diff: 0.05792124542124542
[24.0, 88, 2.15, 9]
Child: [24.0, 88, 2.15, 9]
Old_chrom: [24.0, 80, 2.1499999999999995, 11]
Diff: 0.05494506065938941
[32.0, 88, 2.15, 10]
Child: [32.0, 88, 2.15, 10]
Old_chrom: [24.0, 80, 2.1499999999999995, 11]
Diff: 0.07875458446891322
[24.0, 88, 2.15, 9]
Child: [24.0, 88, 2.15, 9]
Old_chrom: [24.0, 80, 2.1499999999999995, 11]
Diff: 0.05494506065938941
[16.0, 80, 2.1, 8]
Child: [32.0, 56, 2.35, 12]
Old_chrom: [32.0, 72, 2.35, 12]
Diff: 0.038461538461538464
[40.0, 48, 2.35, 11]
Child: [24.0, 88, 2.1, 11]
Old_chrom: [24.0, 80, 2.1499999999999995, 11]
Diff: 0.07986467548985221
[16.0, 96, 2.1, 11]
Child: [16.0, 96, 2.1, 11]
Old_chrom: [28.0, 88, 2.1, 11]
Diff: 0.08173076923076923
[16.0, 88, 2.0500000000000003, 11]
Child: [24.0, 80, 2.35, 8]
Old_chrom: [24.0, 56, 2.35, 8]
Diff: 0.057692307692307696
[16.0, 88, 2.3000000000000003, np.int64(8)]
Child: [24.0, 88, 2.1, 8]
Old_chrom: [40.0, 88, 2.0999999999999996, 8]
Diff: 0.08333333904766779
[16.0, 88, 2.0500000000000003, np.int64(8)]
Created model:  adaptable_doberman
Created model:  amber_millipede
Created model:  blue_dugong
Created model:  bouncy_wapiti
Created model:  calm_markhor
Created model:  crimson_jackrabbit
Created model:  delightful_spider
Created model:  dramatic_dinosaur
Created model:  fair_mouflon
Created model:  fine_crane
Created model:  frisky_caterpillar
Created model:  grinning_lionfish
Created model:  hypersonic_hound
Created model:  imposing_anaconda
Created model:  macho_gerbil
Created model:  magnificent_beaver
Created model:  nimble_shrew
Created model:  olivine_oriole
Created model:  shaggy_fossa
Created model:  venomous_skylark
[2K[2Kadaptable_doberman
[31m[EVAL] Best accuracy:17.850000381469727[0m
[2K[2Kamber_millipede
[31m[EVAL] Best accuracy:16.479999542236328[0m
[2K[2Kblue_dugong
[31m[EVAL] Best accuracy:16.369998931884766[0m
[2K[2Kbouncy_wapiti
[31m[EVAL] Best accuracy:16.5[0m
[2K[2Kcalm_markhor
[31m[EVAL] Best accuracy:13.389999389648438[0m
[2K[2Kcrimson_jackrabbit
[31m[EVAL] Best accuracy:14.5[0m
[2K[2Kdelightful_spider
[31m[EVAL] Best accuracy:14.50999927520752[0m
[2K[2Kdramatic_dinosaur
[31m[EVAL] Best accuracy:13.039999961853027[0m
[2K[2Kfair_mouflon
[31m[EVAL] Best accuracy:13.859999656677246[0m
[2K[2Kfine_crane
[31m[EVAL] Best accuracy:15.569999694824219[0m
[2K[2Kfrisky_caterpillar
[31m[EVAL] Best accuracy:17.25[0m
[2K[2Kgrinning_lionfish
[31m[EVAL] Best accuracy:13.809999465942383[0m
[2K[2Khypersonic_hound
[31m[EVAL] Best accuracy:17.399999618530273[0m
[2K[2Kimposing_anaconda
[31m[EVAL] Best accuracy:15.359999656677246[0m
[2K[2Kmacho_gerbil
[31m[EVAL] Best accuracy:16.529998779296875[0m
[2K[2Kmagnificent_beaver
[31m[EVAL] Best accuracy:17.559999465942383[0m
[2K[2Knimble_shrew
[31m[EVAL] Best accuracy:12.119999885559082[0m
[2K[2Kolivine_oriole
[31m[EVAL] Best accuracy:17.020000457763672[0m
[2K[2Kshaggy_fossa
[31m[EVAL] Best accuracy:18.439998626708984[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 88, 'WA': 16.0, 'WM': 2.0500000000000003, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 88, 'WA': 16.0, 'WM': 2.0500000000000003, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 88, 'WA': 16.0, 'WM': 2.0500000000000003, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7447.9652733802795
ic| self.metadata["time_remaining"]: 71463.95876908302
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 0.0,
               'codename': 'Sokoto',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_2/tests_Sokoto_21_10_2024_05_22/Generation_3/venomous_skylark',
               'input_shape': [50000, 1, 9, 9],
               'mode': 'NAS',
               'num_classes': 9,
               'test_type': 'T2_Proxy/seed_2',
               'time_remaining': 64015.8004629612,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| unique_values: array([0.09411765, 0.09803922, 0.10196079, 0.10588235, 0.10980392,
                          0.11372549, 0.11764706, 0.12156863, 0.1254902 , 0.12941177,
                          0.13333334, 0.13725491, 0.14117648, 0.14509805, 0.14901961,
                          0.15294118, 0.15686275, 0.16078432, 0.16470589, 0.16862746,
                          0.17254902, 0.1764706 , 0.18039216, 0.18431373, 0.1882353 ,
                          0.19215687, 0.19607843, 0.2       , 0.20392157, 0.20784314,
                          0.21176471, 0.21568628, 0.21960784, 0.22352941, 0.22745098,
                          0.23137255, 0.23529412, 0.23921569, 0.24313726, 0.24705882,
                          0.2509804 , 0.25490198, 0.25882354, 0.2627451 , 0.26666668,
                          0.27058825, 0.27450982, 0.2784314 , 0.28235295, 0.28627452,
                          0.2901961 , 0.29411766, 0.29803923, 0.3019608 , 0.30588236,
                          0.30980393, 0.3137255 , 0.31764707, 0.32156864, 0.3254902 ,
                          0.32941177, 0.33333334, 0.3372549 , 0.34117648, 0.34509805,
                          0.34901962, 0.3529412 , 0.35686275, 0.36078432, 0.3647059 ,
                          0.36862746, 0.37254903, 0.3764706 , 0.38039216, 0.38431373,
                          0.3882353 , 0.39215687, 0.39607844, 0.4       , 0.40392157,
                          0.40784314, 0.4117647 , 0.41568628, 0.41960785, 0.42352942,
                          0.42745098, 0.43137255, 0.43529412, 0.4392157 , 0.44313726,
                          0.44705883, 0.4509804 , 0.45490196, 0.45882353, 0.4627451 ,
                          0.46666667, 0.47058824, 0.4745098 , 0.47843137, 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7411765 ,
                          0.74509805, 0.7490196 , 0.7529412 , 0.75686276, 0.7647059 ,
                          0.76862746, 0.77254903, 0.7764706 , 0.78431374, 0.7882353 ,
                          0.7921569 , 0.79607844, 0.8       , 0.8039216 , 0.8156863 ,
                          0.81960785, 0.8235294 , 0.827451  , 0.83137256, 0.8392157 ,
                          0.8509804 , 0.85882354, 0.8627451 , 0.8666667 , 0.87058824,
                          0.8784314 , 0.88235295, 0.8901961 , 0.89411765, 0.90588236,
                          0.9098039 , 0.9137255 , 0.92156863, 0.92941177, 0.93333334,
                          0.9411765 , 0.9490196 , 0.9529412 , 0.972549  ], dtype=float32)
ic| C: 3
ic| H: 32
ic| PH: 4
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f61c8c03d00>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f61c8c01720>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f61c8c018d0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7f61c8c022f0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7f62994a96c0>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7f61c8be2410>,
                 ToTensor(),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7f61c8be1b40>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['sepia_shellfish',
                  'maroon_skunk',
                  'grinning_cassowary',
                  'russet_collie',
                  'adept_seal',
                  'magenta_jerboa',
                  'solid_parakeet',
                  'unique_deer',
                  'malachite_gaur',
                  'conscious_smilodon']
ic| params: [40.0, 88, 2.549999999999998, 16, 8]
ic| params: [16.0, 48, 2.6999999999999975, 22, 8]
ic| params: [64.0, 120, 2.849999999999997, 16, 8]
ic| params: [56.0, 64, 2.299999999999999, 11, 8]
ic| params: [24.0, 64, 2.249999999999999, 16, 8]
ic| params: [40.0, 120, 2.299999999999999, 21, 8]
ic| params: [64.0, 72, 2.249999999999999, 20, 8]
ic| params: [56.0, 104, 2.3999999999999986, 22, 8]
ic| params: [16.0, 64, 2.899999999999997, 20, 8]
ic| params: [24.0, 104, 2.6499999999999977, 20, 8]
ic| individuals: ['sepia_shellfish',
                  'maroon_skunk',
                  'grinning_cassowary',
                  'russet_collie',
                  'adept_seal',
                  'magenta_jerboa',
                  'solid_parakeet',
                  'unique_deer',
                  'malachite_gaur',
                  'conscious_smilodon']
ic| params_dict: {'adept_seal': [24.0, 64, 2.249999999999999, 16, 8],
                  'conscious_smilodon': [24.0, 104, 2.6499999999999977, 20, 8],
                  'grinning_cassowary': [64.0, 120, 2.849999999999997, 16, 8],
                  'magenta_jerboa': [40.0, 120, 2.299999999999999, 21, 8],
                  'malachite_gaur': [16.0, 64, 2.899999999999997, 20, 8],
                  'maroon_skunk': [16.0, 48, 2.6999999999999975, 22, 8],
                  'russet_collie': [56.0, 64, 2.299999999999999, 11, 8],
                  'sepia_shellfish': [40.0, 88, 2.549999999999998, 16, 8],
                  'solid_parakeet': [64.0, 72, 2.249999999999999, 20, 8],
                  'unique_deer': [56.0, 104, 2.3999999999999986, 22, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61c8c03d00>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61c8c01720>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61c8c018d0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61c8c022f0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f62994a96c0>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61c8be2410>,
                                                ToTensor(),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7f61c8be1b40>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/data_processor.py:608: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 4'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| mode: 'T2'
ic| f"Mode {mode}": 'Mode T2'
ic| get_gpu_memory(0): 41404203008
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 62508.37326645851
ic| self.zcost_nas: False
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 104, 'WA': 32.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvenomous_skylark
[31m[EVAL] Best accuracy:18.059999465942383[0m
['parents.csv', 'adaptable_doberman', 'amber_millipede', 'blue_dugong', 'bouncy_wapiti', 'calm_markhor', 'crimson_jackrabbit', 'delightful_spider', 'dramatic_dinosaur', 'fair_mouflon', 'fine_crane', 'frisky_caterpillar', 'grinning_lionfish', 'hypersonic_hound', 'imposing_anaconda', 'macho_gerbil', 'magnificent_beaver', 'nimble_shrew', 'olivine_oriole', 'shaggy_fossa', 'venomous_skylark', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 18.44
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_2/tests_Sokoto_21_10_2024_05_22/Generation_3/shaggy_fossa/config.yaml

=== Training ===
  Allotted compute time remaining: ~17h,46m,55s
Early stopping at epoch 59
[31m[EVAL] Best accuracy:39.599998474121094[0m

=== Predicting ===
  Allotted compute time remaining: ~17h,28m,26s

========== Dataset  CIFAR10   =============================================
  Metadata:
   - input_shape         : [50000, 3, 32, 32]
   - codename            : CIFAR10
   - benchmark           : 90.65
   - num_classes         : 10
   - time_remaining      : 62904.571743011475

=== Processing Data ===
  Allotted compute time remaining: ~17h,28m,24s

=== Performing NAS ===
  Allotted compute time remaining: ~17h,21m,48s
spawn
Created model:  sly_kagu
Created model:  cobalt_cormorant
Created model:  hallowed_anteater
Created model:  rampant_beaver
Created model:  striped_goose
Created model:  splendid_aardwark
Created model:  shaggy_skua
Created model:  overjoyed_sheep
Created model:  hypersonic_bug
Created model:  natural_elk
Created model:  lean_mastiff
Created model:  large_bloodhound
Created model:  taupe_goat
Created model:  imaginary_mussel
Created model:  honored_vicugna
Created model:  bulky_dingo
Created model:  agate_catfish
Created model:  screeching_aardwark
Created model:  acrid_stoat
Created model:  unbiased_pudu
[2K[2Kacrid_stoat
[31m[EVAL] Best accuracy:59.519996643066406[0m
[2K[2Kagate_catfish
[31m[EVAL] Best accuracy:73.43000030517578[0m
[2K[2Kbulky_dingo
[31m[EVAL] Best accuracy:58.349998474121094[0m
[2K[2Kcobalt_cormorant
[31m[EVAL] Best accuracy:75.29000091552734[0m
[2K[2Khallowed_anteater
[31m[EVAL] Best accuracy:73.20999908447266[0m
[2K[2Khonored_vicugna
[31m[EVAL] Best accuracy:69.3699951171875[0m
[2K[2Khypersonic_bug
[31m[EVAL] Best accuracy:71.08000183105469[0m
[2K[2Kimaginary_mussel
[31m[EVAL] Best accuracy:67.80999755859375[0m
[2K[2Klarge_bloodhound
[31m[EVAL] Best accuracy:64.98999786376953[0m
[2K[2Klean_mastiff
[31m[EVAL] Best accuracy:68.22000122070312[0m
[2K[2Knatural_elk
[31m[EVAL] Best accuracy:68.80999755859375[0m
[2K[2Koverjoyed_sheep
[31m[EVAL] Best accuracy:73.06999969482422[0m
[2K[2Krampant_beaver
[31m[EVAL] Best accuracy:60.88999938964844[0m
[2K[2Kscreeching_aardwark
[31m[EVAL] Best accuracy:73.08000183105469[0m
[2K[2Kshaggy_skua
[31m[EVAL] Best accuracy:55.939998626708984[0m
[2K[2Ksly_kagu
[31m[EVAL] Best accuracy:69.8499984741211[0m
[2K[2Ksplendid_aardwark
[31m[EVAL] Best accuracy:73.05999755859375[0m
[2K[2Kstriped_goose
[31m[EVAL] Best accuracy:66.73999786376953[0m
[2K[2Ktaupe_goat
[31m[EVAL] Best accuracy:75.25999450683594[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 104, 'WA': 32.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 104, 'WA': 32.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 104, 'WA': 32.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2282.501597881317
ic| self.metadata["time_remaining"]: 62508.37326645851
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 104, 'WA': 32.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 104, 'WA': 32.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 104, 'WA': 32.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 104, 'WA': 32.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 104, 'WA': 32.0, 'WM': 2.1499999999999995, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 40.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kunbiased_pudu
[31m[EVAL] Best accuracy:64.13999938964844[0m
['sly_kagu', 'cobalt_cormorant', 'hallowed_anteater', 'rampant_beaver', 'striped_goose', 'splendid_aardwark', 'shaggy_skua', 'overjoyed_sheep', 'hypersonic_bug', 'natural_elk', 'lean_mastiff', 'large_bloodhound', 'taupe_goat', 'imaginary_mussel', 'honored_vicugna', 'bulky_dingo', 'agate_catfish', 'screeching_aardwark', 'acrid_stoat', 'unbiased_pudu', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 75.29
Child: [48.0, 88, 2.45, 10]
Old_chrom: [32.0, 88, 2.4499999999999984, 10]
Diff: 0.08333334476200226
[56.0, 88, 2.5, 9]
Child: [64.0, 104, 2.6500000000000004, 9]
Old_chrom: [48.0, 104, 2.6500000000000004, 9]
Diff: 0.08333333333333333
[72.0, 96, 2.7, 10]
Child: [56.0, 112, 2.5, 8]
Old_chrom: [56.0, 88, 2.5, 9]
Diff: 0.07554945054945056
[48.0, 120, 2.55, np.int64(8)]
Child: [56.0, 96, 2.3000000000000003, 9]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.08333333333333333
[48.0, 96, 2.2500000000000004, 10]
Child: [44.0, 104, 2.45, 14]
Old_chrom: [28.0, 104, 2.45, 14]
Diff: 0.08333333333333333
[36.0, 104, 2.4000000000000004, 13]
Child: [64.0, 88, 2.4499999999999984, 8]
Old_chrom: [64.0, 88, 2.4499999999999984, 9]
Diff: 0.017857142857142856
[64.0, 80, 2.4499999999999984, 8]
Child: [64.0, 80, 2.4499999999999984, 8]
Old_chrom: [64.0, 88, 2.4499999999999984, 9]
Diff: 0.03708791208791209
[72.0, 88, 2.3999999999999986, 8]
Child: [64.0, 88, 2.4499999999999984, 9]
Old_chrom: [64.0, 88, 2.4499999999999984, 9]
Diff: 0.0
[56.0, 80, 2.4499999999999984, 9]
Child: [56.0, 80, 2.4499999999999984, 9]
Old_chrom: [64.0, 88, 2.4499999999999984, 9]
Diff: 0.060897435897435896
[56.0, 80, 2.3999999999999986, 8]
Child: [64.0, 88, 2.849999999999997, 8]
Old_chrom: [64.0, 112, 2.849999999999997, 8]
Diff: 0.057692307692307696
[72.0, 88, 2.849999999999997, 8]
Child: [72.0, 88, 2.849999999999997, 8]
Old_chrom: [64.0, 112, 2.849999999999997, 8]
Diff: 0.09935897435897437
[64.0, 96, 2.799999999999997, np.int64(8)]
Child: [48.0, 112, 2.849999999999997, 8]
Old_chrom: [64.0, 112, 2.849999999999997, 8]
Diff: 0.08333333333333333
[40.0, 104, 2.849999999999997, np.int64(8)]
Child: [40.0, 104, 2.849999999999997, np.int64(8)]
Old_chrom: [40.0, 104, 2.799999999999997, 10]
Diff: 0.09634819197336895
[40.0, 112, 2.799999999999997, np.int64(8)]
Child: [48.0, 104, 2.3999999999999986, 18]
Old_chrom: [48.0, 120, 2.3999999999999986, 16]
Diff: 0.07417582417582418
[40.0, 96, 2.3499999999999988, 17]
Created model:  armored_ocelot
Created model:  artichoke_bulldog
Created model:  careful_walrus
Created model:  deft_lion
Created model:  didactic_galago
Created model:  fancy_snail
Created model:  fresh_crayfish
Created model:  green_snake
Created model:  gregarious_malamute
Created model:  incredible_jellyfish
Created model:  nostalgic_rat
Created model:  olive_termite
Created model:  olivine_frigatebird
Created model:  original_beaver
Created model:  quirky_puffin
Created model:  robust_bull
Created model:  steady_booby
Created model:  sturdy_kangaroo
Created model:  wisteria_mouflon
Created model:  witty_dormouse
[2K[2Karmored_ocelot
[31m[EVAL] Best accuracy:76.3499984741211[0m
[2K[2Kartichoke_bulldog
[31m[EVAL] Best accuracy:73.48999786376953[0m
[2K[2Kcareful_walrus
[31m[EVAL] Best accuracy:76.12999725341797[0m
[2K[2Kdeft_lion
[31m[EVAL] Best accuracy:74.1199951171875[0m
[2K[2Kdidactic_galago
[31m[EVAL] Best accuracy:74.23999786376953[0m
[2K[2Kfancy_snail
[31m[EVAL] Best accuracy:76.55999755859375[0m
[2K[2Kfresh_crayfish
[31m[EVAL] Best accuracy:74.05999755859375[0m
[2K[2Kgreen_snake
[31m[EVAL] Best accuracy:73.3699951171875[0m
[2K[2Kgregarious_malamute
[31m[EVAL] Best accuracy:71.75[0m
[2K[2Kincredible_jellyfish
[31m[EVAL] Best accuracy:76.04000091552734[0m
[2K[2Knostalgic_rat
[31m[EVAL] Best accuracy:75.29999542236328[0m
[2K[2Kolive_termite
[31m[EVAL] Best accuracy:75.15999603271484[0m
[2K[2Kolivine_frigatebird
[31m[EVAL] Best accuracy:73.18999481201172[0m
[2K[2Koriginal_beaver
[31m[EVAL] Best accuracy:71.20999908447266[0m
[2K[2Kquirky_puffin
[31m[EVAL] Best accuracy:74.4000015258789[0m
[2K[2Krobust_bull
[31m[EVAL] Best accuracy:72.70999908447266[0m
[2K[2Ksteady_booby
[31m[EVAL] Best accuracy:74.69999694824219[0m
[2K[2Ksturdy_kangaroo
[31m[EVAL] Best accuracy:76.2699966430664[0m
[2K[2Kwisteria_mouflon
[31m[EVAL] Best accuracy:75.94999694824219[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 40.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 40.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 40.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 4416.567288160324
ic| self.metadata["time_remaining"]: 62508.37326645851
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 40.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 40.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 40.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 40.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 40.0, 'WM': 2.3499999999999988, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 112, 'WA': 40.0, 'WM': 2.25, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwitty_dormouse
[31m[EVAL] Best accuracy:72.6199951171875[0m
['parents.csv', 'armored_ocelot', 'artichoke_bulldog', 'careful_walrus', 'deft_lion', 'didactic_galago', 'fancy_snail', 'fresh_crayfish', 'green_snake', 'gregarious_malamute', 'incredible_jellyfish', 'nostalgic_rat', 'olive_termite', 'olivine_frigatebird', 'original_beaver', 'quirky_puffin', 'robust_bull', 'steady_booby', 'sturdy_kangaroo', 'wisteria_mouflon', 'witty_dormouse', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 76.56
Child: [48.0, 112, 2.6, 9]
Old_chrom: [48.0, 120, 2.55, 8]
Diff: 0.09772181834699559
[48.0, 104, 2.6, 9]
Child: [48.0, 104, 2.5, 8]
Old_chrom: [48.0, 120, 2.55, 8]
Diff: 0.0990954447206217
[56.0, 104, 2.55, np.int64(8)]
Child: [44.0, 112, 2.45, 9]
Old_chrom: [48.0, 88, 2.4499999999999984, 8]
Diff: 0.0963827953114528
[44.0, 104, 2.45, 9]
Child: [48.0, 96, 2.5500000000000003, 9]
Old_chrom: [48.0, 120, 2.55, 8]
Diff: 0.07554945626378501
[56.0, 104, 2.6, 10]
Child: [56.0, 104, 2.6, 10]
Old_chrom: [48.0, 104, 2.6, 9]
Diff: 0.05952380952380952
[48.0, 112, 2.6, 11]
Child: [48.0, 112, 2.6, 11]
Old_chrom: [48.0, 104, 2.6, 9]
Diff: 0.054945054945054944
[56.0, 104, 2.65, 12]
Child: [56.0, 104, 2.65, 12]
Old_chrom: [48.0, 104, 2.6500000000000004, 9]
Diff: 0.0952381009524297
[56.0, 104, 2.6, 12]
Child: [44.0, 104, 2.5, 9]
Old_chrom: [44.0, 104, 2.45, 9]
Diff: 0.06063390625908324
[44.0, 104, 2.55, 9]
Child: [44.0, 104, 2.55, 9]
Old_chrom: [48.0, 120, 2.55, 8]
Diff: 0.07715201465201466
[36.0, 112, 2.5, 10]
Child: [42.0, 112, 2.45, 11]
Old_chrom: [44.0, 104, 2.45, 9]
Diff: 0.0653617216117216
[34.0, 104, 2.4000000000000004, 11]
Child: [34.0, 104, 2.4000000000000004, 11]
Old_chrom: [36.0, 104, 2.4000000000000004, 13]
Diff: 0.04613095238095238
[42.0, 112, 2.3500000000000005, 11]
Child: [42.0, 112, 2.3500000000000005, 11]
Old_chrom: [42.0, 120, 2.4000000000000004, 11]
Diff: 0.07986467548985247
[42.0, 120, 2.4000000000000004, 10]
Child: [42.0, 120, 2.4000000000000004, 10]
Old_chrom: [42.0, 120, 2.4000000000000004, 11]
Diff: 0.017857142857142856
[50.0, 128, 2.3500000000000005, 11]
Child: [44.0, 96, 2.4000000000000004, 9]
Old_chrom: [44.0, 104, 2.45, 9]
Diff: 0.07986467548985247
[52.0, 88, 2.3500000000000005, 8]
Child: [42.0, 104, 2.35, 11]
Old_chrom: [42.0, 120, 2.4000000000000004, 11]
Diff: 0.09909544472062198
[34.0, 112, 2.35, 12]
Child: [38.0, 104, 2.3000000000000003, 11]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.0653617216117216
[30.0, 96, 2.3000000000000003, 11]
Child: [30.0, 96, 2.3000000000000003, 11]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.08779761904761904
[38.0, 88, 2.35, 11]
Child: [48.0, 104, 2.6500000000000004, 8]
Old_chrom: [48.0, 104, 2.6500000000000004, 9]
Diff: 0.017857142857142856
[56.0, 112, 2.6000000000000005, np.int64(8)]
Child: [56.0, 112, 2.6000000000000005, np.int64(8)]
Old_chrom: [48.0, 104, 2.6, 9]
Diff: 0.07875458446891322
[56.0, 112, 2.5500000000000007, np.int64(8)]
Child: [56.0, 112, 2.5500000000000007, np.int64(8)]
Old_chrom: [48.0, 120, 2.55, 8]
Diff: 0.060897443978725194
[64.0, 104, 2.5500000000000007, np.int64(8)]
Child: [64.0, 104, 2.5500000000000007, np.int64(8)]
Old_chrom: [56.0, 104, 2.55, np.int64(8)]
Diff: 0.04166667474795596
[56.0, 96, 2.6000000000000005, np.int64(8)]
Child: [56.0, 96, 2.6000000000000005, np.int64(8)]
Old_chrom: [48.0, 104, 2.6, 9]
Diff: 0.07875458446891322
[64.0, 104, 2.6000000000000005, np.int64(8)]
Child: [48.0, 88, 2.4499999999999984, 8]
Old_chrom: [48.0, 88, 2.4499999999999984, 8]
Diff: 0.0
[40.0, 80, 2.4499999999999984, 8]
Child: [40.0, 80, 2.4499999999999984, 8]
Old_chrom: [32.0, 88, 2.4499999999999984, 10]
Diff: 0.0966117216117216
[48.0, 88, 2.4999999999999982, 9]
Child: [48.0, 96, 2.3000000000000003, 8]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.05952380952380952
[40.0, 96, 2.2500000000000004, 8]
Child: [40.0, 96, 2.2500000000000004, 8]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.07849104911622609
[40.0, 104, 2.3000000000000003, np.int64(8)]
Child: [40.0, 104, 2.3000000000000003, np.int64(8)]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.03708791208791209
[48.0, 96, 2.3000000000000003, np.int64(9)]
Child: [48.0, 96, 2.3000000000000003, np.int64(9)]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.041666666666666664
[40.0, 104, 2.35, np.int64(8)]
Child: [40.0, 104, 2.35, np.int64(8)]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.09772181834699534
[48.0, 96, 2.3000000000000003, np.int64(8)]
Child: [36.0, 112, 2.55, 8]
Old_chrom: [48.0, 120, 2.55, 8]
Diff: 0.08173076923076923
[44.0, 104, 2.5999999999999996, 9]
Child: [48.0, 88, 2.6500000000000004, 9]
Old_chrom: [48.0, 104, 2.6500000000000004, 9]
Diff: 0.038461538461538464
[56.0, 88, 2.7, 9]
Child: [48.0, 96, 2.3000000000000003, 9]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.041666666666666664
[48.0, 104, 2.35, 10]
Child: [48.0, 104, 2.35, 10]
Old_chrom: [50.0, 128, 2.3500000000000005, 11]
Diff: 0.0859661229304517
[56.0, 96, 2.3000000000000003, 11]
Child: [48.0, 112, 2.25, 9]
Old_chrom: [48.0, 96, 2.2500000000000004, 10]
Diff: 0.056318687033015784
[40.0, 104, 2.3, 9]
Child: [40.0, 104, 2.3, 9]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.019230774945103696
[48.0, 104, 2.25, 8]
Child: [48.0, 104, 2.25, 8]
Old_chrom: [48.0, 96, 2.2500000000000004, 10]
Diff: 0.05494506065938941
[56.0, 96, 2.2, 8]
Child: [40.0, 88, 2.4499999999999984, 9]
Old_chrom: [32.0, 88, 2.4499999999999984, 10]
Diff: 0.05952380952380952
[32.0, 80, 2.4999999999999982, 9]
Child: [32.0, 80, 2.4999999999999982, 9]
Old_chrom: [32.0, 88, 2.4499999999999984, 10]
Diff: 0.09772181834699534
[32.0, 88, 2.4499999999999984, 10]
Child: [48.0, 88, 2.25, 13]
Old_chrom: [48.0, 96, 2.2500000000000004, 10]
Diff: 0.07280220351653227
[40.0, 96, 2.3, 13]
Child: [40.0, 96, 2.3, 13]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.07142857714290589
[32.0, 96, 2.25, 14]
Child: [32.0, 96, 2.25, 14]
Old_chrom: [36.0, 112, 2.25, 13]
Diff: 0.07715201465201466
[40.0, 88, 2.2, 14]
Child: [40.0, 112, 2.25, 9]
Old_chrom: [40.0, 96, 2.3000000000000003, 9]
Diff: 0.09909544472062198
[40.0, 112, 2.25, 10]
Created model:  alluring_owl
Created model:  aloof_swine
Created model:  attentive_galago
Created model:  cinnamon_sturgeon
Created model:  dandelion_ammonite
Created model:  encouraging_wapiti
Created model:  expert_kakapo
Created model:  famous_tuatara
Created model:  flying_emu
Created model:  huge_hyrax
Created model:  independent_copperhead
Created model:  optimal_llama
Created model:  prehistoric_koala
Created model:  resolute_hedgehog
Created model:  rough_ape
Created model:  slim_whale
Created model:  stoic_wallaby
Created model:  talented_horse
Created model:  towering_kestrel
Created model:  zealous_swine
[2K[2Kalluring_owl
[31m[EVAL] Best accuracy:75.58999633789062[0m
[2K[2Kaloof_swine
[31m[EVAL] Best accuracy:75.72999572753906[0m
[2K[2Kattentive_galago
[31m[EVAL] Best accuracy:77.95999908447266[0m
[2K[2Kcinnamon_sturgeon
[31m[EVAL] Best accuracy:72.93000030517578[0m
[2K[2Kdandelion_ammonite
[31m[EVAL] Best accuracy:74.61000061035156[0m
[2K[2Kencouraging_wapiti
[31m[EVAL] Best accuracy:74.8699951171875[0m
[2K[2Kexpert_kakapo
[31m[EVAL] Best accuracy:73.0199966430664[0m
[2K[2Kfamous_tuatara
[31m[EVAL] Best accuracy:75.56999969482422[0m
[2K[2Kflying_emu
[31m[EVAL] Best accuracy:73.48999786376953[0m
[2K[2Khuge_hyrax
[31m[EVAL] Best accuracy:74.41999816894531[0m
[2K[2Kindependent_copperhead
[31m[EVAL] Best accuracy:73.93000030517578[0m
[2K[2Koptimal_llama
[31m[EVAL] Best accuracy:73.55999755859375[0m
[2K[2Kprehistoric_koala
[31m[EVAL] Best accuracy:76.18999481201172[0m
[2K[2Kresolute_hedgehog
[31m[EVAL] Best accuracy:73.8499984741211[0m
[2K[2Krough_ape
[31m[EVAL] Best accuracy:73.37999725341797[0m
[2K[2Kslim_whale
[31m[EVAL] Best accuracy:72.65999603271484[0m
[2K[2Kstoic_wallaby
[31m[EVAL] Best accuracy:76.8699951171875[0m
[2K[2Ktalented_horse
[31m[EVAL] Best accuracy:74.93000030517578[0m
[2K[2Ktowering_kestrel
[31m[EVAL] Best accuracy:70.0199966430664[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 112, 'WA': 40.0, 'WM': 2.25, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 112, 'WA': 40.0, 'WM': 2.25, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 112, 'WA': 40.0, 'WM': 2.25, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6498.091824054718
ic| self.metadata["time_remaining"]: 62508.37326645851
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 90.65,
               'codename': 'CIFAR10',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_2/tests_CIFAR10_21_10_2024_07_51/Generation_3/zealous_swine',
               'input_shape': [50000, 3, 32, 32],
               'mode': 'NAS',
               'num_classes': 10,
               'test_type': 'T2_Proxy/seed_2',
               'time_remaining': 56009.998712301254,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

[2Kzealous_swine
[31m[EVAL] Best accuracy:74.68999481201172[0m
['parents.csv', 'alluring_owl', 'aloof_swine', 'attentive_galago', 'cinnamon_sturgeon', 'dandelion_ammonite', 'encouraging_wapiti', 'expert_kakapo', 'famous_tuatara', 'flying_emu', 'huge_hyrax', 'independent_copperhead', 'optimal_llama', 'prehistoric_koala', 'resolute_hedgehog', 'rough_ape', 'slim_whale', 'stoic_wallaby', 'talented_horse', 'towering_kestrel', 'zealous_swine', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.96
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T2_Proxy/seed_2/tests_CIFAR10_21_10_2024_07_51/Generation_3/attentive_galago/config.yaml

=== Training ===
  Allotted compute time remaining: ~15h,33m,29s
[31m[EVAL] Best accuracy:91.50999450683594[0m

=== Predicting ===
  Allotted compute time remaining: ~15h,3m,19s

rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/labels
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/predictions
rsync -avr --exclude='**/*x.npy' --exclude='**/train*.npy' --exclude='**/valid*.npy'   --include='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/labels/
sending incremental file list
CIFAR10/
CIFAR10/cifar-10-python.tar.gz
CIFAR10/metadata
CIFAR10/test_y.npy
ImageNet16-120/
ImageNet16-120/metadata
ImageNet16-120/test_y.npy
Sudoku/
Sudoku/Example Image with Corresponding Sudoku Grid.png
Sudoku/README
Sudoku/metadata
Sudoku/test_y.npy
Sudoku/Sokoto/
Sudoku/Sokoto/augmentation_results.json
Sudoku/Sokoto/aug_0/
Sudoku/Sokoto/aug_0/student_best
Sudoku/Sokoto/aug_0/worklog.txt
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_1/
Sudoku/Sokoto/aug_1/student_best
Sudoku/Sokoto/aug_1/worklog.txt
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_2/
Sudoku/Sokoto/aug_2/student_best
Sudoku/Sokoto/aug_2/worklog.txt
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_3/
Sudoku/Sokoto/aug_3/student_best
Sudoku/Sokoto/aug_3/worklog.txt
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_4/
Sudoku/Sokoto/aug_4/student_best
Sudoku/Sokoto/aug_4/worklog.txt
Sudoku/Sokoto/aug_5/
Sudoku/Sokoto/aug_5/student_best
Sudoku/Sokoto/aug_5/worklog.txt
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_6/
Sudoku/Sokoto/aug_6/student_best
Sudoku/Sokoto/aug_6/worklog.txt
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_7/
Sudoku/Sokoto/aug_7/student_best
Sudoku/Sokoto/aug_7/worklog.txt
Sudoku/Sokoto/aug_8/
Sudoku/Sokoto/aug_8/student_best
Sudoku/Sokoto/aug_8/worklog.txt
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_9/
Sudoku/Sokoto/aug_9/student_best
Sudoku/Sokoto/aug_9/worklog.txt
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/worklog-checkpoint.txt
Voxel/
Voxel/Rendered Examples.png
Voxel/metadata
Voxel/test_y.npy

sent 620,487,017 bytes  received 951 bytes  112,815,994.18 bytes/sec
total size is 620,331,646  speedup is 1.00
cp -R /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package2/predictions /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2
cp evaluation/score.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2/score.py
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring2; python3 score.py
===========================================================================
=============    Your Unseen Data 2024 Submission is scoring     =============
===========================================================================
== Scoring Voxel ==
Raw Score:    83.780
Adj Score:    4.339
Model Params: 2,710,550
Runtime:      10,313.8s
== Scoring ImageNet16-120 ==
Raw Score:    37.267
Adj Score:    -1.700
Model Params: 1,728,494
Runtime:      25,869.5s
== Scoring Sudoku ==
Raw Score:    38.100
Adj Score:    3.810
Model Params: 635,008
Runtime:      8,907.9s
== Scoring CIFAR10 ==
Raw Score:    91.230
Adj Score:    0.620
Model Params: 2,821,634
Runtime:      8,705.9s
===========================
Final Score: 7.069
=== JOB_STATISTICS ===
=== current date     : Mon 21 Oct 2024 10:10:40 AM CEST
= Job-ID             : 915603 on tinygpu
= Job-Name           : /home/woody/iwb3/iwb3021h/THESIS_RESULTS/hpcruns/evonas
= Job-Command        : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/evonas_job_full_main_2.sh
= Initial workdir    : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024
= Queue/Partition    : a100
= Slurm account      : iwb3 with QOS=normal
= Requested resources:  for 23:59:00
= Elapsed runtime    : 14:58:12
= Total RAM usage    : 6.0 GiB of requested  GiB (%)   
= Node list          : tg095
= Subm/Elig/Start/End: 2024-10-20T19:12:27 / 2024-10-20T19:12:27 / 2024-10-20T19:12:28 / 2024-10-21T10:10:40
======================
=== Quota infos ======
    Path              Used     SoftQ    HardQ    Gracetime  Filec    FileQ    FiHaQ    FileGrace    
    /home/hpc          102.8G   104.9G   209.7G        N/A     196K     500K   1,000K        N/A    
    /home/vault        984.8G  1048.6G  2097.2G        N/A     180K     200K     400K        N/A    
    /home/woody        802.5G  1000.0G  1500.0G        N/A     249K   5,000K   7,500K        N/A    
======================
=== GPU utilization ==
gpu_name, gpu_bus_id, pid, gpu_utilization [%], mem_utilization [%], max_memory_usage [MiB], time [ms]
NVIDIA A100-SXM4-40GB, 00000000:C1:00.0, 2749992, 23 %, 3 %, 9438 MiB, 53807312 ms
