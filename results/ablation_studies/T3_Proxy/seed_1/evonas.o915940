### Starting TaskPrologue of job 915940 on tg092 at Tue 22 Oct 2024 03:06:06 AM CEST
Running on cores 96-127 with governor ondemand
Tue Oct 22 03:06:06 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 560.28.03              Driver Version: 560.28.03      CUDA Version: 12.6     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-40GB          On  |   00000000:C1:00.0 Off |                    0 |
| N/A   32C    P0             52W /  400W |       1MiB /  40960MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
### Finished TaskPrologue

Loading python/pytorch-1.13py3.10
  Loading requirement: cuda/11.6.1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/predictions
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/datasets
rsync -ar --exclude='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/datasets/
cp -R evaluation/main.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/main.py
cp -R anki_lab_submission/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3; python3 main.py --mode T3 --select_augment Proxy
ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| unique_values: array([0.02745098, 0.05098039, 0.05490196, 0.05882353, 0.0627451 ,
                          0.07058824, 0.07450981, 0.07843138, 0.08627451, 0.09019608,
                          0.09411765, 0.09803922, 0.10196079, 0.10980392, 0.11372549,
                          0.11764706, 0.12156863, 0.1254902 , 0.12941177, 0.13333334,
                          0.13725491, 0.14117648, 0.14509805, 0.14901961, 0.15294118,
                          0.15686275, 0.16078432, 0.16470589, 0.16862746, 0.17254902,
                          0.1764706 , 0.18039216, 0.18431373, 0.1882353 , 0.19215687,
                          0.19607843, 0.2       , 0.20392157, 0.21176471, 0.21568628,
                          0.21960784, 0.22352941, 0.22745098, 0.23137255, 0.23529412,
                          0.23921569, 0.24313726, 0.24705882, 0.2509804 , 0.25490198,
                          0.25882354, 0.2627451 , 0.26666668, 0.27058825, 0.27450982,
                          0.2784314 , 0.2901961 , 0.29411766, 0.29803923, 0.3019608 ,
                          0.3137255 , 0.31764707, 0.3254902 , 0.32941177, 0.33333334,
                          0.3372549 , 0.34117648, 0.34509805, 0.34901962, 0.3529412 ,
                          0.35686275, 0.36078432, 0.3647059 , 0.36862746, 0.37254903,
                          0.3764706 , 0.38039216, 0.38431373, 0.3882353 , 0.39215687,
                          0.39607844, 0.40392157, 0.40784314, 0.4117647 , 0.41568628,
                          0.41960785, 0.42352942, 0.43137255, 0.43529412, 0.4392157 ,
                          0.44313726, 0.44705883, 0.4509804 , 0.45490196, 0.45882353,
                          0.4627451 , 0.46666667, 0.47058824, 0.4745098 , 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7372549 ,
                          0.7411765 , 0.74509805, 0.7490196 , 0.7529412 , 0.75686276,
                          0.7607843 , 0.7647059 , 0.76862746, 0.77254903, 0.7764706 ,
                          0.78039217, 0.78431374, 0.7882353 , 0.7921569 , 0.79607844,
                          0.8       , 0.8039216 , 0.80784315, 0.8117647 , 0.8156863 ,
                          0.8235294 , 0.83137256, 0.8352941 , 0.8392157 , 0.84313726,
                          0.85882354, 0.8666667 , 0.87058824, 0.8745098 , 0.8784314 ,
                          0.88235295, 0.8980392 , 0.90588236, 0.9098039 , 0.9137255 ,
                          0.91764706, 0.92156863, 0.9254902 , 0.92941177, 0.93333334,
                          0.9372549 , 0.9411765 , 0.94509804, 0.95686275, 0.9607843 ],
                         dtype=float32)
ic| C: 3
ic| H: 16
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning: The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.
  warnings.warn(
ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fd8eda034c0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd8eda02500>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd8eda03580>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd8eda02530>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fd8eda02b60>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fd8eda02a70>,
                 ToTensor(),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fd8eda02110>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['daring_crayfish',
                  'dandelion_turkey',
                  'tidy_newt',
                  'spectral_dolphin',
                  'resourceful_okapi',
                  'meticulous_panda',
                  'archetypal_vicugna',
                  'adept_magpie',
                  'fortunate_oryx',
                  'agile_labrador']
ic| params: [48.0, 120, 2.1499999999999995, 12, 8]
ic| params: [64.0, 72, 2.799999999999997, 18, 8]
ic| params: [16.0, 72, 2.05, 22, 8]
ic| params: [48.0, 112, 2.05, 19, 8]
ic| params: [56.0, 112, 2.3999999999999986, 17, 8]
ic| params: [16.0, 16, 2.05, 18, 8]
ic| params: [56.0, 120, 2.6999999999999975, 19, 8]
ic| params: [64.0, 72, 2.799999999999997, 16, 8]
ic| params: [24.0, 96, 2.3999999999999986, 20, 8]
ic| params: [16.0, 64, 2.899999999999997, 22, 8]
ic| individuals: ['daring_crayfish',
                  'dandelion_turkey',
                  'tidy_newt',
                  'spectral_dolphin',
                  'resourceful_okapi',
                  'meticulous_panda',
                  'archetypal_vicugna',
                  'adept_magpie',
                  'fortunate_oryx',
                  'agile_labrador']
ic| params_dict: {'adept_magpie': [64.0, 72, 2.799999999999997, 16, 8],
                  'agile_labrador': [16.0, 64, 2.899999999999997, 22, 8],
                  'archetypal_vicugna': [56.0, 120, 2.6999999999999975, 19, 8],
                  'dandelion_turkey': [64.0, 72, 2.799999999999997, 18, 8],
                  'daring_crayfish': [48.0, 120, 2.1499999999999995, 12, 8],
                  'fortunate_oryx': [24.0, 96, 2.3999999999999986, 20, 8],
                  'meticulous_panda': [16.0, 16, 2.05, 18, 8],
                  'resourceful_okapi': [56.0, 112, 2.3999999999999986, 17, 8],
                  'spectral_dolphin': [48.0, 112, 2.05, 19, 8],
                  'tidy_newt': [16.0, 72, 2.05, 22, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8eda034c0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8eda02500>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8eda03580>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8eda02530>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8eda02b60>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8eda02a70>,
                                                ToTensor(),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8eda02110>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
ic| f"best_augmentation: {best_aug}": 'best_augmentation: 4'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41534226432
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 107641.51691579819
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  ranking_test_df[pred_column]=sgd_regressor.predict(X_test)
ic| ranking_prediction_df:                          score
                           wine_echidna        115.532855
                           discreet_lionfish   110.938794
                           wealthy_limpet      109.914621
                           positive_heron      107.641954
                           gay_beaver          101.926087
                           crimson_rabbit      101.618755
                           small_armadillo      99.307698
                           benevolent_mastiff   90.856407
                           cornflower_toucan    87.283498
                           brown_oriole         82.996267
                           little_labradoodle   81.916410
                           hopping_donkey       77.566724
                           acrid_unicorn        73.802938
                           ultra_monkey         72.824567
                           strange_robin        72.483770
                           clay_sambar          71.953992
                           brilliant_impala     64.181644
                           watchful_marten      63.718271
                           determined_stoat     61.848806
                           hulking_swallow      60.134887
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
Mode: T3
===========================================================================
=============    Your Unseen Data 2024 Submission is running     =============
===========================================================================
========== Dataset    in16    =============================================
  Metadata:
   - input_shape         : [148700, 3, 16, 16]
   - codename            : in16
   - benchmark           : 46.38
   - num_classes         : 120
   - time_remaining      : 107999.48148584366

=== Processing Data ===
  Allotted compute time remaining: ~29h,59m,59s

=== Performing NAS ===
  Allotted compute time remaining: ~29h,54m,1s
None
Created model:  wine_echidna
Created model:  discreet_lionfish
Created model:  wealthy_limpet
Created model:  positive_heron
Created model:  gay_beaver
Created model:  crimson_rabbit
Created model:  small_armadillo
Created model:  benevolent_mastiff
Created model:  cornflower_toucan
Created model:  brown_oriole
Created model:  little_labradoodle
Created model:  hopping_donkey
Created model:  acrid_unicorn
Created model:  ultra_monkey
Created model:  strange_robin
Created model:  clay_sambar
Created model:  brilliant_impala
Created model:  watchful_marten
Created model:  determined_stoat
Created model:  hulking_swallow
[2K[2Kacrid_unicorn
[31m[EVAL] Best accuracy:18.133333206176758[0m
[2K[2Kbenevolent_mastiff
[31m[EVAL] Best accuracy:20.399999618530273[0m
[2K[2Kbrilliant_impala
[31m[EVAL] Best accuracy:21.0[0m
[2K[2Kbrown_oriole
[31m[EVAL] Best accuracy:20.100000381469727[0m
[2K[2Kclay_sambar
[31m[EVAL] Best accuracy:21.633333206176758[0m
[2K[2Kcornflower_toucan
[31m[EVAL] Best accuracy:18.733333587646484[0m
[2K[2Kcrimson_rabbit
[31m[EVAL] Best accuracy:19.53333282470703[0m
[2K[2Kdetermined_stoat
[31m[EVAL] Best accuracy:18.69999885559082[0m
[2K[2Kdiscreet_lionfish
[31m[EVAL] Best accuracy:18.866666793823242[0m
[2K[2Kgay_beaver
[31m[EVAL] Best accuracy:17.766666412353516[0m
[2K[2Khopping_donkey
[31m[EVAL] Best accuracy:19.53333282470703[0m
[2K[2Khulking_swallow
[31m[EVAL] Best accuracy:20.0[0m
[2K[2Klittle_labradoodle
[31m[EVAL] Best accuracy:19.133333206176758[0m
[2K[2Kpositive_heron
[31m[EVAL] Best accuracy:21.399999618530273[0m
[2K[2Ksmall_armadillo
[31m[EVAL] Best accuracy:15.066666603088379[0m
[2K[2Kstrange_robin
[31m[EVAL] Best accuracy:15.199999809265137[0m
[2K[2Kultra_monkey
[31m[EVAL] Best accuracy:17.600000381469727[0m
[2K[2Kwatchful_marten
[31m[EVAL] Best accuracy:19.03333282470703[0m
[2K[2Kwealthy_limpet
[31m[EVAL] Best accuracy:19.433332443237305[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7571.9340217113495
ic| self.metadata["time_remaining"]: 107641.51691579819
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 14, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 104, 'WA': 64.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwine_echidna
[31m[EVAL] Best accuracy:19.600000381469727[0m
['wine_echidna', 'discreet_lionfish', 'wealthy_limpet', 'positive_heron', 'gay_beaver', 'crimson_rabbit', 'small_armadillo', 'benevolent_mastiff', 'cornflower_toucan', 'brown_oriole', 'little_labradoodle', 'hopping_donkey', 'acrid_unicorn', 'ultra_monkey', 'strange_robin', 'clay_sambar', 'brilliant_impala', 'watchful_marten', 'determined_stoat', 'hulking_swallow', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 21.63
Child: [24.0, 112, 2.6500000000000004, 12]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.09634819197336733
[32.0, 104, 2.7, 13]
Child: [32.0, 104, 2.75, 11]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.09634819197336733
[32.0, 112, 2.7, 11]
Child: [48.0, 112, 2.85, 12]
Old_chrom: [40.0, 120, 2.849999999999997, 14]
Diff: 0.09661173673042951
[56.0, 120, 2.8000000000000003, 13]
Child: [28.0, 112, 2.7, 10]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.02083334733053699
[28.0, 112, 2.6500000000000004, 9]
Child: [28.0, 112, 2.6500000000000004, 9]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.09932438244955782
[36.0, 104, 2.6500000000000004, 9]
Child: [44.0, 120, 2.8000000000000003, 11]
Old_chrom: [40.0, 88, 2.799999999999997, 11]
Diff: 0.09775642537511815
[52.0, 120, 2.85, 12]
Child: [24.0, 112, 2.5500000000000003, 10]
Old_chrom: [20.0, 112, 2.6, 11]
Diff: 0.09932438244955943
[24.0, 104, 2.5500000000000003, 10]
Child: [40.0, 120, 2.7, 11]
Old_chrom: [32.0, 112, 2.7, 11]
Diff: 0.060897435897435896
[40.0, 112, 2.7, 12]
Child: [40.0, 112, 2.7, 12]
Old_chrom: [32.0, 104, 2.7, 13]
Diff: 0.07875457875457875
[32.0, 112, 2.75, 11]
Child: [32.0, 112, 2.75, 11]
Old_chrom: [28.0, 112, 2.75, 12]
Diff: 0.03869047619047619
[40.0, 120, 2.75, 10]
Child: [24.0, 112, 2.799999999999997, 13]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.060897435897435896
[24.0, 104, 2.849999999999997, 13]
Child: [32.0, 104, 2.799999999999997, 13]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.0
[24.0, 96, 2.849999999999997, 14]
Child: [24.0, 96, 2.849999999999997, 14]
Old_chrom: [24.0, 104, 2.849999999999997, 13]
Diff: 0.03708791208791209
[16.0, 104, 2.799999999999997, 14]
Child: [32.0, 120, 2.899999999999997, 13]
Old_chrom: [40.0, 120, 2.899999999999997, 15]
Diff: 0.07738095238095238
[40.0, 128, 2.899999999999997, 14]
Child: [40.0, 128, 2.899999999999997, 14]
Old_chrom: [40.0, 120, 2.849999999999997, 14]
Diff: 0.07986467548985247
[40.0, 120, 2.9499999999999966, 13]
Child: [40.0, 120, 2.9499999999999966, 13]
Old_chrom: [40.0, 120, 2.899999999999997, 15]
Diff: 0.09634819197336895
[32.0, 120, 2.9499999999999966, 12]
Child: [16.0, 112, 2.6999999999999975, 10]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.041666666666666664
[np.int64(16), 120, 2.7499999999999973, 11]
Child: [np.int64(16), 120, 2.7499999999999973, 11]
Old_chrom: [28.0, 112, 2.75, 12]
Diff: 0.09958792608511574
[np.int64(16), 120, 2.799999999999997, 12]
Child: [32.0, 104, 2.6999999999999975, 10]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.060897435897435896
[40.0, 96, 2.6499999999999977, 10]
Child: [40.0, 96, 2.6499999999999977, 10]
Old_chrom: [32.0, 104, 2.6499999999999977, 9]
Diff: 0.07875457875457875
[48.0, 104, 2.6999999999999975, 11]
Child: [64.0, 112, 2.6999999999999975, 11]
Old_chrom: [64.0, 112, 2.7499999999999973, 10]
Diff: 0.07849104911622609
[64.0, 112, 2.7499999999999973, 12]
Child: [64.0, 112, 2.7499999999999973, 12]
Old_chrom: [64.0, 112, 2.7499999999999973, 10]
Diff: 0.03571428571428571
[56.0, 112, 2.799999999999997, 12]
Child: [56.0, 112, 2.799999999999997, 12]
Old_chrom: [64.0, 104, 2.799999999999997, 10]
Diff: 0.0966117216117216
[48.0, 112, 2.799999999999997, 13]
Created model:  accomplished_walrus
Created model:  aromatic_pudu
Created model:  crimson_cow
Created model:  dangerous_hound
Created model:  enormous_walrus
Created model:  hysterical_smilodon
Created model:  inescapable_scorpion
Created model:  intrepid_dingo
Created model:  monumental_myna
Created model:  mottled_skua
Created model:  persimmon_mouse
Created model:  pristine_barnacle
Created model:  pygmy_silkworm
Created model:  resilient_jaybird
Created model:  rough_tanuki
Created model:  scarlet_gerbil
Created model:  teal_oxpecker
Created model:  tourmaline_polecat
Created model:  wakeful_nautilus
Created model:  wooden_dolphin
[2K[2Kaccomplished_walrus
[31m[EVAL] Best accuracy:19.566665649414062[0m
[2K[2Karomatic_pudu
[31m[EVAL] Best accuracy:20.299999237060547[0m
[2K[2Kcrimson_cow
[31m[EVAL] Best accuracy:21.299999237060547[0m
[2K[2Kdangerous_hound
[31m[EVAL] Best accuracy:19.33333396911621[0m
[2K[2Kenormous_walrus
[31m[EVAL] Best accuracy:20.733333587646484[0m
[2K[2Khysterical_smilodon
[31m[EVAL] Best accuracy:19.5[0m
[2K[2Kinescapable_scorpion
[31m[EVAL] Best accuracy:19.83333396911621[0m
[2K[2Kintrepid_dingo
[31m[EVAL] Best accuracy:19.46666717529297[0m
[2K[2Kmonumental_myna
[31m[EVAL] Best accuracy:21.69999885559082[0m
[2K[2Kmottled_skua
[31m[EVAL] Best accuracy:21.633333206176758[0m
[2K[2Kpersimmon_mouse
[31m[EVAL] Best accuracy:18.33333396911621[0m
[2K[2Kpristine_barnacle
[31m[EVAL] Best accuracy:19.03333282470703[0m
[2K[2Kpygmy_silkworm
[31m[EVAL] Best accuracy:19.5[0m
[2K[2Kresilient_jaybird
[31m[EVAL] Best accuracy:19.66666603088379[0m
[2K[2Krough_tanuki
[31m[EVAL] Best accuracy:21.03333282470703[0m
[2K[2Kscarlet_gerbil
[31m[EVAL] Best accuracy:19.233333587646484[0m
[2K[2Kteal_oxpecker
[31m[EVAL] Best accuracy:20.5[0m
[2K[2Ktourmaline_polecat
[31m[EVAL] Best accuracy:21.233333587646484[0m
[2K[2Kwakeful_nautilus
[31m[EVAL] Best accuracy:21.16666603088379[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 104, 'WA': 64.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 104, 'WA': 64.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 104, 'WA': 64.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 15015.815789222717
ic| self.metadata["time_remaining"]: 107641.51691579819
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 104, 'WA': 64.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 104, 'WA': 64.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 104, 'WA': 64.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 104, 'WA': 64.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 104, 'WA': 64.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwooden_dolphin
[31m[EVAL] Best accuracy:18.366666793823242[0m
['parents.csv', 'accomplished_walrus', 'aromatic_pudu', 'crimson_cow', 'dangerous_hound', 'enormous_walrus', 'hysterical_smilodon', 'inescapable_scorpion', 'intrepid_dingo', 'monumental_myna', 'mottled_skua', 'persimmon_mouse', 'pristine_barnacle', 'pygmy_silkworm', 'resilient_jaybird', 'rough_tanuki', 'scarlet_gerbil', 'teal_oxpecker', 'tourmaline_polecat', 'wakeful_nautilus', 'wooden_dolphin', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 21.7
Child: [44.0, 120, 2.8000000000000003, 10]
Old_chrom: [40.0, 120, 2.75, 10]
Diff: 0.08146723959241685
[36.0, 120, 2.7500000000000004, 10]
Child: [36.0, 120, 2.75, 11]
Old_chrom: [40.0, 120, 2.75, 10]
Diff: 0.03869047619047619
[36.0, 120, 2.7, 10]
Child: [36.0, 120, 2.7, 10]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.08173078322797289
[28.0, 120, 2.7, 11]
Child: [28.0, 112, 2.7, 11]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.038690490187679845
[36.0, 112, 2.6500000000000004, 11]
Child: [36.0, 112, 2.6500000000000004, 11]
Old_chrom: [32.0, 104, 2.6499999999999977, 9]
Diff: 0.07577840227559193
[44.0, 112, 2.6500000000000004, 11]
Child: [44.0, 112, 2.6500000000000004, 11]
Old_chrom: [36.0, 104, 2.6500000000000004, 9]
Diff: 0.0966117216117216
[52.0, 104, 2.6000000000000005, 10]
Child: [28.0, 120, 2.85, 11]
Old_chrom: [24.0, 104, 2.849999999999997, 13]
Diff: 0.0950091726278654
[20.0, 112, 2.8000000000000003, 11]
Child: [40.0, 112, 2.75, 11]
Old_chrom: [40.0, 120, 2.75, 10]
Diff: 0.03708791208791209
[40.0, 112, 2.8, 11]
Child: [40.0, 112, 2.8, 11]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.09661173560892528
[32.0, 112, 2.75, 12]
Child: [32.0, 112, 2.75, 11]
Old_chrom: [40.0, 120, 2.75, 10]
Diff: 0.07875457875457875
[24.0, 104, 2.7, 11]
Child: [24.0, 104, 2.7, 11]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.03708792608511574
[16.0, 112, 2.75, 10]
Child: [16.0, 112, 2.75, 10]
Old_chrom: [28.0, 112, 2.75, 12]
Diff: 0.09821428571428571
[24.0, 112, 2.75, 9]
Child: [32.0, 112, 2.85, 11]
Old_chrom: [24.0, 104, 2.849999999999997, 13]
Diff: 0.09661173673042951
[24.0, 112, 2.9, 11]
Child: [24.0, 112, 2.7, 11]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.017857156854346513
[16.0, 104, 2.75, 10]
Child: [16.0, 104, 2.75, 10]
Old_chrom: [24.0, 112, 2.75, 9]
Diff: 0.07875457875457875
[24.0, 96, 2.7, 10]
Child: [24.0, 96, 2.7, 10]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.038461552458742124
[16.0, 96, 2.6500000000000004, 9]
Child: [16.0, 96, 2.6500000000000004, 9]
Old_chrom: [16.0, 104, 2.6499999999999977, 11]
Diff: 0.054945068942258604
[np.int64(16), 96, 2.7, 8]
Child: [24.0, 112, 2.8000000000000003, 11]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.09661173673042951
[32.0, 112, 2.85, 10]
Child: [16.0, 112, 2.8000000000000003, 11]
Old_chrom: [16.0, 112, 2.899999999999997, 11]
Diff: 0.08574929257125309
[24.0, 112, 2.8000000000000003, 11]
Child: [48.0, 112, 2.75, 10]
Old_chrom: [64.0, 112, 2.7499999999999973, 10]
Diff: 0.08333334733053699
[56.0, 112, 2.75, 11]
Child: [40.0, 120, 2.7, 11]
Old_chrom: [40.0, 120, 2.75, 10]
Diff: 0.07849104911622609
[48.0, 112, 2.6500000000000004, 10]
Child: [48.0, 112, 2.6500000000000004, 10]
Old_chrom: [36.0, 104, 2.6500000000000004, 9]
Diff: 0.0995879120879121
[56.0, 120, 2.6000000000000005, 10]
Child: [40.0, 120, 2.6499999999999977, 11]
Old_chrom: [36.0, 104, 2.6500000000000004, 9]
Diff: 0.09500917150636116
[40.0, 128, 2.6999999999999975, 12]
Child: [16.0, 112, 2.75, 10]
Old_chrom: [28.0, 112, 2.75, 12]
Diff: 0.09821428571428571
[24.0, 120, 2.7, 10]
Child: [32.0, 112, 2.8000000000000003, 11]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.05494507006376284
[40.0, 112, 2.85, 10]
Child: [40.0, 112, 2.85, 10]
Old_chrom: [40.0, 120, 2.849999999999997, 14]
Diff: 0.09065935577804855
[48.0, 120, 2.85, 11]
Child: [48.0, 104, 2.6499999999999977, 10]
Old_chrom: [36.0, 104, 2.6500000000000004, 9]
Diff: 0.08035715685434652
[40.0, 112, 2.6499999999999977, 11]
Child: [16.0, 112, 2.8000000000000003, 11]
Old_chrom: [16.0, 112, 2.899999999999997, 11]
Diff: 0.08574929257125309
[24.0, 120, 2.7500000000000004, 11]
Child: [32.0, 112, 2.6499999999999977, 11]
Old_chrom: [32.0, 104, 2.6499999999999977, 9]
Diff: 0.054945054945054944
[24.0, 104, 2.599999999999998, 10]
Child: [24.0, 104, 2.599999999999998, 10]
Old_chrom: [20.0, 112, 2.6, 11]
Diff: 0.057921258198885724
[16.0, 104, 2.549999999999998, 9]
Child: [16.0, 104, 2.549999999999998, 9]
Old_chrom: [24.0, 104, 2.5500000000000003, 10]
Diff: 0.05952382230144983
[24.0, 96, 2.599999999999998, 9]
Child: [24.0, 96, 2.599999999999998, 9]
Old_chrom: [20.0, 112, 2.6, 11]
Diff: 0.09500917028679781
[32.0, 96, 2.549999999999998, 9]
Child: [32.0, 112, 2.899999999999997, 11]
Old_chrom: [16.0, 112, 2.899999999999997, 11]
Diff: 0.08333333333333333
[24.0, 104, 2.9499999999999966, 10]
Child: [16.0, 112, 2.899999999999997, 11]
Old_chrom: [16.0, 112, 2.899999999999997, 11]
Diff: 0.0
[16.0, 120, 2.849999999999997, 11]
Child: [16.0, 120, 2.849999999999997, 11]
Old_chrom: [16.0, 112, 2.899999999999997, 11]
Diff: 0.07986467548985247
[24.0, 120, 2.799999999999997, 12]
Child: [24.0, 120, 2.799999999999997, 12]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.09798534798534797
[32.0, 120, 2.7499999999999973, 12]
Created model:  airborne_quail
Created model:  ambitious_capybara
Created model:  capable_robin
Created model:  cream_quokka
Created model:  daffodil_horse
Created model:  fabulous_skua
Created model:  finicky_slug
Created model:  glaring_urchin
Created model:  just_nightingale
Created model:  laughing_numbat
Created model:  meaty_silkworm
Created model:  mega_caribou
Created model:  nifty_chachalaca
Created model:  polite_ant
Created model:  ruddy_duck
Created model:  sloppy_mastiff
Created model:  spicy_goldfish
Created model:  tan_seahorse
Created model:  unnatural_macaw
Created model:  vengeful_bustard
[2K[2Kairborne_quail
[31m[EVAL] Best accuracy:20.33333396911621[0m
[2K[2Kambitious_capybara
[31m[EVAL] Best accuracy:21.066665649414062[0m
[2K[2Kcapable_robin
[31m[EVAL] Best accuracy:19.600000381469727[0m
[2K[2Kcream_quokka
[31m[EVAL] Best accuracy:20.866666793823242[0m
[2K[2Kdaffodil_horse
[31m[EVAL] Best accuracy:21.366666793823242[0m
[2K[2Kfabulous_skua
[31m[EVAL] Best accuracy:20.266666412353516[0m
[2K[2Kfinicky_slug
[31m[EVAL] Best accuracy:20.66666603088379[0m
[2K[2Kglaring_urchin
[31m[EVAL] Best accuracy:20.399999618530273[0m
[2K[2Kjust_nightingale
[31m[EVAL] Best accuracy:21.066665649414062[0m
[2K[2Klaughing_numbat
[31m[EVAL] Best accuracy:20.766666412353516[0m
[2K[2Kmeaty_silkworm
[31m[EVAL] Best accuracy:22.100000381469727[0m
[2K[2Kmega_caribou
[31m[EVAL] Best accuracy:19.0[0m
[2K[2Knifty_chachalaca
[31m[EVAL] Best accuracy:21.733333587646484[0m
[2K[2Kpolite_ant
[31m[EVAL] Best accuracy:21.5[0m
[2K[2Kruddy_duck
[31m[EVAL] Best accuracy:21.96666717529297[0m
[2K[2Ksloppy_mastiff
[31m[EVAL] Best accuracy:19.433332443237305[0m
[2K[2Kspicy_goldfish
[31m[EVAL] Best accuracy:21.566665649414062[0m
[2K[2Ktan_seahorse
[31m[EVAL] Best accuracy:19.299999237060547[0m
[2K[2Kunnatural_macaw
[31m[EVAL] Best accuracy:19.799999237060547[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 120, 'WA': 32.0, 'WM': 2.7499999999999973, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 22223.38991498947
ic| self.metadata["time_remaining"]: 107641.51691579819
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 46.38,
               'codename': 'in16',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_1/tests_in16_22_10_2024_03_12/Generation_3/vengeful_bustard',
               'input_shape': [148700, 3, 16, 16],
               'mode': 'NAS',
               'num_classes': 120,
               'test_type': 'T3_Proxy/seed_1',
               'time_remaining': 85417.1875231266,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| unique_values: array([0., 1.], dtype=float32)
ic| C: 20
ic| H: 20
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fd833f04b80>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd833f064a0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd833f05000>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd8987f96c0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fd833f07310>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fd833f04e20>,
                 ToTensor(),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fd833f075e0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['enormous_grouse',
                  'jade_caribou',
                  'dashing_baboon',
                  'flying_wallaby',
                  'radiant_fox',
                  'mighty_hornet',
                  'scarlet_raccoon',
                  'lurking_ringtail',
                  'premium_basilisk',
                  'daring_seagull']
ic| params: [40.0, 104, 2.249999999999999, 18, 8]
ic| params: [56.0, 120, 2.849999999999997, 16, 8]
ic| params: [56.0, 120, 2.3499999999999988, 13, 8]
ic| params: [16.0, 64, 2.599999999999998, 10, 8]
ic| params: [32.0, 120, 2.899999999999997, 13, 8]
ic| params: [32.0, 56, 2.4499999999999984, 13, 8]
ic| params: [16.0, 32, 2.549999999999998, 22, 8]
ic| params: [48.0, 104, 2.7499999999999973, 12, 8]
ic| params: [56.0, 64, 2.1499999999999995, 22, 8]
ic| params: [16.0, 80, 2.799999999999997, 17, 8]
ic| individuals: ['enormous_grouse',
                  'jade_caribou',
                  'dashing_baboon',
                  'flying_wallaby',
                  'radiant_fox',
                  'mighty_hornet',
                  'scarlet_raccoon',
                  'lurking_ringtail',
                  'premium_basilisk',
                  'daring_seagull']
ic| params_dict: {'daring_seagull': [16.0, 80, 2.799999999999997, 17, 8],
                  'dashing_baboon': [56.0, 120, 2.3499999999999988, 13, 8],
                  'enormous_grouse': [40.0, 104, 2.249999999999999, 18, 8],
                  'flying_wallaby': [16.0, 64, 2.599999999999998, 10, 8],
                  'jade_caribou': [56.0, 120, 2.849999999999997, 16, 8],
                  'lurking_ringtail': [48.0, 104, 2.7499999999999973, 12, 8],
                  'mighty_hornet': [32.0, 56, 2.4499999999999984, 13, 8],
                  'premium_basilisk': [56.0, 64, 2.1499999999999995, 22, 8],
                  'radiant_fox': [32.0, 120, 2.899999999999997, 13, 8],
                  'scarlet_raccoon': [16.0, 32, 2.549999999999998, 22, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd833f04b80>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd833f064a0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd833f05000>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8987f96c0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd833f07310>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd833f04e20>,
                                                ToTensor(),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd833f075e0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 10'
ic| f"selected transform {train_transform}": ('selected transform [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, '
                                              '3.3), value=[0.0], inplace=False)]')
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41456631808
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 83029.60248112679
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| ranking_prediction_df:                              score
                           alluring_trogon         149.741486
                           organic_newt            129.109545
                           hungry_pigeon           120.473391
                           spiritual_cricket       117.635199
                           pretty_capybara         105.614563
                           ultramarine_asp         100.335108
                           brave_earthworm          98.531267
                           true_wren                94.750774
                           gainful_manul            89.291670
                           vigorous_guillemot       89.277540
                           blazing_cuckoo           86.160635
                           nice_taipan              79.168199
                           impossible_nightingale   78.217940
                           pastel_otter             77.890313
                           zippy_mammoth            76.643986
                           cheerful_macaw           75.735745
                           sensible_parrot          75.129222
                           garnet_toucanet          74.273952
                           loose_rabbit             73.577906
                           accurate_ostrich         72.353572
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 112, 'WA': 24.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 112, 'WA': 24.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvengeful_bustard
[31m[EVAL] Best accuracy:20.33333396911621[0m
['parents.csv', 'airborne_quail', 'ambitious_capybara', 'capable_robin', 'cream_quokka', 'daffodil_horse', 'fabulous_skua', 'finicky_slug', 'glaring_urchin', 'just_nightingale', 'laughing_numbat', 'meaty_silkworm', 'mega_caribou', 'nifty_chachalaca', 'polite_ant', 'ruddy_duck', 'sloppy_mastiff', 'spicy_goldfish', 'tan_seahorse', 'unnatural_macaw', 'vengeful_bustard', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 22.1
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_1/tests_in16_22_10_2024_03_12/Generation_3/meaty_silkworm/config.yaml

=== Training ===
  Allotted compute time remaining: ~23h,43m,37s
Early stopping at epoch 33
[31m[EVAL] Best accuracy:32.93333435058594[0m

=== Predicting ===
  Allotted compute time remaining: ~23h,7m,29s

========== Dataset   Volga    =============================================
  Metadata:
   - input_shape         : [50000, 20, 20, 20]
   - codename            : Volga
   - benchmark           : 71.35
   - num_classes         : 7
   - time_remaining      : 83245.8940513134

=== Processing Data ===
  Allotted compute time remaining: ~23h,7m,25s

=== Performing NAS ===
  Allotted compute time remaining: ~23h,3m,49s
spawn
Created model:  alluring_trogon
Created model:  organic_newt
Created model:  hungry_pigeon
Created model:  spiritual_cricket
Created model:  pretty_capybara
Created model:  ultramarine_asp
Created model:  brave_earthworm
Created model:  true_wren
Created model:  gainful_manul
Created model:  vigorous_guillemot
Created model:  blazing_cuckoo
Created model:  nice_taipan
Created model:  impossible_nightingale
Created model:  pastel_otter
Created model:  zippy_mammoth
Created model:  cheerful_macaw
Created model:  sensible_parrot
Created model:  garnet_toucanet
Created model:  loose_rabbit
Created model:  accurate_ostrich
[2K[2Kaccurate_ostrich
[31m[EVAL] Best accuracy:65.01000213623047[0m
[2K[2Kalluring_trogon
[31m[EVAL] Best accuracy:67.58999633789062[0m
[2K[2Kblazing_cuckoo
[31m[EVAL] Best accuracy:57.73999786376953[0m
[2K[2Kbrave_earthworm
[31m[EVAL] Best accuracy:62.22999954223633[0m
[2K[2Kcheerful_macaw
[31m[EVAL] Best accuracy:58.41999816894531[0m
[2K[2Kgainful_manul
[31m[EVAL] Best accuracy:63.959999084472656[0m
[2K[2Kgarnet_toucanet
[31m[EVAL] Best accuracy:57.63999938964844[0m
[2K[2Khungry_pigeon
[31m[EVAL] Best accuracy:61.54999923706055[0m
[2K[2Kimpossible_nightingale
[31m[EVAL] Best accuracy:62.96999740600586[0m
[2K[2Kloose_rabbit
[31m[EVAL] Best accuracy:67.79999542236328[0m
[2K[2Knice_taipan
[31m[EVAL] Best accuracy:64.43000030517578[0m
[2K[2Korganic_newt
[31m[EVAL] Best accuracy:62.09000015258789[0m
[2K[2Kpastel_otter
[31m[EVAL] Best accuracy:60.3599967956543[0m
[2K[2Kpretty_capybara
[31m[EVAL] Best accuracy:61.79999923706055[0m
[2K[2Ksensible_parrot
[31m[EVAL] Best accuracy:62.349998474121094[0m
[2K[2Kspiritual_cricket
[31m[EVAL] Best accuracy:68.55999755859375[0m
[2K[2Ktrue_wren
[31m[EVAL] Best accuracy:61.5099983215332[0m
[2K[2Kultramarine_asp
[31m[EVAL] Best accuracy:67.81999969482422[0m
[2K[2Kvigorous_guillemot
[31m[EVAL] Best accuracy:59.07999801635742[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 112, 'WA': 24.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 112, 'WA': 24.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 112, 'WA': 24.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2064.5984885692596
ic| self.metadata["time_remaining"]: 83029.60248112679
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 112, 'WA': 24.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 112, 'WA': 24.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 112, 'WA': 24.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 112, 'WA': 24.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 112, 'WA': 24.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 48.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kzippy_mammoth
[31m[EVAL] Best accuracy:61.72999954223633[0m
['alluring_trogon', 'organic_newt', 'hungry_pigeon', 'spiritual_cricket', 'pretty_capybara', 'ultramarine_asp', 'brave_earthworm', 'true_wren', 'gainful_manul', 'vigorous_guillemot', 'blazing_cuckoo', 'nice_taipan', 'impossible_nightingale', 'pastel_otter', 'zippy_mammoth', 'cheerful_macaw', 'sensible_parrot', 'garnet_toucanet', 'loose_rabbit', 'accurate_ostrich', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 68.56
Child: [28.0, 112, 2.85, 12]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.09932438244956132
[36.0, 112, 2.9, 12]
Child: [40.0, 120, 2.8000000000000003, 10]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.07875459387328665
[48.0, 112, 2.85, 10]
Child: [48.0, 112, 2.85, 10]
Old_chrom: [48.0, 120, 2.799999999999997, 9]
Diff: 0.09772181834699722
[56.0, 112, 2.8000000000000003, 10]
Child: [36.0, 112, 2.85, 11]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.08146723959241846
[36.0, 112, 2.8000000000000003, 11]
Child: [36.0, 112, 2.8000000000000003, 11]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.020833348452041232
[44.0, 112, 2.7500000000000004, 12]
Child: [24.0, 112, 2.8000000000000003, 16]
Old_chrom: [28.0, 112, 2.75, 15]
Diff: 0.09932438244955971
[32.0, 104, 2.85, 16]
Child: [44.0, 112, 2.6, 9]
Old_chrom: [56.0, 120, 2.599999999999998, 9]
Diff: 0.08173078200840954
[44.0, 104, 2.6, 9]
Child: [44.0, 104, 2.6, 9]
Old_chrom: [36.0, 112, 2.6, 10]
Diff: 0.07875457875457875
[44.0, 104, 2.6, 9]
Child: [44.0, 104, 2.6, 9]
Old_chrom: [36.0, 112, 2.6, 10]
Diff: 0.07875457875457875
[52.0, 104, 2.5500000000000003, 8]
Child: [36.0, 120, 2.75, 14]
Old_chrom: [28.0, 112, 2.75, 15]
Diff: 0.07875457875457875
[28.0, 120, 2.7, 13]
Child: [24.0, 104, 2.799999999999997, 11]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.060897435897435896
[16.0, 112, 2.849999999999997, 12]
Child: [16.0, 112, 2.849999999999997, 12]
Old_chrom: [24.0, 104, 2.849999999999997, 13]
Diff: 0.07875457875457875
[np.int64(16), 120, 2.849999999999997, 13]
Child: [np.int64(16), 120, 2.849999999999997, 13]
Old_chrom: [24.0, 104, 2.849999999999997, 13]
Diff: 0.08012820512820512
[np.int64(16), 128, 2.799999999999997, 14]
Child: [40.0, 112, 2.799999999999997, 9]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.07738095238095238
[40.0, 112, 2.849999999999997, 8]
Child: [32.0, 120, 2.799999999999997, 11]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.019230769230769232
[24.0, 128, 2.7499999999999973, 10]
Child: [24.0, 128, 2.7499999999999973, 10]
Old_chrom: [32.0, 120, 2.7499999999999973, 8]
Diff: 0.0966117216117216
[32.0, 120, 2.6999999999999975, 11]
Child: [24.0, 112, 2.799999999999997, 19]
Old_chrom: [24.0, 112, 2.6999999999999975, 19]
Diff: 0.08574929257125442
[24.0, 112, 2.799999999999997, 20]
Child: [24.0, 104, 2.3999999999999986, 13]
Old_chrom: [16.0, 104, 2.3999999999999986, 12]
Diff: 0.05952380952380952
[16.0, 112, 2.4499999999999984, 12]
Child: [16.0, 112, 2.4499999999999984, 12]
Old_chrom: [16.0, 104, 2.3999999999999986, 12]
Diff: 0.07986467548985247
[24.0, 120, 2.4999999999999982, 11]
Child: [48.0, 104, 2.849999999999997, 9]
Old_chrom: [48.0, 120, 2.799999999999997, 9]
Diff: 0.0990954447206217
[40.0, 104, 2.799999999999997, 9]
Child: [24.0, 112, 2.849999999999997, 13]
Old_chrom: [24.0, 104, 2.849999999999997, 13]
Diff: 0.019230769230769232
[16.0, 120, 2.899999999999997, 13]
Child: [48.0, 120, 2.3999999999999986, 9]
Old_chrom: [40.0, 104, 2.3999999999999986, 9]
Diff: 0.08012820512820512
[48.0, 128, 2.3499999999999988, 8]
Child: [40.0, 112, 2.6999999999999975, 9]
Old_chrom: [32.0, 120, 2.6999999999999975, 11]
Diff: 0.0966117216117216
[40.0, 120, 2.6499999999999977, 9]
Created model:  bizarre_pegasus
Created model:  black_macaque
Created model:  curvy_waxbill
Created model:  daft_ermine
Created model:  efficient_termite
Created model:  fragrant_panda
Created model:  grinning_yak
Created model:  impetuous_dove
Created model:  jasper_wallaby
Created model:  kind_doberman
Created model:  lime_agouti
Created model:  mature_orangutan
Created model:  pistachio_tiger
Created model:  precise_beaver
Created model:  ruddy_duck
Created model:  spotted_crab
Created model:  sturdy_cassowary
Created model:  succinct_antelope
Created model:  tiny_wildebeest
Created model:  ultramarine_lori
[2K[2Kbizarre_pegasus
[31m[EVAL] Best accuracy:64.83000183105469[0m
[2K[2Kblack_macaque
[31m[EVAL] Best accuracy:63.44999694824219[0m
[2K[2Kcurvy_waxbill
[31m[EVAL] Best accuracy:67.20999908447266[0m
[2K[2Kdaft_ermine
[31m[EVAL] Best accuracy:65.05999755859375[0m
[2K[2Kefficient_termite
[31m[EVAL] Best accuracy:67.68000030517578[0m
[2K[2Kfragrant_panda
[31m[EVAL] Best accuracy:64.04999542236328[0m
[2K[2Kgrinning_yak
[31m[EVAL] Best accuracy:62.869998931884766[0m
[2K[2Kimpetuous_dove
[31m[EVAL] Best accuracy:68.0999984741211[0m
[2K[2Kjasper_wallaby
[31m[EVAL] Best accuracy:63.14999771118164[0m
[2K[2Kkind_doberman
[31m[EVAL] Best accuracy:68.08999633789062[0m
[2K[2Klime_agouti
[31m[EVAL] Best accuracy:67.95999908447266[0m
[2K[2Kmature_orangutan
[31m[EVAL] Best accuracy:66.62999725341797[0m
[2K[2Kpistachio_tiger
[31m[EVAL] Best accuracy:66.83000183105469[0m
[2K[2Kprecise_beaver
[31m[EVAL] Best accuracy:61.019996643066406[0m
[2K[2Kruddy_duck
[31m[EVAL] Best accuracy:66.06999969482422[0m
[2K[2Kspotted_crab
[31m[EVAL] Best accuracy:63.63999938964844[0m
[2K[2Ksturdy_cassowary
[31m[EVAL] Best accuracy:66.56999969482422[0m
[2K[2Ksuccinct_antelope
[31m[EVAL] Best accuracy:64.19999694824219[0m
[2K[2Ktiny_wildebeest
[31m[EVAL] Best accuracy:66.97000122070312[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 48.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 48.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 48.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 4034.5854947566986
ic| self.metadata["time_remaining"]: 83029.60248112679
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 48.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 48.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 48.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 48.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 48.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 128, 'WA': 24.0, 'WM': 2.8000000000000003, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kultramarine_lori
[31m[EVAL] Best accuracy:66.01000213623047[0m
['parents.csv', 'bizarre_pegasus', 'black_macaque', 'curvy_waxbill', 'daft_ermine', 'efficient_termite', 'fragrant_panda', 'grinning_yak', 'impetuous_dove', 'jasper_wallaby', 'kind_doberman', 'lime_agouti', 'mature_orangutan', 'pistachio_tiger', 'precise_beaver', 'ruddy_duck', 'spotted_crab', 'sturdy_cassowary', 'succinct_antelope', 'tiny_wildebeest', 'ultramarine_lori', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 68.1
Child: [40.0, 112, 2.6500000000000004, 11]
Old_chrom: [32.0, 104, 2.6500000000000004, 11]
Diff: 0.060897435897435896
[32.0, 120, 2.6000000000000005, 11]
Child: [32.0, 120, 2.6000000000000005, 11]
Old_chrom: [32.0, 104, 2.6500000000000004, 11]
Diff: 0.0990954447206217
[24.0, 120, 2.5500000000000007, 11]
Child: [34.0, 120, 2.7, 11]
Old_chrom: [28.0, 120, 2.7, 13]
Diff: 0.06696428571428571
[42.0, 128, 2.7, 10]
Child: [42.0, 128, 2.7, 10]
Old_chrom: [32.0, 120, 2.6999999999999975, 11]
Diff: 0.08917125941844908
[34.0, 120, 2.75, 11]
Child: [42.0, 104, 2.6500000000000004, 10]
Old_chrom: [32.0, 104, 2.6500000000000004, 11]
Diff: 0.06994047619047619
[34.0, 104, 2.6500000000000004, 9]
Child: [34.0, 104, 2.6500000000000004, 9]
Old_chrom: [32.0, 104, 2.6500000000000004, 11]
Diff: 0.04613095238095238
[26.0, 112, 2.7, 8]
Child: [54.0, 112, 2.7, 9]
Old_chrom: [48.0, 112, 2.6999999999999975, 9]
Diff: 0.03125001399720366
[62.0, 112, 2.75, 9]
Child: [22.0, 128, 2.75, 14]
Old_chrom: [16.0, 128, 2.799999999999997, 14]
Diff: 0.09188390625908163
[np.int64(16), 120, 2.75, 15]
Child: [30.0, 112, 2.7, 12]
Old_chrom: [28.0, 120, 2.7, 13]
Diff: 0.04750457875457875
[38.0, 104, 2.7, 11]
Child: [38.0, 104, 2.7, 11]
Old_chrom: [32.0, 104, 2.6500000000000004, 11]
Diff: 0.09188390625908324
[38.0, 96, 2.75, 10]
Child: [42.0, 120, 2.75, 12]
Old_chrom: [44.0, 112, 2.7500000000000004, 12]
Diff: 0.02964744161177036
[34.0, 120, 2.75, 11]
Child: [34.0, 120, 2.75, 11]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.09028134215651752
[42.0, 128, 2.7, 12]
Child: [24.0, 120, 2.75, 13]
Old_chrom: [28.0, 120, 2.7, 13]
Diff: 0.08146723959241657
[24.0, 112, 2.75, 14]
Child: [36.0, 120, 2.8000000000000003, 12]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.05792126053995332
[44.0, 128, 2.8000000000000003, 12]
Child: [44.0, 128, 2.8000000000000003, 12]
Old_chrom: [48.0, 120, 2.799999999999997, 9]
Diff: 0.09363554625423903
[44.0, 128, 2.8000000000000003, 11]
Child: [44.0, 112, 2.75, 11]
Old_chrom: [44.0, 112, 2.7500000000000004, 12]
Diff: 0.01785714857147732
[52.0, 112, 2.7, 11]
Child: [52.0, 112, 2.7, 11]
Old_chrom: [48.0, 112, 2.6999999999999975, 9]
Diff: 0.0565476330448227
[52.0, 120, 2.75, 11]
Child: [52.0, 120, 2.75, 11]
Old_chrom: [44.0, 112, 2.7500000000000004, 12]
Diff: 0.07875458446891322
[44.0, 128, 2.8, 12]
Child: [44.0, 128, 2.8, 12]
Old_chrom: [48.0, 120, 2.799999999999997, 9]
Diff: 0.09363554513273478
[44.0, 120, 2.8499999999999996, 12]
Child: [28.0, 104, 2.5500000000000003, 13]
Old_chrom: [32.0, 112, 2.5500000000000003, 14]
Diff: 0.05792124542124542
[28.0, 104, 2.6, 12]
Child: [28.0, 104, 2.6, 12]
Old_chrom: [32.0, 104, 2.6500000000000004, 11]
Diff: 0.09932438244955971
[36.0, 112, 2.5500000000000003, 11]
Child: [32.0, 104, 2.5500000000000003, 8]
Old_chrom: [36.0, 112, 2.5500000000000003, 11]
Diff: 0.09363553113553114
[40.0, 112, 2.5000000000000004, np.int64(8)]
Child: [52.0, 112, 2.8000000000000003, 8]
Old_chrom: [48.0, 120, 2.799999999999997, 9]
Diff: 0.05792126053995332
[52.0, 112, 2.8000000000000003, 9]
Child: [52.0, 112, 2.8000000000000003, 9]
Old_chrom: [48.0, 120, 2.799999999999997, 9]
Diff: 0.040064117682810464
[44.0, 120, 2.8000000000000003, 10]
Child: [44.0, 120, 2.8000000000000003, 10]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.09958792720661999
[36.0, 120, 2.85, 9]
Child: [16.0, 120, 2.7, 14]
Old_chrom: [28.0, 120, 2.7, 13]
Diff: 0.08035714285714285
[24.0, 120, 2.7, 15]
Child: [32.0, 104, 2.7, 13]
Old_chrom: [28.0, 120, 2.7, 13]
Diff: 0.05929487179487179
[40.0, 96, 2.6500000000000004, 13]
Child: [40.0, 96, 2.6500000000000004, 13]
Old_chrom: [32.0, 104, 2.6500000000000004, 11]
Diff: 0.0966117216117216
[40.0, 88, 2.6000000000000005, 14]
Child: [56.0, 120, 2.7, 10]
Old_chrom: [48.0, 112, 2.6999999999999975, 9]
Diff: 0.07875459275178241
[48.0, 128, 2.6500000000000004, 10]
Child: [48.0, 128, 2.6500000000000004, 10]
Old_chrom: [40.0, 120, 2.6499999999999977, 9]
Diff: 0.07875459275178241
[48.0, 136, 2.6500000000000004, 10]
Child: [48.0, 136, 2.6500000000000004, 10]
Old_chrom: [40.0, 120, 2.6499999999999977, 9]
Diff: 0.09798536198255164
[48.0, 136, 2.7, 10]
Child: [16.0, 112, 2.8000000000000003, 14]
Old_chrom: [16.0, 128, 2.799999999999997, 14]
Diff: 0.03846155358024637
[np.int64(16), 120, 2.7500000000000004, 15]
Child: [np.int64(16), 120, 2.7500000000000004, 15]
Old_chrom: [16.0, 128, 2.799999999999997, 14]
Diff: 0.09772181834699345
[np.int64(16), 120, 2.7500000000000004, 16]
Child: [32.0, 112, 2.8000000000000003, 11]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 1.5118707901117004e-08
[32.0, 120, 2.85, 10]
Child: [32.0, 120, 2.85, 10]
Old_chrom: [32.0, 112, 2.799999999999997, 11]
Diff: 0.09772181834699722
[24.0, 128, 2.8000000000000003, 10]
Created model:  abstract_flamingo
Created model:  amethyst_earthworm
Created model:  burgundy_newt
Created model:  certain_griffin
Created model:  congenial_oriole
Created model:  conscious_cobra
Created model:  cyan_wildcat
Created model:  emerald_centipede
Created model:  futuristic_panda
Created model:  independent_coyote
Created model:  jasmine_yak
Created model:  juicy_hare
Created model:  malachite_pug
Created model:  mellow_seal
Created model:  nebulous_civet
Created model:  nocturnal_frog
Created model:  savvy_squirrel
Created model:  sincere_tench
Created model:  skilled_anaconda
Created model:  slim_viper
[2K[2Kabstract_flamingo
[31m[EVAL] Best accuracy:63.849998474121094[0m
[2K[2Kamethyst_earthworm
[31m[EVAL] Best accuracy:64.3499984741211[0m
[2K[2Kburgundy_newt
[31m[EVAL] Best accuracy:65.58999633789062[0m
[2K[2Kcertain_griffin
[31m[EVAL] Best accuracy:64.58000183105469[0m
[2K[2Kcongenial_oriole
[31m[EVAL] Best accuracy:65.62999725341797[0m
[2K[2Kconscious_cobra
[31m[EVAL] Best accuracy:60.91999816894531[0m
[2K[2Kcyan_wildcat
[31m[EVAL] Best accuracy:63.47999954223633[0m
[2K[2Kemerald_centipede
[31m[EVAL] Best accuracy:66.88999938964844[0m
[2K[2Kfuturistic_panda
[31m[EVAL] Best accuracy:67.88999938964844[0m
[2K[2Kindependent_coyote
[31m[EVAL] Best accuracy:67.33000183105469[0m
[2K[2Kjasmine_yak
[31m[EVAL] Best accuracy:68.11000061035156[0m
[2K[2Kjuicy_hare
[31m[EVAL] Best accuracy:67.04000091552734[0m
[2K[2Kmalachite_pug
[31m[EVAL] Best accuracy:65.3699951171875[0m
[2K[2Kmellow_seal
[31m[EVAL] Best accuracy:66.33000183105469[0m
[2K[2Knebulous_civet
[31m[EVAL] Best accuracy:67.22999572753906[0m
[2K[2Knocturnal_frog
[31m[EVAL] Best accuracy:58.06999969482422[0m
[2K[2Ksavvy_squirrel
[31m[EVAL] Best accuracy:65.79000091552734[0m
[2K[2Ksincere_tench
[31m[EVAL] Best accuracy:69.3699951171875[0m
[2K[2Kskilled_anaconda
[31m[EVAL] Best accuracy:67.0199966430664[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 128, 'WA': 24.0, 'WM': 2.8000000000000003, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 128, 'WA': 24.0, 'WM': 2.8000000000000003, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 128, 'WA': 24.0, 'WM': 2.8000000000000003, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6004.110321998596
ic| self.metadata["time_remaining"]: 83029.60248112679
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 71.35,
               'codename': 'Volga',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_1/tests_Volga_22_10_2024_10_03/Generation_3/slim_viper',
               'input_shape': [50000, 20, 20, 20],
               'mode': 'NAS',
               'num_classes': 7,
               'test_type': 'T3_Proxy/seed_1',
               'time_remaining': 77025.20871829987,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| unique_values: array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ],
                         dtype=float32)
ic| C: 1
ic| H: 9
ic| PH: 1
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fd8cd1fcaf0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd8cd1fea10>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd8cd1ff910>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd8cd1fdf60>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fd83a25c670>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fd83a25fdf0>,
                 ToTensor(),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fd83a25fd60>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['premium_anteater',
                  'married_bull',
                  'rough_otter',
                  'resourceful_perch',
                  'urban_oxpecker',
                  'ethereal_lionfish',
                  'certain_kagu',
                  'tan_mantis',
                  'cinnamon_angelfish',
                  'righteous_ladybug']
ic| params: [64.0, 104, 2.0999999999999996, 8, 8]
ic| params: [56.0, 72, 2.899999999999997, 8, 8]
ic| params: [24.0, 24, 2.249999999999999, 17, 8]
ic| params: [40.0, 40, 2.0999999999999996, 13, 8]
ic| params: [48.0, 104, 2.599999999999998, 11, 8]
ic| params: [40.0, 40, 2.299999999999999, 12, 8]
ic| params: [64.0, 64, 2.849999999999997, 21, 8]
ic| params: [24.0, 40, 2.7499999999999973, 12, 8]
ic| params: [48.0, 56, 2.549999999999998, 14, 8]
ic| params: [48.0, 120, 2.3499999999999988, 18, 8]
ic| individuals: ['premium_anteater',
                  'married_bull',
                  'rough_otter',
                  'resourceful_perch',
                  'urban_oxpecker',
                  'ethereal_lionfish',
                  'certain_kagu',
                  'tan_mantis',
                  'cinnamon_angelfish',
                  'righteous_ladybug']
ic| params_dict: {'certain_kagu': [64.0, 64, 2.849999999999997, 21, 8],
                  'cinnamon_angelfish': [48.0, 56, 2.549999999999998, 14, 8],
                  'ethereal_lionfish': [40.0, 40, 2.299999999999999, 12, 8],
                  'married_bull': [56.0, 72, 2.899999999999997, 8, 8],
                  'premium_anteater': [64.0, 104, 2.0999999999999996, 8, 8],
                  'resourceful_perch': [40.0, 40, 2.0999999999999996, 13, 8],
                  'righteous_ladybug': [48.0, 120, 2.3499999999999988, 18, 8],
                  'rough_otter': [24.0, 24, 2.249999999999999, 17, 8],
                  'tan_mantis': [24.0, 40, 2.7499999999999973, 12, 8],
                  'urban_oxpecker': [48.0, 104, 2.599999999999998, 11, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8cd1fcaf0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8cd1fea10>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8cd1ff910>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8cd1fdf60>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd83a25c670>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd83a25fdf0>,
                                                ToTensor(),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd83a25fd60>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 4'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41330802688
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 76197.17589259148
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| ranking_prediction_df:                             score
                           rare_crane             122.632115
                           spiffy_oryx            109.806758
                           straight_raptor        107.300658
                           fanatic_dragon         102.928505
                           attentive_lemming      100.902816
                           keen_poodle             99.669068
                           uncovered_corgi         96.307762
                           true_buzzard            90.638121
                           fragrant_parakeet       88.465287
                           gorgeous_pelican        85.628279
                           clever_falcon           84.930780
                           delectable_mosquito     81.579435
                           hopeful_tapir           76.730362
                           sepia_doberman          75.399706
                           awesome_crab            75.031544
                           nano_grasshopper        70.518572
                           daring_jaybird          70.483826
                           augmented_civet         68.246973
                           spectacular_cassowary   62.649631
                           eggplant_puffin         62.419977
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 24.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 24.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kslim_viper
[31m[EVAL] Best accuracy:64.23999786376953[0m
['parents.csv', 'abstract_flamingo', 'amethyst_earthworm', 'burgundy_newt', 'certain_griffin', 'congenial_oriole', 'conscious_cobra', 'cyan_wildcat', 'emerald_centipede', 'futuristic_panda', 'independent_coyote', 'jasmine_yak', 'juicy_hare', 'malachite_pug', 'mellow_seal', 'nebulous_civet', 'nocturnal_frog', 'savvy_squirrel', 'sincere_tench', 'skilled_anaconda', 'slim_viper', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 69.37
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_1/tests_Volga_22_10_2024_10_03/Generation_3/sincere_tench/config.yaml

=== Training ===
  Allotted compute time remaining: ~21h,23m,45s
Early stopping at epoch 31
[31m[EVAL] Best accuracy:78.79999542236328[0m

=== Predicting ===
  Allotted compute time remaining: ~21h,14m,49s

========== Dataset   Sokoto   =============================================
  Metadata:
   - input_shape         : [50000, 1, 9, 9]
   - codename            : Sokoto
   - benchmark           : 0.0
   - num_classes         : 9
   - time_remaining      : 76487.69297790527

=== Processing Data ===
  Allotted compute time remaining: ~21h,14m,47s

=== Performing NAS ===
  Allotted compute time remaining: ~21h,9m,57s
spawn
Created model:  rare_crane
Created model:  spiffy_oryx
Created model:  straight_raptor
Created model:  fanatic_dragon
Created model:  attentive_lemming
Created model:  keen_poodle
Created model:  uncovered_corgi
Created model:  true_buzzard
Created model:  fragrant_parakeet
Created model:  gorgeous_pelican
Created model:  clever_falcon
Created model:  delectable_mosquito
Created model:  hopeful_tapir
Created model:  sepia_doberman
Created model:  awesome_crab
Created model:  nano_grasshopper
Created model:  daring_jaybird
Created model:  augmented_civet
Created model:  spectacular_cassowary
Created model:  eggplant_puffin
[2K[2Kattentive_lemming
[31m[EVAL] Best accuracy:17.869998931884766[0m
[2K[2Kaugmented_civet
[31m[EVAL] Best accuracy:17.869998931884766[0m
[2K[2Kawesome_crab
[31m[EVAL] Best accuracy:14.779999732971191[0m
[2K[2Kclever_falcon
[31m[EVAL] Best accuracy:11.389999389648438[0m
[2K[2Kdaring_jaybird
[31m[EVAL] Best accuracy:15.299999237060547[0m
[2K[2Kdelectable_mosquito
[31m[EVAL] Best accuracy:16.369998931884766[0m
[2K[2Keggplant_puffin
[31m[EVAL] Best accuracy:15.129999160766602[0m
[2K[2Kfanatic_dragon
[31m[EVAL] Best accuracy:17.5[0m
[2K[2Kfragrant_parakeet
[31m[EVAL] Best accuracy:15.239999771118164[0m
[2K[2Kgorgeous_pelican
[31m[EVAL] Best accuracy:14.539999961853027[0m
[2K[2Khopeful_tapir
[31m[EVAL] Best accuracy:14.279999732971191[0m
[2K[2Kkeen_poodle
[31m[EVAL] Best accuracy:12.0[0m
[2K[2Knano_grasshopper
[31m[EVAL] Best accuracy:11.34999942779541[0m
[2K[2Krare_crane
[31m[EVAL] Best accuracy:12.519999504089355[0m
[2K[2Ksepia_doberman
[31m[EVAL] Best accuracy:12.75[0m
[2K[2Kspectacular_cassowary
[31m[EVAL] Best accuracy:11.389999389648438[0m
[2K[2Kspiffy_oryx
[31m[EVAL] Best accuracy:14.239999771118164[0m
[2K[2Kstraight_raptor
[31m[EVAL] Best accuracy:16.529998779296875[0m
[2K[2Ktrue_buzzard
[31m[EVAL] Best accuracy:14.819999694824219[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 24.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 24.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 24.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2567.3973894119263
ic| self.metadata["time_remaining"]: 76197.17589259148
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 24.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 24.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 24.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 24.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 24.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 16.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kuncovered_corgi
[31m[EVAL] Best accuracy:15.279999732971191[0m
['rare_crane', 'spiffy_oryx', 'straight_raptor', 'fanatic_dragon', 'attentive_lemming', 'keen_poodle', 'uncovered_corgi', 'true_buzzard', 'fragrant_parakeet', 'gorgeous_pelican', 'clever_falcon', 'delectable_mosquito', 'hopeful_tapir', 'sepia_doberman', 'awesome_crab', 'nano_grasshopper', 'daring_jaybird', 'augmented_civet', 'spectacular_cassowary', 'eggplant_puffin', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 17.87
Child: [60.0, 104, 2.6500000000000004, 9]
Old_chrom: [64.0, 96, 2.6499999999999977, 9]
Diff: 0.04006411656130622
[60.0, 96, 2.7, 8]
Child: [60.0, 96, 2.7, 8]
Old_chrom: [64.0, 96, 2.6499999999999977, 9]
Diff: 0.09932438244956104
[52.0, 88, 2.7, 9]
Child: [40.0, 96, 2.7, 10]
Old_chrom: [52.0, 88, 2.7, 9]
Diff: 0.0995879120879121
[32.0, 88, 2.75, 9]
Child: [40.0, 112, 2.6500000000000004, 11]
Old_chrom: [44.0, 104, 2.6500000000000004, 12]
Diff: 0.05792124542124542
[40.0, 104, 2.6500000000000004, 10]
Child: [40.0, 104, 2.6500000000000004, 10]
Old_chrom: [44.0, 104, 2.6500000000000004, 12]
Diff: 0.05654761904761904
[40.0, 112, 2.6500000000000004, 10]
Child: [40.0, 112, 2.6500000000000004, 10]
Old_chrom: [44.0, 104, 2.6500000000000004, 12]
Diff: 0.07577838827838827
[40.0, 104, 2.6500000000000004, 10]
Child: [40.0, 104, 2.6500000000000004, 10]
Old_chrom: [44.0, 104, 2.6500000000000004, 12]
Diff: 0.05654761904761904
[48.0, 104, 2.6500000000000004, 11]
Child: [48.0, 104, 2.6500000000000004, 11]
Old_chrom: [44.0, 104, 2.6500000000000004, 12]
Diff: 0.03869047619047619
[56.0, 104, 2.7, 12]
Child: [20.0, 104, 2.7, 13]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.09932438244956104
[20.0, 104, 2.7, 12]
Child: [36.0, 104, 2.6500000000000004, 10]
Old_chrom: [44.0, 104, 2.6500000000000004, 12]
Diff: 0.07738095238095238
[28.0, 104, 2.6000000000000005, 10]
Child: [28.0, 104, 2.6000000000000005, 10]
Old_chrom: [28.0, 112, 2.5500000000000003, 11]
Diff: 0.09772181834699559
[20.0, 104, 2.5500000000000007, 11]
Child: [24.0, 104, 2.5500000000000003, 10]
Old_chrom: [28.0, 112, 2.5500000000000003, 11]
Diff: 0.05792124542124542
[16.0, 112, 2.5500000000000003, 10]
Child: [16.0, 112, 2.5500000000000003, 10]
Old_chrom: [28.0, 112, 2.5500000000000003, 11]
Diff: 0.08035714285714285
[16.0, 120, 2.6, 11]
Child: [24.0, 96, 2.6499999999999977, 14]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.019230769230769232
[24.0, 104, 2.6999999999999975, 14]
Child: [24.0, 104, 2.6999999999999975, 14]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.06063390625908324
[32.0, 112, 2.6999999999999975, 14]
Child: [64.0, 96, 2.599999999999998, 8]
Old_chrom: [64.0, 96, 2.6499999999999977, 9]
Diff: 0.07849104911622609
[64.0, 104, 2.599999999999998, 9]
Child: [64.0, 104, 2.599999999999998, 9]
Old_chrom: [64.0, 96, 2.6499999999999977, 9]
Diff: 0.07986467548985247
[56.0, 96, 2.549999999999998, 10]
Child: [56.0, 96, 2.549999999999998, 10]
Old_chrom: [48.0, 104, 2.5500000000000003, 9]
Diff: 0.07875459153221906
[48.0, 104, 2.4999999999999982, 9]
Child: [48.0, 104, 2.4999999999999982, 9]
Old_chrom: [48.0, 104, 2.5500000000000003, 9]
Diff: 0.06063390625908459
[48.0, 112, 2.4499999999999984, 9]
Child: [48.0, 112, 2.4499999999999984, 9]
Old_chrom: [44.0, 112, 2.5, 8]
Diff: 0.09932438244956052
[48.0, 104, 2.4499999999999984, 9]
Child: [64.0, 96, 2.6999999999999975, 9]
Old_chrom: [64.0, 96, 2.6499999999999977, 9]
Diff: 0.06063390625908324
[64.0, 104, 2.7499999999999973, 10]
Child: [24.0, 112, 2.599999999999998, 14]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.07986467548985247
[24.0, 104, 2.599999999999998, 13]
Child: [24.0, 104, 2.599999999999998, 13]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.07849104911622609
[24.0, 104, 2.6499999999999977, 13]
Child: [24.0, 104, 2.6499999999999977, 13]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.017857142857142856
[32.0, 96, 2.599999999999998, 13]
Child: [16.0, 104, 2.6499999999999977, 11]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.09523809523809523
[24.0, 104, 2.6999999999999975, 12]
Child: [32.0, 112, 2.599999999999998, 8]
Old_chrom: [32.0, 96, 2.6499999999999977, 8]
Diff: 0.0990954447206217
[24.0, 104, 2.549999999999998, 9]
Child: [56.0, 112, 2.6999999999999975, 11]
Old_chrom: [56.0, 104, 2.7, 12]
Diff: 0.03708792608511574
[56.0, 112, 2.6499999999999977, 12]
Child: [56.0, 112, 2.6499999999999977, 12]
Old_chrom: [44.0, 104, 2.6500000000000004, 12]
Diff: 0.08173078322797289
[56.0, 104, 2.6499999999999977, 11]
Child: [56.0, 104, 2.6499999999999977, 11]
Old_chrom: [64.0, 96, 2.6499999999999977, 9]
Diff: 0.0966117216117216
[56.0, 96, 2.6499999999999977, 10]
Created model:  aquatic_hornet
Created model:  beige_petrel
Created model:  dancing_bobcat
Created model:  elated_chipmunk
Created model:  evasive_pigeon
Created model:  heavenly_pogona
Created model:  honest_chachalaca
Created model:  inescapable_goldfish
Created model:  lilac_pigeon
Created model:  lovely_mink
Created model:  magenta_jaguar
Created model:  poetic_tody
Created model:  prophetic_lion
Created model:  scrupulous_oryx
Created model:  smoky_bettong
Created model:  smooth_seal
Created model:  succinct_swift
Created model:  translucent_warthog
Created model:  urban_manatee
Created model:  wine_roadrunner
[2K[2Kaquatic_hornet
[31m[EVAL] Best accuracy:14.139999389648438[0m
[2K[2Kbeige_petrel
[31m[EVAL] Best accuracy:14.029999732971191[0m
[2K[2Kdancing_bobcat
[31m[EVAL] Best accuracy:17.989999771118164[0m
[2K[2Kelated_chipmunk
[31m[EVAL] Best accuracy:17.729999542236328[0m
[2K[2Kevasive_pigeon
[31m[EVAL] Best accuracy:16.119998931884766[0m
[2K[2Kheavenly_pogona
[31m[EVAL] Best accuracy:16.799999237060547[0m
[2K[2Khonest_chachalaca
[31m[EVAL] Best accuracy:17.31999969482422[0m
[2K[2Kinescapable_goldfish
[31m[EVAL] Best accuracy:14.609999656677246[0m
[2K[2Klilac_pigeon
[31m[EVAL] Best accuracy:14.799999237060547[0m
[2K[2Klovely_mink
[31m[EVAL] Best accuracy:16.079999923706055[0m
[2K[2Kmagenta_jaguar
[31m[EVAL] Best accuracy:16.100000381469727[0m
[2K[2Kpoetic_tody
[31m[EVAL] Best accuracy:13.4399995803833[0m
[2K[2Kprophetic_lion
[31m[EVAL] Best accuracy:16.06999969482422[0m
[2K[2Kscrupulous_oryx
[31m[EVAL] Best accuracy:15.6899995803833[0m
[2K[2Ksmoky_bettong
[31m[EVAL] Best accuracy:12.15999984741211[0m
[2K[2Ksmooth_seal
[31m[EVAL] Best accuracy:15.789999961853027[0m
[2K[2Ksuccinct_swift
[31m[EVAL] Best accuracy:16.809999465942383[0m
[2K[2Ktranslucent_warthog
[31m[EVAL] Best accuracy:15.699999809265137[0m
[2K[2Kurban_manatee
[31m[EVAL] Best accuracy:15.50999927520752[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 16.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 16.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 16.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 4956.349225997925
ic| self.metadata["time_remaining"]: 76197.17589259148
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 16.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 16.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 16.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 16.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 96, 'WA': 16.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 28.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwine_roadrunner
[31m[EVAL] Best accuracy:18.0[0m
['parents.csv', 'aquatic_hornet', 'beige_petrel', 'dancing_bobcat', 'elated_chipmunk', 'evasive_pigeon', 'heavenly_pogona', 'honest_chachalaca', 'inescapable_goldfish', 'lilac_pigeon', 'lovely_mink', 'magenta_jaguar', 'poetic_tody', 'prophetic_lion', 'scrupulous_oryx', 'smoky_bettong', 'smooth_seal', 'succinct_swift', 'translucent_warthog', 'urban_manatee', 'wine_roadrunner', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 18.0
Child: [32.0, 104, 2.5, 9]
Old_chrom: [44.0, 112, 2.5, 8]
Diff: 0.0995879120879121
[40.0, 96, 2.55, 10]
Child: [24.0, 96, 2.6, 9]
Old_chrom: [24.0, 104, 2.549999999999998, 9]
Diff: 0.07986467548985382
[24.0, 88, 2.6, 10]
Child: [18.0, 104, 2.5500000000000003, 10]
Old_chrom: [28.0, 112, 2.5500000000000003, 11]
Diff: 0.08917124542124541
[np.int64(16), 96, 2.5000000000000004, 9]
Child: [20.0, 104, 2.5500000000000003, 10]
Old_chrom: [28.0, 112, 2.5500000000000003, 11]
Diff: 0.07875457875457875
[20.0, 104, 2.5000000000000004, 10]
Child: [20.0, 104, 2.5000000000000004, 10]
Old_chrom: [16.0, 104, 2.4999999999999982, 13]
Diff: 0.07440477468240221
[28.0, 112, 2.5500000000000003, 11]
Child: [28.0, 112, 2.5500000000000003, 11]
Old_chrom: [28.0, 112, 2.5500000000000003, 11]
Diff: 0.0
[36.0, 112, 2.6, 11]
Child: [36.0, 112, 2.6, 11]
Old_chrom: [32.0, 96, 2.599999999999998, 13]
Diff: 0.09500917028679781
[28.0, 112, 2.6, 12]
Child: [40.0, 96, 2.7, 9]
Old_chrom: [52.0, 88, 2.7, 9]
Diff: 0.08173076923076923
[40.0, 96, 2.7, 9]
Child: [34.0, 104, 2.6500000000000004, 11]
Old_chrom: [32.0, 96, 2.6499999999999977, 8]
Diff: 0.08321887846606812
[34.0, 112, 2.6000000000000005, 10]
Child: [36.0, 104, 2.6500000000000004, 11]
Old_chrom: [32.0, 96, 2.6499999999999977, 8]
Diff: 0.09363554513273478
[28.0, 96, 2.6000000000000005, 10]
Child: [26.0, 96, 2.75, 11]
Old_chrom: [32.0, 88, 2.75, 9]
Diff: 0.08619505494505494
[18.0, 88, 2.8, 11]
Child: [28.0, 96, 2.75, 11]
Old_chrom: [32.0, 88, 2.75, 9]
Diff: 0.07577838827838827
[28.0, 104, 2.75, 12]
Child: [28.0, 104, 2.75, 12]
Old_chrom: [24.0, 104, 2.6999999999999975, 12]
Diff: 0.0814672395924182
[20.0, 96, 2.7, 13]
Child: [22.0, 104, 2.7, 12]
Old_chrom: [16.0, 96, 2.6999999999999975, 11]
Diff: 0.06833792608511574
[np.int64(16), 96, 2.7, 12]
Child: [np.int64(16), 96, 2.7, 12]
Old_chrom: [16.0, 96, 2.6999999999999975, 11]
Diff: 0.017857156854346513
[np.int64(16), 88, 2.6500000000000004, 13]
Child: [np.int64(16), 88, 2.6500000000000004, 13]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.09798536198255164
[np.int64(24), 88, 2.6500000000000004, 13]
Child: [16.0, 96, 2.5500000000000003, 9]
Old_chrom: [24.0, 104, 2.549999999999998, 9]
Diff: 0.0608974486750762
[24.0, 104, 2.5000000000000004, 10]
Child: [24.0, 104, 2.5000000000000004, 10]
Old_chrom: [16.0, 104, 2.4999999999999982, 13]
Diff: 0.09523810801573554
[24.0, 96, 2.5500000000000003, 11]
Child: [32.0, 96, 2.3999999999999986, 9]
Old_chrom: [32.0, 112, 2.3999999999999986, 8]
Diff: 0.05631868131868132
[32.0, 104, 2.3499999999999988, 9]
Child: [32.0, 104, 2.3499999999999988, 9]
Old_chrom: [32.0, 112, 2.3999999999999986, 8]
Diff: 0.09772181834699534
[24.0, 96, 2.3999999999999986, 10]
Child: [16.0, 104, 2.7, 8]
Old_chrom: [16.0, 96, 2.6999999999999975, 11]
Diff: 0.07280221179940145
[np.int64(16), 104, 2.6500000000000004, np.int64(8)]
Child: [16.0, 96, 2.6999999999999975, 12]
Old_chrom: [16.0, 96, 2.6999999999999975, 11]
Diff: 0.017857142857142856
[16.0, 88, 2.6499999999999977, 12]
Child: [16.0, 88, 2.6499999999999977, 12]
Old_chrom: [16.0, 96, 2.6999999999999975, 11]
Diff: 0.09772181834699534
[np.int64(16), 88, 2.6999999999999975, 11]
Child: [32.0, 104, 2.5500000000000003, 9]
Old_chrom: [48.0, 104, 2.5500000000000003, 9]
Diff: 0.08333333333333333
[32.0, 96, 2.6, 9]
Child: [20.0, 104, 2.5500000000000003, 12]
Old_chrom: [16.0, 104, 2.4999999999999982, 13]
Diff: 0.09932438244956077
[np.int64(16), 104, 2.6, 13]
Child: [24.0, 104, 2.5500000000000003, 12]
Old_chrom: [28.0, 112, 2.5500000000000003, 11]
Diff: 0.05792124542124542
[32.0, 96, 2.5000000000000004, 13]
Child: [32.0, 96, 2.5000000000000004, 13]
Old_chrom: [32.0, 96, 2.599999999999998, 13]
Diff: 0.08574929257125347
[40.0, 104, 2.5000000000000004, 14]
Child: [24.0, 104, 2.75, 9]
Old_chrom: [32.0, 88, 2.75, 9]
Diff: 0.08012820512820512
[32.0, 112, 2.75, 8]
Child: [20.0, 104, 2.6999999999999975, 12]
Old_chrom: [16.0, 96, 2.6999999999999975, 11]
Diff: 0.05792124542124542
[28.0, 104, 2.6999999999999975, 13]
Child: [28.0, 104, 2.6999999999999975, 13]
Old_chrom: [24.0, 104, 2.6499999999999977, 14]
Diff: 0.09932438244955943
[28.0, 104, 2.6499999999999977, 12]
Created model:  auburn_finch
Created model:  axiomatic_shrimp
Created model:  dainty_sawfly
Created model:  determined_reindeer
Created model:  dramatic_pug
Created model:  functional_millipede
Created model:  glorious_goldfish
Created model:  grinning_hawk
Created model:  lean_koel
Created model:  mottled_perch
Created model:  nickel_penguin
Created model:  perfect_walrus
Created model:  rough_elk
Created model:  stalwart_mongrel
Created model:  tangerine_gazelle
Created model:  thankful_starling
Created model:  thoughtful_ara
Created model:  translucent_mushroom
Created model:  turquoise_bear
Created model:  warm_jackrabbit
[2K[2Kauburn_finch
[31m[EVAL] Best accuracy:16.170000076293945[0m
[2K[2Kaxiomatic_shrimp
[31m[EVAL] Best accuracy:15.960000038146973[0m
[2K[2Kdainty_sawfly
[31m[EVAL] Best accuracy:16.170000076293945[0m
[2K[2Kdetermined_reindeer
[31m[EVAL] Best accuracy:13.829999923706055[0m
[2K[2Kdramatic_pug
[31m[EVAL] Best accuracy:17.84000015258789[0m
[2K[2Kfunctional_millipede
[31m[EVAL] Best accuracy:15.539999961853027[0m
[2K[2Kglorious_goldfish
[31m[EVAL] Best accuracy:17.529998779296875[0m
[2K[2Kgrinning_hawk
[31m[EVAL] Best accuracy:15.929999351501465[0m
[2K[2Klean_koel
[31m[EVAL] Best accuracy:11.920000076293945[0m
[2K[2Kmottled_perch
[31m[EVAL] Best accuracy:13.789999961853027[0m
[2K[2Knickel_penguin
[31m[EVAL] Best accuracy:11.989999771118164[0m
[2K[2Kperfect_walrus
[31m[EVAL] Best accuracy:17.719999313354492[0m
[2K[2Krough_elk
[31m[EVAL] Best accuracy:16.190000534057617[0m
[2K[2Kstalwart_mongrel
[31m[EVAL] Best accuracy:16.600000381469727[0m
[2K[2Ktangerine_gazelle
[31m[EVAL] Best accuracy:17.829999923706055[0m
[2K[2Kthankful_starling
[31m[EVAL] Best accuracy:16.809999465942383[0m
[2K[2Kthoughtful_ara
[31m[EVAL] Best accuracy:14.619999885559082[0m
[2K[2Ktranslucent_mushroom
[31m[EVAL] Best accuracy:17.10999870300293[0m
[2K[2Kturquoise_bear
[31m[EVAL] Best accuracy:18.869998931884766[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 28.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 28.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 28.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7350.495105743408
ic| self.metadata["time_remaining"]: 76197.17589259148
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 0.0,
               'codename': 'Sokoto',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_1/tests_Sokoto_22_10_2024_11_57/Generation_3/warm_jackrabbit',
               'input_shape': [50000, 1, 9, 9],
               'mode': 'NAS',
               'num_classes': 9,
               'test_type': 'T3_Proxy/seed_1',
               'time_remaining': 68846.40147089958,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| unique_values: array([0.09411765, 0.09803922, 0.10196079, 0.10588235, 0.10980392,
                          0.11372549, 0.11764706, 0.12156863, 0.1254902 , 0.12941177,
                          0.13333334, 0.13725491, 0.14117648, 0.14509805, 0.14901961,
                          0.15294118, 0.15686275, 0.16078432, 0.16470589, 0.16862746,
                          0.17254902, 0.1764706 , 0.18039216, 0.18431373, 0.1882353 ,
                          0.19215687, 0.19607843, 0.2       , 0.20392157, 0.20784314,
                          0.21176471, 0.21568628, 0.21960784, 0.22352941, 0.22745098,
                          0.23137255, 0.23529412, 0.23921569, 0.24313726, 0.24705882,
                          0.2509804 , 0.25490198, 0.25882354, 0.2627451 , 0.26666668,
                          0.27058825, 0.27450982, 0.2784314 , 0.28235295, 0.28627452,
                          0.2901961 , 0.29411766, 0.29803923, 0.3019608 , 0.30588236,
                          0.30980393, 0.3137255 , 0.31764707, 0.32156864, 0.3254902 ,
                          0.32941177, 0.33333334, 0.3372549 , 0.34117648, 0.34509805,
                          0.34901962, 0.3529412 , 0.35686275, 0.36078432, 0.3647059 ,
                          0.36862746, 0.37254903, 0.3764706 , 0.38039216, 0.38431373,
                          0.3882353 , 0.39215687, 0.39607844, 0.4       , 0.40392157,
                          0.40784314, 0.4117647 , 0.41568628, 0.41960785, 0.42352942,
                          0.42745098, 0.43137255, 0.43529412, 0.4392157 , 0.44313726,
                          0.44705883, 0.4509804 , 0.45490196, 0.45882353, 0.4627451 ,
                          0.46666667, 0.47058824, 0.4745098 , 0.47843137, 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7411765 ,
                          0.74509805, 0.7490196 , 0.7529412 , 0.75686276, 0.7647059 ,
                          0.76862746, 0.77254903, 0.7764706 , 0.78431374, 0.7882353 ,
                          0.7921569 , 0.79607844, 0.8       , 0.8039216 , 0.8156863 ,
                          0.81960785, 0.8235294 , 0.827451  , 0.83137256, 0.8392157 ,
                          0.8509804 , 0.85882354, 0.8627451 , 0.8666667 , 0.87058824,
                          0.8784314 , 0.88235295, 0.8901961 , 0.89411765, 0.90588236,
                          0.9098039 , 0.9137255 , 0.92156863, 0.92941177, 0.93333334,
                          0.9411765 , 0.9490196 , 0.9529412 , 0.972549  ], dtype=float32)
ic| C: 3
ic| H: 32
ic| PH: 4
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fd833a66a70>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd833a64490>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd833a64d90>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fd832865fc0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fd8cce8f7c0>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fd8cce8f5b0>,
                 ToTensor(),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fd8cce8f550>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['tiny_owl',
                  'sceptical_taipan',
                  'origami_chowchow',
                  'gigantic_jellyfish',
                  'jasper_quoll',
                  'robust_tanuki',
                  'monumental_leopard',
                  'determined_malamute',
                  'vegan_caiman',
                  'bold_woodlouse']
ic| params: [16.0, 48, 2.799999999999997, 15, 8]
ic| params: [64.0, 96, 2.799999999999997, 15, 8]
ic| params: [24.0, 104, 2.7499999999999973, 15, 8]
ic| params: [48.0, 96, 2.549999999999998, 16, 8]
ic| params: [48.0, 64, 2.799999999999997, 20, 8]
ic| params: [16.0, 24, 2.249999999999999, 15, 8]
ic| params: [32.0, 120, 2.4999999999999982, 20, 8]
ic| params: [16.0, 80, 2.249999999999999, 15, 8]
ic| params: [40.0, 104, 2.549999999999998, 16, 8]
ic| params: [56.0, 64, 2.899999999999997, 11, 8]
ic| individuals: ['tiny_owl',
                  'sceptical_taipan',
                  'origami_chowchow',
                  'gigantic_jellyfish',
                  'jasper_quoll',
                  'robust_tanuki',
                  'monumental_leopard',
                  'determined_malamute',
                  'vegan_caiman',
                  'bold_woodlouse']
ic| params_dict: {'bold_woodlouse': [56.0, 64, 2.899999999999997, 11, 8],
                  'determined_malamute': [16.0, 80, 2.249999999999999, 15, 8],
                  'gigantic_jellyfish': [48.0, 96, 2.549999999999998, 16, 8],
                  'jasper_quoll': [48.0, 64, 2.799999999999997, 20, 8],
                  'monumental_leopard': [32.0, 120, 2.4999999999999982, 20, 8],
                  'origami_chowchow': [24.0, 104, 2.7499999999999973, 15, 8],
                  'robust_tanuki': [16.0, 24, 2.249999999999999, 15, 8],
                  'sceptical_taipan': [64.0, 96, 2.799999999999997, 15, 8],
                  'tiny_owl': [16.0, 48, 2.799999999999997, 15, 8],
                  'vegan_caiman': [40.0, 104, 2.549999999999998, 16, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd833a66a70>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd833a64490>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd833a64d90>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd832865fc0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8cce8f7c0>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8cce8f5b0>,
                                                ToTensor(),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fd8cce8f550>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 5'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=15)]')
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41249013760
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 67689.58087348938
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| ranking_prediction_df:                            score
                           jasper_yak            129.840165
                           tremendous_groundhog  128.271978
                           brown_lorikeet        120.487813
                           helpful_terrier       102.884163
                           rational_roadrunner   102.666427
                           fresh_boar            102.223167
                           fortunate_kingfisher   95.341218
                           primitive_parakeet     90.553073
                           optimal_silkworm       85.193699
                           cautious_dingo         84.620966
                           yellow_rook            84.576753
                           nostalgic_partridge    83.341961
                           proud_mackerel         81.098609
                           savvy_harrier          75.979056
                           masked_bustard         72.712163
                           russet_polecat         69.002983
                           gentle_copperhead      68.830273
                           discreet_lorikeet      63.437755
                           colorful_seahorse      61.517315
                           portable_seagull       58.418113
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwarm_jackrabbit
[31m[EVAL] Best accuracy:16.68000030517578[0m
['parents.csv', 'auburn_finch', 'axiomatic_shrimp', 'dainty_sawfly', 'determined_reindeer', 'dramatic_pug', 'functional_millipede', 'glorious_goldfish', 'grinning_hawk', 'lean_koel', 'mottled_perch', 'nickel_penguin', 'perfect_walrus', 'rough_elk', 'stalwart_mongrel', 'tangerine_gazelle', 'thankful_starling', 'thoughtful_ara', 'translucent_mushroom', 'turquoise_bear', 'warm_jackrabbit', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 18.87
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_1/tests_Sokoto_22_10_2024_11_57/Generation_3/turquoise_bear/config.yaml

=== Training ===
  Allotted compute time remaining: ~19h,7m,26s
Early stopping at epoch 43
[31m[EVAL] Best accuracy:40.88999938964844[0m

=== Predicting ===
  Allotted compute time remaining: ~18h,53m,37s

========== Dataset  CIFAR10   =============================================
  Metadata:
   - input_shape         : [50000, 3, 32, 32]
   - codename            : CIFAR10
   - benchmark           : 90.65
   - num_classes         : 10
   - time_remaining      : 68015.4321565628

=== Processing Data ===
  Allotted compute time remaining: ~18h,53m,35s

=== Performing NAS ===
  Allotted compute time remaining: ~18h,48m,9s
spawn
Created model:  jasper_yak
Created model:  tremendous_groundhog
Created model:  brown_lorikeet
Created model:  helpful_terrier
Created model:  rational_roadrunner
Created model:  fresh_boar
Created model:  fortunate_kingfisher
Created model:  primitive_parakeet
Created model:  optimal_silkworm
Created model:  cautious_dingo
Created model:  yellow_rook
Created model:  nostalgic_partridge
Created model:  proud_mackerel
Created model:  savvy_harrier
Created model:  masked_bustard
Created model:  russet_polecat
Created model:  gentle_copperhead
Created model:  discreet_lorikeet
Created model:  colorful_seahorse
Created model:  portable_seagull
[2K[2Kbrown_lorikeet
[31m[EVAL] Best accuracy:75.43999481201172[0m
[2K[2Kcautious_dingo
[31m[EVAL] Best accuracy:74.83000183105469[0m
[2K[2Kcolorful_seahorse
[31m[EVAL] Best accuracy:73.22000122070312[0m
[2K[2Kdiscreet_lorikeet
[31m[EVAL] Best accuracy:72.29000091552734[0m
[2K[2Kfortunate_kingfisher
[31m[EVAL] Best accuracy:75.61000061035156[0m
[2K[2Kfresh_boar
[31m[EVAL] Best accuracy:77.30999755859375[0m
[2K[2Kgentle_copperhead
[31m[EVAL] Best accuracy:74.18000030517578[0m
[2K[2Khelpful_terrier
[31m[EVAL] Best accuracy:76.04000091552734[0m
[2K[2Kjasper_yak
[31m[EVAL] Best accuracy:75.20999908447266[0m
[2K[2Kmasked_bustard
[31m[EVAL] Best accuracy:70.56999969482422[0m
[2K[2Knostalgic_partridge
[31m[EVAL] Best accuracy:75.19999694824219[0m
[2K[2Koptimal_silkworm
[31m[EVAL] Best accuracy:73.11000061035156[0m
[2K[2Kportable_seagull
[31m[EVAL] Best accuracy:72.08999633789062[0m
[2K[2Kprimitive_parakeet
[31m[EVAL] Best accuracy:76.38999938964844[0m
[2K[2Kproud_mackerel
[31m[EVAL] Best accuracy:70.98999786376953[0m
[2K[2Krational_roadrunner
[31m[EVAL] Best accuracy:76.8699951171875[0m
[2K[2Krusset_polecat
[31m[EVAL] Best accuracy:71.08999633789062[0m
[2K[2Ksavvy_harrier
[31m[EVAL] Best accuracy:73.91999816894531[0m
[2K[2Ktremendous_groundhog
[31m[EVAL] Best accuracy:73.0999984741211[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2270.936987400055
ic| self.metadata["time_remaining"]: 67689.58087348938
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 22, 'W0': 120, 'WA': 40.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kyellow_rook
[31m[EVAL] Best accuracy:72.63999938964844[0m
['jasper_yak', 'tremendous_groundhog', 'brown_lorikeet', 'helpful_terrier', 'rational_roadrunner', 'fresh_boar', 'fortunate_kingfisher', 'primitive_parakeet', 'optimal_silkworm', 'cautious_dingo', 'yellow_rook', 'nostalgic_partridge', 'proud_mackerel', 'savvy_harrier', 'masked_bustard', 'russet_polecat', 'gentle_copperhead', 'discreet_lorikeet', 'colorful_seahorse', 'portable_seagull', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.31
Child: [28.0, 112, 2.4000000000000004, 10]
Old_chrom: [32.0, 120, 2.3999999999999986, 10]
Diff: 0.04006411399277149
[36.0, 104, 2.4000000000000004, 11]
Child: [36.0, 104, 2.4000000000000004, 11]
Old_chrom: [32.0, 120, 2.3999999999999986, 10]
Diff: 0.07715202608068358
[28.0, 104, 2.45, 12]
Child: [28.0, 104, 2.45, 12]
Old_chrom: [32.0, 112, 2.4499999999999984, 15]
Diff: 0.09363554256420006
[36.0, 112, 2.4000000000000004, 11]
Child: [40.0, 104, 2.6500000000000004, 8]
Old_chrom: [40.0, 104, 2.6499999999999977, 8]
Diff: 1.3997203657444208e-08
[40.0, 96, 2.7, np.int64(8)]
Child: [40.0, 96, 2.7, np.int64(8)]
Old_chrom: [40.0, 104, 2.6499999999999977, 8]
Diff: 0.0798646754898541
[48.0, 96, 2.7, np.int64(8)]
Child: [48.0, 112, 2.4000000000000004, 8]
Old_chrom: [44.0, 112, 2.45, 9]
Diff: 0.09932438244955943
[48.0, 120, 2.3500000000000005, 9]
Child: [32.0, 120, 2.2, 11]
Old_chrom: [32.0, 112, 2.1999999999999993, 12]
Diff: 0.037087920169201385
[24.0, 112, 2.2, 10]
Child: [24.0, 112, 2.2, 10]
Old_chrom: [32.0, 112, 2.1999999999999993, 12]
Diff: 0.07738096046224167
[16.0, 104, 2.2, 10]
Child: [28.0, 112, 2.4000000000000004, 10]
Old_chrom: [32.0, 120, 2.3999999999999986, 10]
Diff: 0.04006411399277149
[36.0, 120, 2.4000000000000004, 10]
Child: [36.0, 120, 2.4000000000000004, 10]
Old_chrom: [32.0, 120, 2.3999999999999986, 10]
Diff: 0.02083334476200226
[44.0, 120, 2.4000000000000004, 10]
Child: [44.0, 120, 2.4000000000000004, 10]
Old_chrom: [32.0, 120, 2.3999999999999986, 10]
Diff: 0.06250001142866893
[36.0, 128, 2.45, 9]
Child: [36.0, 128, 2.45, 9]
Old_chrom: [44.0, 112, 2.45, 9]
Diff: 0.08012820512820512
[28.0, 136, 2.5, 9]
Child: [36.0, 120, 2.15, 10]
Old_chrom: [40.0, 120, 2.1499999999999995, 10]
Diff: 0.020833339047667796
[28.0, 112, 2.1, 9]
Child: [44.0, 112, 2.45, 9]
Old_chrom: [44.0, 112, 2.45, 9]
Diff: 0.0
[36.0, 104, 2.45, 8]
Child: [36.0, 104, 2.45, 8]
Old_chrom: [44.0, 112, 2.45, 9]
Diff: 0.07875457875457875
[44.0, 104, 2.45, 9]
Child: [44.0, 104, 2.45, 9]
Old_chrom: [44.0, 112, 2.45, 9]
Diff: 0.019230769230769232
[52.0, 112, 2.45, 10]
Child: [52.0, 112, 2.45, 10]
Old_chrom: [44.0, 112, 2.45, 9]
Diff: 0.05952380952380952
[60.0, 112, 2.5, 10]
Child: [52.0, 120, 2.15, 9]
Old_chrom: [48.0, 120, 2.1999999999999993, 10]
Diff: 0.09932438244955916
[44.0, 128, 2.15, 9]
Child: [48.0, 112, 2.4000000000000004, 8]
Old_chrom: [44.0, 112, 2.45, 9]
Diff: 0.09932438244955943
[40.0, 104, 2.45, 9]
Child: [40.0, 120, 2.1999999999999993, 8]
Old_chrom: [48.0, 120, 2.1999999999999993, 10]
Diff: 0.07738095238095238
[40.0, 112, 2.249999999999999, 9]
Child: [40.0, 104, 2.6499999999999977, 8]
Old_chrom: [40.0, 104, 2.6499999999999977, 8]
Diff: 0.0
[32.0, 112, 2.6999999999999975, 8]
Child: [40.0, 104, 2.0999999999999996, 8]
Old_chrom: [40.0, 112, 2.0999999999999996, 12]
Diff: 0.09065934065934066
[48.0, 96, 2.0999999999999996, 8]
Child: [48.0, 120, 2.1499999999999995, 12]
Old_chrom: [48.0, 120, 2.1999999999999993, 10]
Diff: 0.09634819197336895
[56.0, 112, 2.1999999999999993, 13]
Child: [40.0, 104, 2.1499999999999995, 12]
Old_chrom: [40.0, 120, 2.1499999999999995, 10]
Diff: 0.07417582417582418
[40.0, 104, 2.1999999999999993, 11]
Child: [40.0, 104, 2.1999999999999993, 11]
Old_chrom: [48.0, 120, 2.1999999999999993, 10]
Diff: 0.09798534798534797
[48.0, 104, 2.249999999999999, 11]
Child: [16.0, 120, 2.0999999999999996, 8]
Old_chrom: [28.0, 112, 2.1, 9]
Diff: 0.09958791780224654
[24.0, 128, 2.05, 9]
Child: [48.0, 104, 2.6499999999999977, 10]
Old_chrom: [40.0, 104, 2.6499999999999977, 8]
Diff: 0.07738095238095238
[56.0, 104, 2.6999999999999975, 11]
Child: [56.0, 120, 2.1999999999999993, 8]
Old_chrom: [48.0, 120, 2.1999999999999993, 10]
Diff: 0.07738095238095238
[64.0, 112, 2.1999999999999993, 8]
Created model:  aboriginal_husky
Created model:  adaptable_tiger
Created model:  eccentric_spaniel
Created model:  fair_sawfish
Created model:  groovy_cheetah
Created model:  huge_manatee
Created model:  imposing_hog
Created model:  lemon_saluki
Created model:  modest_puma
Created model:  petite_shrew
Created model:  placid_skink
Created model:  precise_emu
Created model:  prehistoric_gharial
Created model:  prophetic_monkey
Created model:  resourceful_lorikeet
Created model:  sapphire_fennec
Created model:  secret_seahorse
Created model:  skinny_stingray
Created model:  stimulating_mandrill
Created model:  winged_binturong
[2K[2Kaboriginal_husky
[31m[EVAL] Best accuracy:76.22999572753906[0m
[2K[2Kadaptable_tiger
[31m[EVAL] Best accuracy:75.12999725341797[0m
[2K[2Keccentric_spaniel
[31m[EVAL] Best accuracy:74.8499984741211[0m
[2K[2Kfair_sawfish
[31m[EVAL] Best accuracy:76.18999481201172[0m
[2K[2Kgroovy_cheetah
[31m[EVAL] Best accuracy:72.68999481201172[0m
[2K[2Khuge_manatee
[31m[EVAL] Best accuracy:74.8699951171875[0m
[2K[2Kimposing_hog
[31m[EVAL] Best accuracy:74.19999694824219[0m
[2K[2Klemon_saluki
[31m[EVAL] Best accuracy:74.52999877929688[0m
[2K[2Kmodest_puma
[31m[EVAL] Best accuracy:74.83000183105469[0m
[2K[2Kpetite_shrew
[31m[EVAL] Best accuracy:75.86000061035156[0m
[2K[2Kplacid_skink
[31m[EVAL] Best accuracy:74.31999969482422[0m
[2K[2Kprecise_emu
[31m[EVAL] Best accuracy:74.65999603271484[0m
[2K[2Kprehistoric_gharial
[31m[EVAL] Best accuracy:77.40999603271484[0m
[2K[2Kprophetic_monkey
[31m[EVAL] Best accuracy:75.36000061035156[0m
[2K[2Kresourceful_lorikeet
[31m[EVAL] Best accuracy:74.13999938964844[0m
[2K[2Ksapphire_fennec
[31m[EVAL] Best accuracy:73.22000122070312[0m
[2K[2Ksecret_seahorse
[31m[EVAL] Best accuracy:78.08000183105469[0m
[2K[2Kskinny_stingray
[31m[EVAL] Best accuracy:72.5999984741211[0m
[2K[2Kstimulating_mandrill
[31m[EVAL] Best accuracy:76.79000091552734[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 4313.772921562195
ic| self.metadata["time_remaining"]: 67689.58087348938
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 64.0, 'WM': 2.4000000000000004, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwinged_binturong
[31m[EVAL] Best accuracy:77.04999542236328[0m
['parents.csv', 'aboriginal_husky', 'adaptable_tiger', 'eccentric_spaniel', 'fair_sawfish', 'groovy_cheetah', 'huge_manatee', 'imposing_hog', 'lemon_saluki', 'modest_puma', 'petite_shrew', 'placid_skink', 'precise_emu', 'prehistoric_gharial', 'prophetic_monkey', 'resourceful_lorikeet', 'sapphire_fennec', 'secret_seahorse', 'skinny_stingray', 'stimulating_mandrill', 'winged_binturong', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 78.08
Child: [28.0, 120, 2.4000000000000004, 9]
Old_chrom: [32.0, 120, 2.3999999999999986, 10]
Diff: 0.03869048761914512
[36.0, 112, 2.45, 10]
Child: [36.0, 112, 2.45, 10]
Old_chrom: [36.0, 112, 2.4000000000000004, 11]
Diff: 0.07849104911622609
[28.0, 104, 2.45, 10]
Child: [28.0, 104, 2.45, 10]
Old_chrom: [40.0, 104, 2.45, 9]
Diff: 0.08035714285714285
[20.0, 104, 2.4000000000000004, 9]
Child: [40.0, 128, 2.35, 9]
Old_chrom: [48.0, 120, 2.3500000000000005, 9]
Diff: 0.06089744161177036
[40.0, 136, 2.4, 8]
Child: [44.0, 120, 2.15, 9]
Old_chrom: [48.0, 120, 2.1999999999999993, 10]
Diff: 0.09932438244955916
[36.0, 128, 2.1999999999999997, 9]
Child: [30.0, 120, 2.25, 10]
Old_chrom: [40.0, 112, 2.249999999999999, 9]
Diff: 0.08917125350253471
[22.0, 120, 2.3, 10]
Child: [44.0, 120, 2.7, 8]
Old_chrom: [32.0, 112, 2.6999999999999975, 8]
Diff: 0.08173078322797289
[52.0, 128, 2.75, np.int64(8)]
Child: [48.0, 112, 2.45, 8]
Old_chrom: [40.0, 104, 2.45, 9]
Diff: 0.07875457875457875
[48.0, 120, 2.4000000000000004, 9]
Child: [48.0, 120, 2.4000000000000004, 9]
Old_chrom: [48.0, 120, 2.3500000000000005, 9]
Diff: 0.06063390625908324
[40.0, 112, 2.45, 9]
Child: [40.0, 112, 2.45, 9]
Old_chrom: [40.0, 104, 2.45, 9]
Diff: 0.019230769230769232
[32.0, 112, 2.4000000000000004, 8]
Child: [32.0, 112, 2.4000000000000004, 8]
Old_chrom: [32.0, 120, 2.3999999999999986, 10]
Diff: 0.05494506637372387
[40.0, 104, 2.45, 8]
Child: [40.0, 104, 2.45, 8]
Old_chrom: [40.0, 104, 2.45, 9]
Diff: 0.017857142857142856
[48.0, 104, 2.5, 9]
Child: [48.0, 104, 2.5, 9]
Old_chrom: [60.0, 112, 2.5, 10]
Diff: 0.0995879120879121
[48.0, 104, 2.5, 8]
Child: [46.0, 120, 2.5500000000000003, 10]
Old_chrom: [34.0, 112, 2.5500000000000003, 10]
Diff: 0.08173076923076923
[54.0, 112, 2.5500000000000003, 11]
Child: [32.0, 128, 2.05, 8]
Old_chrom: [24.0, 128, 2.05, 9]
Diff: 0.05952380952380952
[40.0, 120, 2.0999999999999996, 9]
Child: [40.0, 120, 2.0999999999999996, 9]
Old_chrom: [40.0, 120, 2.1499999999999995, 10]
Diff: 0.07849104911622609
[48.0, 112, 2.0999999999999996, 10]
Child: [48.0, 112, 2.0999999999999996, 10]
Old_chrom: [56.0, 120, 2.0999999999999996, 8]
Diff: 0.0966117216117216
[48.0, 104, 2.0999999999999996, 11]
Child: [56.0, 120, 2.05, 9]
Old_chrom: [56.0, 120, 2.0999999999999996, 8]
Diff: 0.07849104911622609
[48.0, 120, np.float64(2.05), 9]
Child: [36.0, 128, 2.05, 11]
Old_chrom: [24.0, 128, 2.05, 9]
Diff: 0.09821428571428571
[36.0, 120, 2.05, 12]
Child: [32.0, 120, 2.6499999999999977, 8]
Old_chrom: [40.0, 104, 2.6499999999999977, 8]
Diff: 0.08012820512820512
[24.0, 128, 2.599999999999998, 9]
Child: [32.0, 112, 2.4000000000000004, 11]
Old_chrom: [32.0, 120, 2.3999999999999986, 10]
Diff: 0.037087923516581016
[24.0, 104, 2.45, 11]
Child: [64.0, 112, 2.6499999999999977, 8]
Old_chrom: [64.0, 104, 2.599999999999998, 9]
Diff: 0.09772181834699534
[64.0, 120, 2.599999999999998, 8]
Child: [36.0, 112, 2.6499999999999977, 8]
Old_chrom: [40.0, 104, 2.6499999999999977, 8]
Diff: 0.04006410256410256
[44.0, 112, 2.6499999999999977, 9]
Child: [44.0, 112, 2.6499999999999977, 9]
Old_chrom: [40.0, 104, 2.6499999999999977, 8]
Diff: 0.05792124542124542
[44.0, 104, 2.6499999999999977, 8]
Child: [44.0, 104, 2.6499999999999977, 8]
Old_chrom: [40.0, 104, 2.6499999999999977, 8]
Diff: 0.020833333333333332
[52.0, 104, 2.6999999999999975, 9]
Child: [52.0, 104, 2.6999999999999975, 9]
Old_chrom: [48.0, 96, 2.7, 8]
Diff: 0.05792125941844908
[52.0, 96, 2.6499999999999977, 8]
Child: [52.0, 96, 2.6499999999999977, 8]
Old_chrom: [40.0, 104, 2.6499999999999977, 8]
Diff: 0.08173076923076923
[60.0, 88, 2.6499999999999977, 8]
Created model:  annoying_shark
Created model:  benevolent_groundhog
Created model:  brainy_woodlouse
Created model:  bulky_kakapo
Created model:  cuddly_lynx
Created model:  dancing_ostrich
Created model:  dashing_worm
Created model:  devious_cassowary
Created model:  fanatic_goat
Created model:  functional_cricket
Created model:  gay_dragon
Created model:  meek_harrier
Created model:  mindful_chicken
Created model:  quiet_alpaca
Created model:  sensible_moose
Created model:  sloppy_frog
Created model:  sociable_bullfrog
Created model:  sparkling_koel
Created model:  striped_clam
Created model:  stylish_vicugna
[2K[2Kannoying_shark
[31m[EVAL] Best accuracy:77.87999725341797[0m
[2K[2Kbenevolent_groundhog
[31m[EVAL] Best accuracy:78.04000091552734[0m
[2K[2Kbrainy_woodlouse
[31m[EVAL] Best accuracy:77.5999984741211[0m
[2K[2Kbulky_kakapo
[31m[EVAL] Best accuracy:72.83000183105469[0m
[2K[2Kcuddly_lynx
[31m[EVAL] Best accuracy:77.38999938964844[0m
[2K[2Kdancing_ostrich
[31m[EVAL] Best accuracy:74.16999816894531[0m
[2K[2Kdashing_worm
[31m[EVAL] Best accuracy:77.29000091552734[0m
[2K[2Kdevious_cassowary
[31m[EVAL] Best accuracy:78.00999450683594[0m
[2K[2Kfanatic_goat
[31m[EVAL] Best accuracy:74.5999984741211[0m
[2K[2Kfunctional_cricket
[31m[EVAL] Best accuracy:74.68999481201172[0m
[2K[2Kgay_dragon
[31m[EVAL] Best accuracy:71.93000030517578[0m
[2K[2Kmeek_harrier
[31m[EVAL] Best accuracy:74.1199951171875[0m
[2K[2Kmindful_chicken
[31m[EVAL] Best accuracy:73.66999816894531[0m
[2K[2Kquiet_alpaca
[31m[EVAL] Best accuracy:72.23999786376953[0m
[2K[2Ksensible_moose
[31m[EVAL] Best accuracy:76.55999755859375[0m
[2K[2Ksloppy_frog
[31m[EVAL] Best accuracy:76.08999633789062[0m
[2K[2Ksociable_bullfrog
[31m[EVAL] Best accuracy:74.30999755859375[0m
[2K[2Ksparkling_koel
[31m[EVAL] Best accuracy:75.8499984741211[0m
[2K[2Kstriped_clam
[31m[EVAL] Best accuracy:73.37999725341797[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 64.0, 'WM': 2.4000000000000004, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 64.0, 'WM': 2.4000000000000004, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 112, 'WA': 64.0, 'WM': 2.4000000000000004, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6355.508751153946
ic| self.metadata["time_remaining"]: 67689.58087348938
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 90.65,
               'codename': 'CIFAR10',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_1/tests_CIFAR10_22_10_2024_14_18/Generation_3/stylish_vicugna',
               'input_shape': [50000, 3, 32, 32],
               'mode': 'NAS',
               'num_classes': 10,
               'test_type': 'T3_Proxy/seed_1',
               'time_remaining': 61333.296504974365,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

[2Kstylish_vicugna
[31m[EVAL] Best accuracy:75.54000091552734[0m
['parents.csv', 'annoying_shark', 'benevolent_groundhog', 'brainy_woodlouse', 'bulky_kakapo', 'cuddly_lynx', 'dancing_ostrich', 'dashing_worm', 'devious_cassowary', 'fanatic_goat', 'functional_cricket', 'gay_dragon', 'meek_harrier', 'mindful_chicken', 'quiet_alpaca', 'sensible_moose', 'sloppy_frog', 'sociable_bullfrog', 'sparkling_koel', 'striped_clam', 'stylish_vicugna', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 78.04
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_1/tests_CIFAR10_22_10_2024_14_18/Generation_2/secret_seahorse/config.yaml

=== Training ===
  Allotted compute time remaining: ~17h,2m,13s
[31m[EVAL] Best accuracy:91.80999755859375[0m

=== Predicting ===
  Allotted compute time remaining: ~16h,32m,5s

rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/labels
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/predictions
rsync -avr --exclude='**/*x.npy' --exclude='**/train*.npy' --exclude='**/valid*.npy'   --include='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/labels/
sending incremental file list
CIFAR10/
CIFAR10/cifar-10-python.tar.gz
CIFAR10/metadata
CIFAR10/test_y.npy
ImageNet16-120/
ImageNet16-120/metadata
ImageNet16-120/test_y.npy
Sudoku/
Sudoku/Example Image with Corresponding Sudoku Grid.png
Sudoku/README
Sudoku/metadata
Sudoku/test_y.npy
Sudoku/Sokoto/
Sudoku/Sokoto/augmentation_results.json
Sudoku/Sokoto/aug_0/
Sudoku/Sokoto/aug_0/student_best
Sudoku/Sokoto/aug_0/worklog.txt
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_1/
Sudoku/Sokoto/aug_1/student_best
Sudoku/Sokoto/aug_1/worklog.txt
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_2/
Sudoku/Sokoto/aug_2/student_best
Sudoku/Sokoto/aug_2/worklog.txt
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_3/
Sudoku/Sokoto/aug_3/student_best
Sudoku/Sokoto/aug_3/worklog.txt
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_4/
Sudoku/Sokoto/aug_4/student_best
Sudoku/Sokoto/aug_4/worklog.txt
Sudoku/Sokoto/aug_5/
Sudoku/Sokoto/aug_5/student_best
Sudoku/Sokoto/aug_5/worklog.txt
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_6/
Sudoku/Sokoto/aug_6/student_best
Sudoku/Sokoto/aug_6/worklog.txt
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_7/
Sudoku/Sokoto/aug_7/student_best
Sudoku/Sokoto/aug_7/worklog.txt
Sudoku/Sokoto/aug_8/
Sudoku/Sokoto/aug_8/student_best
Sudoku/Sokoto/aug_8/worklog.txt
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_9/
Sudoku/Sokoto/aug_9/student_best
Sudoku/Sokoto/aug_9/worklog.txt
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/worklog-checkpoint.txt
Voxel/
Voxel/Rendered Examples.png
Voxel/metadata
Voxel/test_y.npy

sent 620,487,017 bytes  received 951 bytes  112,815,994.18 bytes/sec
total size is 620,331,646  speedup is 1.00
cp -R /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/predictions /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
cp evaluation/score.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/score.py
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3; python3 score.py
===========================================================================
=============    Your Unseen Data 2024 Submission is scoring     =============
===========================================================================
== Scoring Voxel ==
Raw Score:    79.450
Adj Score:    2.827
Model Params: 1,777,812
Runtime:      6,757.9s
== Scoring ImageNet16-120 ==
Raw Score:    33.467
Adj Score:    -2.408
Model Params: 6,808,804
Runtime:      24,750.6s
== Scoring Sudoku ==
Raw Score:    42.290
Adj Score:    4.229
Model Params: 1,330,114
Runtime:      8,471.2s
== Scoring CIFAR10 ==
Raw Score:    91.440
Adj Score:    0.845
Model Params: 1,294,188
Runtime:      8,491.0s
===========================
Final Score: 5.493
=== JOB_STATISTICS ===
=== current date     : Tue 22 Oct 2024 04:35:16 PM CEST
= Job-ID             : 915940 on tinygpu
= Job-Name           : /home/woody/iwb3/iwb3021h/THESIS_RESULTS/hpcruns/evonas
= Job-Command        : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/evonas_job_full_main_3.sh
= Initial workdir    : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024
= Queue/Partition    : a100
= Slurm account      : iwb3 with QOS=normal
= Requested resources:  for 23:59:00
= Elapsed runtime    : 13:29:19
= Total RAM usage    : 6.2 GiB of requested  GiB (%)   
= Node list          : tg092
= Subm/Elig/Start/End: 2024-10-21T14:08:14 / 2024-10-21T14:08:14 / 2024-10-22T03:05:57 / 2024-10-22T16:35:16
======================
=== Quota infos ======
    Path              Used     SoftQ    HardQ    Gracetime  Filec    FileQ    FiHaQ    FileGrace    
    /home/hpc          102.9G   104.9G   209.7G        N/A     196K     500K   1,000K        N/A    
    /home/vault        984.8G  1048.6G  2097.2G        N/A     180K     200K     400K        N/A    
    /home/woody        847.4G  1000.0G  1500.0G        N/A     256K   5,000K   7,500K        N/A    
======================
=== GPU utilization ==
gpu_name, gpu_bus_id, pid, gpu_utilization [%], mem_utilization [%], max_memory_usage [MiB], time [ms]
NVIDIA A100-SXM4-40GB, 00000000:C1:00.0, 2313637, 24 %, 4 %, 9666 MiB, 48481930 ms
