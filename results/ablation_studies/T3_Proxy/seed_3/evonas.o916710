### Starting TaskPrologue of job 916710 on tg090 at Wed 23 Oct 2024 12:59:33 PM CEST
Running on cores 64-95 with governor ondemand
Wed Oct 23 12:59:33 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 560.28.03              Driver Version: 560.28.03      CUDA Version: 12.6     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-40GB          On  |   00000000:81:00.0 Off |                    0 |
| N/A   38C    P0             57W /  400W |       1MiB /  40960MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
### Finished TaskPrologue

Loading python/pytorch-1.13py3.10
  Loading requirement: cuda/11.6.1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/predictions
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/datasets
rsync -ar --exclude='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/datasets/
cp -R evaluation/main.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/main.py
cp -R anki_lab_submission/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3; python3 main.py --mode T3 --select_augment Proxy
ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| unique_values: array([0.02745098, 0.05098039, 0.05490196, 0.05882353, 0.0627451 ,
                          0.07058824, 0.07450981, 0.07843138, 0.08627451, 0.09019608,
                          0.09411765, 0.09803922, 0.10196079, 0.10980392, 0.11372549,
                          0.11764706, 0.12156863, 0.1254902 , 0.12941177, 0.13333334,
                          0.13725491, 0.14117648, 0.14509805, 0.14901961, 0.15294118,
                          0.15686275, 0.16078432, 0.16470589, 0.16862746, 0.17254902,
                          0.1764706 , 0.18039216, 0.18431373, 0.1882353 , 0.19215687,
                          0.19607843, 0.2       , 0.20392157, 0.21176471, 0.21568628,
                          0.21960784, 0.22352941, 0.22745098, 0.23137255, 0.23529412,
                          0.23921569, 0.24313726, 0.24705882, 0.2509804 , 0.25490198,
                          0.25882354, 0.2627451 , 0.26666668, 0.27058825, 0.27450982,
                          0.2784314 , 0.2901961 , 0.29411766, 0.29803923, 0.3019608 ,
                          0.3137255 , 0.31764707, 0.3254902 , 0.32941177, 0.33333334,
                          0.3372549 , 0.34117648, 0.34509805, 0.34901962, 0.3529412 ,
                          0.35686275, 0.36078432, 0.3647059 , 0.36862746, 0.37254903,
                          0.3764706 , 0.38039216, 0.38431373, 0.3882353 , 0.39215687,
                          0.39607844, 0.40392157, 0.40784314, 0.4117647 , 0.41568628,
                          0.41960785, 0.42352942, 0.43137255, 0.43529412, 0.4392157 ,
                          0.44313726, 0.44705883, 0.4509804 , 0.45490196, 0.45882353,
                          0.4627451 , 0.46666667, 0.47058824, 0.4745098 , 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7372549 ,
                          0.7411765 , 0.74509805, 0.7490196 , 0.7529412 , 0.75686276,
                          0.7607843 , 0.7647059 , 0.76862746, 0.77254903, 0.7764706 ,
                          0.78039217, 0.78431374, 0.7882353 , 0.7921569 , 0.79607844,
                          0.8       , 0.8039216 , 0.80784315, 0.8117647 , 0.8156863 ,
                          0.8235294 , 0.83137256, 0.8352941 , 0.8392157 , 0.84313726,
                          0.85882354, 0.8666667 , 0.87058824, 0.8745098 , 0.8784314 ,
                          0.88235295, 0.8980392 , 0.90588236, 0.9098039 , 0.9137255 ,
                          0.91764706, 0.92156863, 0.9254902 , 0.92941177, 0.93333334,
                          0.9372549 , 0.9411765 , 0.94509804, 0.95686275, 0.9607843 ],
                         dtype=float32)
ic| C: 3
ic| H: 16
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning: The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.
  warnings.warn(
ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7ff123347ee0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff123347fa0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff123344f70>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff123347fd0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7ff123345090>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7ff123345840>,
                 ToTensor(),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7ff1233452a0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['devious_fossa',
                  'xanthic_ara',
                  'poised_dachshund',
                  'bronze_angelfish',
                  'russet_orca',
                  'gay_mink',
                  'sensible_dragon',
                  'enchanted_cockatoo',
                  'remarkable_jaguar',
                  'omniscient_chachalaca',
                  'ruby_turaco',
                  'astonishing_hedgehog',
                  'wisteria_dolphin',
                  'quartz_rat',
                  'carrot_hawk',
                  'foamy_uakari',
                  'roaring_coucal',
                  'clay_bulldog',
                  'bouncy_coyote',
                  'imported_galago']
ic| params: [48.0, 80, 2.249999999999999, 13, 8]
ic| params: [16.0, 88, 2.05, 22, 8]
ic| params: [48.0, 112, 2.3499999999999988, 19, 8]
ic| params: [40.0, 64, 2.249999999999999, 11, 8]
ic| params: [40.0, 104, 2.05, 18, 8]
ic| params: [64.0, 88, 2.0999999999999996, 12, 8]
ic| params: [40.0, 88, 2.6499999999999977, 19, 8]
ic| params: [56.0, 112, 2.7499999999999973, 22, 8]
ic| params: [16.0, 16, 2.249999999999999, 15, 8]
ic| params: [56.0, 64, 2.4999999999999982, 14, 8]
ic| params: [32.0, 80, 2.6999999999999975, 17, 8]
ic| params: [56.0, 96, 2.4499999999999984, 17, 8]
ic| params: [48.0, 88, 2.1999999999999993, 19, 8]
ic| params: [32.0, 48, 2.1999999999999993, 9, 8]
ic| params: [16.0, 56, 2.1499999999999995, 14, 8]
ic| params: [32.0, 64, 2.6999999999999975, 21, 8]
ic| params: [48.0, 88, 2.0999999999999996, 14, 8]
ic| params: [32.0, 80, 2.3999999999999986, 8, 8]
ic| params: [16.0, 24, 2.899999999999997, 8, 8]
ic| params: [32.0, 88, 2.4499999999999984, 10, 8]
ic| individuals: ['devious_fossa',
                  'xanthic_ara',
                  'poised_dachshund',
                  'bronze_angelfish',
                  'russet_orca',
                  'gay_mink',
                  'sensible_dragon',
                  'enchanted_cockatoo',
                  'remarkable_jaguar',
                  'omniscient_chachalaca',
                  'ruby_turaco',
                  'astonishing_hedgehog',
                  'wisteria_dolphin',
                  'quartz_rat',
                  'carrot_hawk',
                  'foamy_uakari',
                  'roaring_coucal',
                  'clay_bulldog',
                  'bouncy_coyote',
                  'imported_galago']
ic| params_dict: {'astonishing_hedgehog': [56.0, 96, 2.4499999999999984, 17, 8],
                  'bouncy_coyote': [16.0, 24, 2.899999999999997, 8, 8],
                  'bronze_angelfish': [40.0, 64, 2.249999999999999, 11, 8],
                  'carrot_hawk': [16.0, 56, 2.1499999999999995, 14, 8],
                  'clay_bulldog': [32.0, 80, 2.3999999999999986, 8, 8],
                  'devious_fossa': [48.0, 80, 2.249999999999999, 13, 8],
                  'enchanted_cockatoo': [56.0, 112, 2.7499999999999973, 22, 8],
                  'foamy_uakari': [32.0, 64, 2.6999999999999975, 21, 8],
                  'gay_mink': [64.0, 88, 2.0999999999999996, 12, 8],
                  'imported_galago': [32.0, 88, 2.4499999999999984, 10, 8],
                  'omniscient_chachalaca': [56.0, 64, 2.4999999999999982, 14, 8],
                  'poised_dachshund': [48.0, 112, 2.3499999999999988, 19, 8],
                  'quartz_rat': [32.0, 48, 2.1999999999999993, 9, 8],
                  'remarkable_jaguar': [16.0, 16, 2.249999999999999, 15, 8],
                  'roaring_coucal': [48.0, 88, 2.0999999999999996, 14, 8],
                  'ruby_turaco': [32.0, 80, 2.6999999999999975, 17, 8],
                  'russet_orca': [40.0, 104, 2.05, 18, 8],
                  'sensible_dragon': [40.0, 88, 2.6499999999999977, 19, 8],
                  'wisteria_dolphin': [48.0, 88, 2.1999999999999993, 19, 8],
                  'xanthic_ara': [16.0, 88, 2.05, 22, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff123347ee0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff123347fa0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff123344f70>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff123347fd0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff123345090>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff123345840>,
                                                ToTensor(),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff1233452a0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
ic| f"best_augmentation: {best_aug}": 'best_augmentation: 5'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=15)]')
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41727164416
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 107423.10053515434
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  ranking_test_df[pred_column]=sgd_regressor.predict(X_test)
ic| ranking_prediction_df:                         score
                           important_badger   124.590466
                           gifted_oarfish     117.755448
                           sociable_clam      115.967164
                           gregarious_moth    114.228078
                           delicate_tody      111.226324
                           jade_wolverine     108.355938
                           just_gecko         105.826398
                           exuberant_zebu     105.223118
                           lean_quoll          99.171364
                           miniature_trout     97.761412
                           maize_pillbug       96.221101
                           gregarious_crab     89.539163
                           optimal_pug         84.951675
                           olive_tuatara       84.130756
                           adorable_porpoise   82.830096
                           crafty_snail        79.950982
                           carmine_llama       79.221033
                           clay_hornet         78.133286
                           cuddly_dingo        78.011433
                           tested_pogona       74.490705
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
Mode: T3
===========================================================================
=============    Your Unseen Data 2024 Submission is running     =============
===========================================================================
========== Dataset    in16    =============================================
  Metadata:
   - input_shape         : [148700, 3, 16, 16]
   - codename            : in16
   - benchmark           : 46.38
   - num_classes         : 120
   - time_remaining      : 107999.50489115715

=== Processing Data ===
  Allotted compute time remaining: ~29h,59m,59s

=== Performing NAS ===
  Allotted compute time remaining: ~29h,50m,23s
None
Created model:  important_badger
Created model:  gifted_oarfish
Created model:  sociable_clam
Created model:  gregarious_moth
Created model:  delicate_tody
Created model:  jade_wolverine
Created model:  just_gecko
Created model:  exuberant_zebu
Created model:  lean_quoll
Created model:  miniature_trout
Created model:  maize_pillbug
Created model:  gregarious_crab
Created model:  optimal_pug
Created model:  olive_tuatara
Created model:  adorable_porpoise
Created model:  crafty_snail
Created model:  carmine_llama
Created model:  clay_hornet
Created model:  cuddly_dingo
Created model:  tested_pogona
[2K[2Kadorable_porpoise
[31m[EVAL] Best accuracy:14.366666793823242[0m
[2K[2Kcarmine_llama
[31m[EVAL] Best accuracy:14.466666221618652[0m
[2K[2Kclay_hornet
[31m[EVAL] Best accuracy:15.066666603088379[0m
[2K[2Kcrafty_snail
[31m[EVAL] Best accuracy:17.96666717529297[0m
[2K[2Kcuddly_dingo
[31m[EVAL] Best accuracy:17.33333396911621[0m
[2K[2Kdelicate_tody
[31m[EVAL] Best accuracy:21.799999237060547[0m
[2K[2Kexuberant_zebu
[31m[EVAL] Best accuracy:19.600000381469727[0m
[2K[2Kgifted_oarfish
[31m[EVAL] Best accuracy:19.69999885559082[0m
[2K[2Kgregarious_crab
[31m[EVAL] Best accuracy:17.733333587646484[0m
[2K[2Kgregarious_moth
[31m[EVAL] Best accuracy:20.266666412353516[0m
[2K[2Kimportant_badger
[31m[EVAL] Best accuracy:20.399999618530273[0m
[2K[2Kjade_wolverine
[31m[EVAL] Best accuracy:20.33333396911621[0m
[2K[2Kjust_gecko
[31m[EVAL] Best accuracy:17.933332443237305[0m
[2K[2Klean_quoll
[31m[EVAL] Best accuracy:19.19999885559082[0m
[2K[2Kmaize_pillbug
[31m[EVAL] Best accuracy:18.433332443237305[0m
[2K[2Kminiature_trout
[31m[EVAL] Best accuracy:15.300000190734863[0m
[2K[2Kolive_tuatara
[31m[EVAL] Best accuracy:20.0[0m
[2K[2Koptimal_pug
[31m[EVAL] Best accuracy:19.66666603088379[0m
[2K[2Ksociable_clam
[31m[EVAL] Best accuracy:17.766666412353516[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7555.282385110855
ic| self.metadata["time_remaining"]: 107423.10053515434
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 64.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 96, 'WA': 16.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Ktested_pogona
[31m[EVAL] Best accuracy:18.33333396911621[0m
['important_badger', 'gifted_oarfish', 'sociable_clam', 'gregarious_moth', 'delicate_tody', 'jade_wolverine', 'just_gecko', 'exuberant_zebu', 'lean_quoll', 'miniature_trout', 'maize_pillbug', 'gregarious_crab', 'optimal_pug', 'olive_tuatara', 'adorable_porpoise', 'crafty_snail', 'carmine_llama', 'clay_hornet', 'cuddly_dingo', 'tested_pogona', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 21.8
Child: [32.0, 104, 2.3000000000000003, 10]
Old_chrom: [32.0, 112, 2.3499999999999988, 10]
Diff: 0.07986467548985167
[32.0, 96, 2.35, 10]
Child: [32.0, 96, 2.35, 10]
Old_chrom: [32.0, 112, 2.3499999999999988, 10]
Diff: 0.03846154835905609
[32.0, 88, 2.35, 10]
Child: [32.0, 88, 2.35, 10]
Old_chrom: [32.0, 112, 2.3499999999999988, 10]
Diff: 0.05769231758982532
[40.0, 88, 2.35, 9]
Child: [52.0, 120, 2.35, 10]
Old_chrom: [48.0, 120, 2.4000000000000004, 10]
Diff: 0.08146723959241685
[52.0, 112, 2.4, 10]
Child: [52.0, 112, 2.4, 10]
Old_chrom: [48.0, 120, 2.4000000000000004, 10]
Diff: 0.040064108278437024
[52.0, 112, 2.4, 11]
Child: [52.0, 112, 2.4, 11]
Old_chrom: [48.0, 120, 2.4000000000000004, 10]
Diff: 0.05792125113557988
[52.0, 120, 2.4, 10]
Child: [52.0, 120, 2.4, 10]
Old_chrom: [48.0, 120, 2.4000000000000004, 10]
Diff: 0.020833339047667796
[44.0, 112, 2.4, 10]
Child: [44.0, 112, 2.4, 10]
Old_chrom: [48.0, 120, 2.4000000000000004, 10]
Diff: 0.040064108278437024
[36.0, 112, 2.4499999999999997, 9]
Child: [36.0, 112, 2.4499999999999997, 9]
Old_chrom: [24.0, 112, 2.4499999999999984, 10]
Diff: 0.08035715275466049
[28.0, 104, 2.4, 8]
Child: [36.0, 112, 2.25, 10]
Old_chrom: [32.0, 96, 2.249999999999999, 10]
Diff: 0.05929487987616109
[44.0, 112, 2.3, 9]
Child: [44.0, 112, 2.3, 9]
Old_chrom: [36.0, 120, 2.3000000000000003, 10]
Diff: 0.07875458446891322
[52.0, 104, 2.25, 8]
Child: [48.0, 112, 2.35, 10]
Old_chrom: [32.0, 112, 2.3499999999999988, 10]
Diff: 0.08333334323085095
[56.0, 104, 2.35, 10]
Child: [24.0, 104, 2.5500000000000003, 13]
Old_chrom: [24.0, 112, 2.6, 13]
Diff: 0.07986467548985247
[16.0, 96, 2.5000000000000004, 13]
Child: [32.0, 120, 2.1999999999999993, 10]
Old_chrom: [40.0, 120, 2.1999999999999993, 10]
Diff: 0.041666666666666664
[32.0, 120, 2.1999999999999993, 9]
Child: [32.0, 120, 2.1999999999999993, 9]
Old_chrom: [40.0, 120, 2.1999999999999993, 10]
Diff: 0.05952380952380952
[40.0, 128, 2.1499999999999995, 8]
Child: [64.0, 120, 2.3499999999999988, 10]
Old_chrom: [64.0, 120, 2.299999999999999, 9]
Diff: 0.07849104911622609
[64.0, 112, 2.3499999999999988, 10]
Child: [64.0, 112, 2.3499999999999988, 10]
Old_chrom: [64.0, 120, 2.299999999999999, 9]
Diff: 0.09772181834699534
[56.0, 104, 2.299999999999999, 9]
Child: [32.0, 112, 2.249999999999999, 10]
Old_chrom: [32.0, 112, 2.3499999999999988, 10]
Diff: 0.08574929257125442
[32.0, 112, 2.1999999999999993, 9]
Child: [32.0, 112, 2.1999999999999993, 9]
Old_chrom: [40.0, 120, 2.1999999999999993, 10]
Diff: 0.07875457875457875
[32.0, 120, 2.1499999999999995, 9]
Child: [32.0, 120, 2.1499999999999995, 9]
Old_chrom: [40.0, 128, 2.1499999999999995, 8]
Diff: 0.07875457875457875
[24.0, 128, 2.0999999999999996, 10]
Child: [40.0, 120, 2.249999999999999, 10]
Old_chrom: [40.0, 120, 2.1999999999999993, 10]
Diff: 0.06063390625908324
[40.0, 120, 2.249999999999999, 10]
Child: [40.0, 120, 2.249999999999999, 10]
Old_chrom: [40.0, 120, 2.1999999999999993, 10]
Diff: 0.06063390625908324
[40.0, 112, 2.299999999999999, 10]
Child: [40.0, 112, 2.299999999999999, 10]
Old_chrom: [36.0, 120, 2.3000000000000003, 10]
Diff: 0.040064112461620185
[32.0, 112, 2.3499999999999988, 10]
Child: [32.0, 112, 2.3499999999999988, 10]
Old_chrom: [32.0, 112, 2.3499999999999988, 10]
Diff: 0.0
[32.0, 104, 2.299999999999999, 11]
Child: [32.0, 104, 2.299999999999999, 11]
Old_chrom: [32.0, 112, 2.3499999999999988, 10]
Diff: 0.09772181834699534
[32.0, 96, 2.3499999999999988, 12]
Child: [64.0, 96, 2.249999999999999, 9]
Old_chrom: [52.0, 104, 2.25, 8]
Diff: 0.0995879201692014
[56.0, 88, 2.1999999999999993, 10]
Created model:  able_flamingo
Created model:  apricot_kudu
Created model:  celadon_pegasus
Created model:  convivial_hummingbird
Created model:  cuddly_marten
Created model:  ebony_jackdaw
Created model:  economic_junglefowl
Created model:  fantastic_coati
Created model:  glistening_partridge
Created model:  impossible_petrel
Created model:  quirky_sawfish
Created model:  rich_lemming
Created model:  satisfied_bear
Created model:  sly_grasshopper
Created model:  spry_wombat
Created model:  strange_warthog
Created model:  sweet_alpaca
Created model:  thundering_malamute
Created model:  vermilion_earwig
Created model:  wooden_booby
[2K[2Kable_flamingo
[31m[EVAL] Best accuracy:21.66666603088379[0m
[2K[2Kapricot_kudu
[31m[EVAL] Best accuracy:20.46666717529297[0m
[2K[2Kceladon_pegasus
[31m[EVAL] Best accuracy:20.0[0m
[2K[2Kconvivial_hummingbird
[31m[EVAL] Best accuracy:18.866666793823242[0m
[2K[2Kcuddly_marten
[31m[EVAL] Best accuracy:21.133333206176758[0m
[2K[2Kebony_jackdaw
[31m[EVAL] Best accuracy:20.933332443237305[0m
[2K[2Keconomic_junglefowl
[31m[EVAL] Best accuracy:19.399999618530273[0m
[2K[2Kfantastic_coati
[31m[EVAL] Best accuracy:19.899999618530273[0m
[2K[2Kglistening_partridge
[31m[EVAL] Best accuracy:18.5[0m
[2K[2Kimpossible_petrel
[31m[EVAL] Best accuracy:18.96666717529297[0m
[2K[2Kquirky_sawfish
[31m[EVAL] Best accuracy:21.299999237060547[0m
[2K[2Krich_lemming
[31m[EVAL] Best accuracy:18.83333396911621[0m
[2K[2Ksatisfied_bear
[31m[EVAL] Best accuracy:22.0[0m
[2K[2Ksly_grasshopper
[31m[EVAL] Best accuracy:21.0[0m
[2K[2Kspry_wombat
[31m[EVAL] Best accuracy:21.566665649414062[0m
[2K[2Kstrange_warthog
[31m[EVAL] Best accuracy:18.66666603088379[0m
[2K[2Ksweet_alpaca
[31m[EVAL] Best accuracy:18.46666717529297[0m
[2K[2Kthundering_malamute
[31m[EVAL] Best accuracy:21.299999237060547[0m
[2K[2Kvermilion_earwig
[31m[EVAL] Best accuracy:17.233333587646484[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 96, 'WA': 16.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 96, 'WA': 16.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 96, 'WA': 16.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 14781.89556312561
ic| self.metadata["time_remaining"]: 107423.10053515434
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 96, 'WA': 16.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 96, 'WA': 16.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 96, 'WA': 16.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 96, 'WA': 16.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 96, 'WA': 16.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 136, 'WA': 32.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwooden_booby
[31m[EVAL] Best accuracy:20.0[0m
['parents.csv', 'able_flamingo', 'apricot_kudu', 'celadon_pegasus', 'convivial_hummingbird', 'cuddly_marten', 'ebony_jackdaw', 'economic_junglefowl', 'fantastic_coati', 'glistening_partridge', 'impossible_petrel', 'quirky_sawfish', 'rich_lemming', 'satisfied_bear', 'sly_grasshopper', 'spry_wombat', 'strange_warthog', 'sweet_alpaca', 'thundering_malamute', 'vermilion_earwig', 'wooden_booby', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 22.0
Child: [36.0, 120, 2.6500000000000004, 10]
Old_chrom: [40.0, 120, 2.6500000000000004, 13]
Diff: 0.0744047619047619
[28.0, 128, 2.7, 9]
Child: [36.0, 120, 2.5, 9]
Old_chrom: [40.0, 120, 2.4499999999999984, 9]
Diff: 0.08146723959241765
[44.0, 112, 2.5, 9]
Child: [24.0, 120, 2.6500000000000004, 13]
Old_chrom: [24.0, 112, 2.6, 13]
Diff: 0.07986467548985274
[32.0, 128, 2.6500000000000004, 13]
Child: [32.0, 128, 2.6500000000000004, 13]
Old_chrom: [40.0, 120, 2.6500000000000004, 13]
Diff: 0.060897435897435896
[24.0, 120, 2.6000000000000005, 13]
Child: [24.0, 120, 2.6000000000000005, 13]
Old_chrom: [28.0, 120, 2.5500000000000003, 13]
Diff: 0.08146723959241685
[16.0, 120, 2.6500000000000004, 13]
Child: [38.0, 120, 2.4000000000000004, 10]
Old_chrom: [36.0, 120, 2.3000000000000003, 10]
Diff: 0.09616595923792128
[30.0, 120, 2.3500000000000005, 11]
Child: [40.0, 128, 2.3000000000000003, 9]
Old_chrom: [36.0, 120, 2.3000000000000003, 10]
Diff: 0.05792124542124542
[32.0, 120, 2.35, 8]
Child: [32.0, 120, 2.35, 8]
Old_chrom: [32.0, 112, 2.3499999999999988, 10]
Diff: 0.05494506484257257
[24.0, 128, 2.3000000000000003, 9]
Child: [24.0, 128, 2.3000000000000003, 9]
Old_chrom: [36.0, 120, 2.3000000000000003, 10]
Diff: 0.0995879120879121
[16.0, 120, 2.2500000000000004, 9]
Child: [28.0, 120, 2.45, 13]
Old_chrom: [24.0, 112, 2.4499999999999984, 10]
Diff: 0.09363554256420006
[20.0, 112, 2.5, 14]
Child: [28.0, 128, 2.3000000000000003, 12]
Old_chrom: [36.0, 120, 2.3000000000000003, 10]
Diff: 0.0966117216117216
[28.0, 136, 2.35, 12]
Child: [36.0, 120, 2.849999999999997, 10]
Old_chrom: [32.0, 112, 2.849999999999997, 10]
Diff: 0.04006410256410256
[44.0, 112, 2.849999999999997, 9]
Child: [44.0, 112, 2.849999999999997, 9]
Old_chrom: [32.0, 112, 2.849999999999997, 10]
Diff: 0.08035714285714285
[52.0, 104, 2.799999999999997, 8]
Child: [32.0, 120, 2.4499999999999984, 10]
Old_chrom: [24.0, 112, 2.4499999999999984, 10]
Diff: 0.060897435897435896
[40.0, 112, 2.3999999999999986, 9]
Child: [40.0, 112, 2.3999999999999986, 9]
Old_chrom: [40.0, 120, 2.4499999999999984, 9]
Diff: 0.07986467548985247
[40.0, 104, 2.3499999999999988, 9]
Child: [40.0, 104, 2.3499999999999988, 9]
Old_chrom: [32.0, 112, 2.3499999999999988, 10]
Diff: 0.07875457875457875
[40.0, 96, 2.3999999999999986, 10]
Child: [40.0, 96, 2.3999999999999986, 10]
Old_chrom: [48.0, 120, 2.4000000000000004, 10]
Diff: 0.0993589857876433
[32.0, 104, 2.3999999999999986, 11]
Child: [40.0, 128, 2.849999999999997, 10]
Old_chrom: [32.0, 112, 2.849999999999997, 10]
Diff: 0.08012820512820512
[48.0, 128, 2.849999999999997, 11]
Child: [32.0, 112, 2.4499999999999984, 16]
Old_chrom: [32.0, 112, 2.4999999999999982, 18]
Diff: 0.09634819197336895
[40.0, 112, 2.3999999999999986, 16]
Child: [40.0, 120, 2.3000000000000003, 10]
Old_chrom: [40.0, 120, 2.1999999999999993, 10]
Diff: 0.08574929257125499
[48.0, 120, 2.3000000000000003, 9]
Child: [40.0, 120, 2.3000000000000003, 8]
Old_chrom: [36.0, 120, 2.3000000000000003, 10]
Diff: 0.05654761904761904
[32.0, 128, 2.2500000000000004, 8]
Child: [32.0, 128, 2.2500000000000004, 8]
Old_chrom: [38.0, 128, 2.25, 9]
Diff: 0.04910714857147732
[32.0, 136, 2.3000000000000003, np.int64(8)]
Child: [32.0, 136, 2.3000000000000003, np.int64(8)]
Old_chrom: [36.0, 120, 2.3000000000000003, 10]
Diff: 0.0950091575091575
[32.0, 136, 2.2500000000000004, np.int64(8)]
Child: [16.0, 120, 2.3000000000000003, 10]
Old_chrom: [16.0, 120, 2.2500000000000004, 9]
Diff: 0.07849104911622609
[np.int64(16), 128, 2.35, 11]
Child: [np.int64(16), 128, 2.35, 11]
Old_chrom: [30.0, 120, 2.3500000000000005, 11]
Diff: 0.09214744161177037
[np.int64(16), 128, 2.4, 10]
Child: [40.0, 120, 2.1499999999999995, 8]
Old_chrom: [40.0, 120, 2.1999999999999993, 10]
Diff: 0.09634819197336895
[48.0, 128, 2.0999999999999996, np.int64(8)]
Child: [16.0, 120, 2.4499999999999984, 16]
Old_chrom: [16.0, 120, 2.4499999999999984, 16]
Diff: 0.0
[16.0, 112, 2.4499999999999984, 15]
Child: [16.0, 112, 2.4499999999999984, 15]
Old_chrom: [16.0, 120, 2.4499999999999984, 16]
Diff: 0.03708791208791209
[16.0, 112, 2.3999999999999986, 15]
Child: [16.0, 112, 2.3999999999999986, 15]
Old_chrom: [16.0, 120, 2.4499999999999984, 16]
Diff: 0.09772181834699534
[np.int64(16), 112, 2.3499999999999988, 16]
Child: [40.0, 128, 2.4499999999999984, 16]
Old_chrom: [40.0, 112, 2.3999999999999986, 16]
Diff: 0.0990954447206217
[32.0, 136, 2.3999999999999986, 17]
Created model:  bizarre_squirrel
Created model:  blue_mandrill
Created model:  cautious_guppy
Created model:  charcoal_dogfish
Created model:  festive_mouflon
Created model:  flawless_guppy
Created model:  glaring_pudu
Created model:  hilarious_lizard
Created model:  innocent_boa
Created model:  jovial_dolphin
Created model:  magenta_centipede
Created model:  manipulative_manatee
Created model:  meek_rattlesnake
Created model:  mutant_nautilus
Created model:  quirky_jackal
Created model:  scrupulous_uakari
Created model:  sensible_rattlesnake
Created model:  spotted_panther
Created model:  tested_rattlesnake
Created model:  vague_bumblebee
[2K[2Kbizarre_squirrel
[31m[EVAL] Best accuracy:21.133333206176758[0m
[2K[2Kblue_mandrill
[31m[EVAL] Best accuracy:21.53333282470703[0m
[2K[2Kcautious_guppy
[31m[EVAL] Best accuracy:20.933332443237305[0m
[2K[2Kcharcoal_dogfish
[31m[EVAL] Best accuracy:20.46666717529297[0m
[2K[2Kfestive_mouflon
[31m[EVAL] Best accuracy:21.46666717529297[0m
[2K[2Kflawless_guppy
[31m[EVAL] Best accuracy:20.933332443237305[0m
[2K[2Kglaring_pudu
[31m[EVAL] Best accuracy:20.366666793823242[0m
[2K[2Khilarious_lizard
[31m[EVAL] Best accuracy:20.766666412353516[0m
[2K[2Kinnocent_boa
[31m[EVAL] Best accuracy:19.299999237060547[0m
[2K[2Kjovial_dolphin
[31m[EVAL] Best accuracy:21.0[0m
[2K[2Kmagenta_centipede
[31m[EVAL] Best accuracy:20.733333587646484[0m
[2K[2Kmanipulative_manatee
[31m[EVAL] Best accuracy:17.266666412353516[0m
[2K[2Kmeek_rattlesnake
[31m[EVAL] Best accuracy:22.066665649414062[0m
[2K[2Kmutant_nautilus
[31m[EVAL] Best accuracy:18.266666412353516[0m
[2K[2Kquirky_jackal
[31m[EVAL] Best accuracy:20.83333396911621[0m
[2K[2Kscrupulous_uakari
[31m[EVAL] Best accuracy:19.96666717529297[0m
[2K[2Ksensible_rattlesnake
[31m[EVAL] Best accuracy:20.96666717529297[0m
[2K[2Kspotted_panther
[31m[EVAL] Best accuracy:21.299999237060547[0m
[2K[2Ktested_rattlesnake
[31m[EVAL] Best accuracy:20.03333282470703[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 136, 'WA': 32.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 136, 'WA': 32.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 136, 'WA': 32.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 22028.772360801697
ic| self.metadata["time_remaining"]: 107423.10053515434
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 46.38,
               'codename': 'in16',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_3/tests_in16_23_10_2024_13_11/Generation_3/vague_bumblebee',
               'input_shape': [148700, 3, 16, 16],
               'mode': 'NAS',
               'num_classes': 120,
               'test_type': 'T3_Proxy/seed_3',
               'time_remaining': 85393.62740421295,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| unique_values: array([0., 1.], dtype=float32)
ic| C: 20
ic| H: 20
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7ff060e55cf0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff060e55d50>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff060e568c0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff121a4b880>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7ff06045c970>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7ff060e577c0>,
                 ToTensor(),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7ff060e55b10>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['swinging_oxpecker',
                  'translucent_buffalo',
                  'muscular_cassowary',
                  'charcoal_agouti',
                  'glistening_husky',
                  'monumental_platypus',
                  'monumental_hawk',
                  'pumpkin_snake',
                  'umber_deer',
                  'sparkling_hog',
                  'cinnamon_markhor',
                  'awesome_quail',
                  'strong_gorilla',
                  'delectable_oyster',
                  'myrtle_orca',
                  'coral_impala',
                  'flashy_beluga',
                  'striped_avocet',
                  'pistachio_wrasse',
                  'asparagus_penguin']
ic| params: [32.0, 72, 2.6999999999999975, 8, 8]
ic| params: [56.0, 112, 2.4999999999999982, 10, 8]
ic| params: [40.0, 72, 2.1499999999999995, 11, 8]
ic| params: [64.0, 112, 2.4999999999999982, 14, 8]
ic| params: [40.0, 48, 2.7499999999999973, 15, 8]
ic| params: [64.0, 104, 2.4999999999999982, 8, 8]
ic| params: [64.0, 120, 2.4999999999999982, 19, 8]
ic| params: [16.0, 16, 2.249999999999999, 18, 8]
ic| params: [16.0, 32, 2.0999999999999996, 8, 8]
ic| params: [32.0, 112, 2.599999999999998, 16, 8]
ic| params: [24.0, 40, 2.05, 12, 8]
ic| params: [64.0, 120, 2.899999999999997, 20, 8]
ic| params: [32.0, 40, 2.799999999999997, 14, 8]
ic| params: [16.0, 16, 2.6999999999999975, 8, 8]
ic| params: [24.0, 32, 2.6999999999999975, 16, 8]
ic| params: [24.0, 48, 2.05, 10, 8]
ic| params: [40.0, 96, 2.0999999999999996, 22, 8]
ic| params: [48.0, 96, 2.849999999999997, 14, 8]
ic| params: [56.0, 72, 2.4999999999999982, 10, 8]
ic| params: [16.0, 64, 2.599999999999998, 15, 8]
ic| individuals: ['swinging_oxpecker',
                  'translucent_buffalo',
                  'muscular_cassowary',
                  'charcoal_agouti',
                  'glistening_husky',
                  'monumental_platypus',
                  'monumental_hawk',
                  'pumpkin_snake',
                  'umber_deer',
                  'sparkling_hog',
                  'cinnamon_markhor',
                  'awesome_quail',
                  'strong_gorilla',
                  'delectable_oyster',
                  'myrtle_orca',
                  'coral_impala',
                  'flashy_beluga',
                  'striped_avocet',
                  'pistachio_wrasse',
                  'asparagus_penguin']
ic| params_dict: {'asparagus_penguin': [16.0, 64, 2.599999999999998, 15, 8],
                  'awesome_quail': [64.0, 120, 2.899999999999997, 20, 8],
                  'charcoal_agouti': [64.0, 112, 2.4999999999999982, 14, 8],
                  'cinnamon_markhor': [24.0, 40, 2.05, 12, 8],
                  'coral_impala': [24.0, 48, 2.05, 10, 8],
                  'delectable_oyster': [16.0, 16, 2.6999999999999975, 8, 8],
                  'flashy_beluga': [40.0, 96, 2.0999999999999996, 22, 8],
                  'glistening_husky': [40.0, 48, 2.7499999999999973, 15, 8],
                  'monumental_hawk': [64.0, 120, 2.4999999999999982, 19, 8],
                  'monumental_platypus': [64.0, 104, 2.4999999999999982, 8, 8],
                  'muscular_cassowary': [40.0, 72, 2.1499999999999995, 11, 8],
                  'myrtle_orca': [24.0, 32, 2.6999999999999975, 16, 8],
                  'pistachio_wrasse': [56.0, 72, 2.4999999999999982, 10, 8],
                  'pumpkin_snake': [16.0, 16, 2.249999999999999, 18, 8],
                  'sparkling_hog': [32.0, 112, 2.599999999999998, 16, 8],
                  'striped_avocet': [48.0, 96, 2.849999999999997, 14, 8],
                  'strong_gorilla': [32.0, 40, 2.799999999999997, 14, 8],
                  'swinging_oxpecker': [32.0, 72, 2.6999999999999975, 8, 8],
                  'translucent_buffalo': [56.0, 112, 2.4999999999999982, 10, 8],
                  'umber_deer': [16.0, 32, 2.0999999999999996, 8, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff060e55cf0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff060e55d50>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff060e568c0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff121a4b880>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff06045c970>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff060e577c0>,
                                                ToTensor(),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff060e55b10>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 11'
ic| f"selected transform {train_transform}": ('selected transform [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, '
                                              '3.3), value=[0.0], inplace=False), RandomCrop(size=(20, 20), padding=[2, 2, '
                                              '2, 2], pad_if_needed=False, fill=0, padding_mode=constant)]')
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41660055552
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 83082.32793164253
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| ranking_prediction_df:                            score
                           piquant_gharial       147.727018
                           spiked_cassowary      130.187628
                           cyan_silkworm         114.525423
                           ultramarine_eel       110.527002
                           airborne_cricket      107.942946
                           optimistic_barnacle   101.769905
                           hopeful_panther        98.573144
                           resourceful_aardwark   96.918508
                           ingenious_hippo        94.666449
                           sociable_smilodon      93.787674
                           refined_limpet         90.668841
                           burrowing_viper        89.314277
                           bouncy_slug            87.676283
                           obedient_robin         87.205377
                           succinct_trout         81.664873
                           lively_sawfish         79.424015
                           ninja_lori             76.801436
                           meek_cuttlefish        76.128395
                           impartial_shark        72.191397
                           proud_muskrat          70.659378
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvague_bumblebee
[31m[EVAL] Best accuracy:18.299999237060547[0m
['parents.csv', 'bizarre_squirrel', 'blue_mandrill', 'cautious_guppy', 'charcoal_dogfish', 'festive_mouflon', 'flawless_guppy', 'glaring_pudu', 'hilarious_lizard', 'innocent_boa', 'jovial_dolphin', 'magenta_centipede', 'manipulative_manatee', 'meek_rattlesnake', 'mutant_nautilus', 'quirky_jackal', 'scrupulous_uakari', 'sensible_rattlesnake', 'spotted_panther', 'tested_rattlesnake', 'vague_bumblebee', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 22.07
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_3/tests_in16_23_10_2024_13_11/Generation_3/meek_rattlesnake/config.yaml

=== Training ===
  Allotted compute time remaining: ~23h,43m,13s
Early stopping at epoch 30
[31m[EVAL] Best accuracy:34.133331298828125[0m

=== Predicting ===
  Allotted compute time remaining: ~23h,11m,6s

========== Dataset   Volga    =============================================
  Metadata:
   - input_shape         : [50000, 20, 20, 20]
   - codename            : Volga
   - benchmark           : 71.35
   - num_classes         : 7
   - time_remaining      : 83462.95732164383

=== Processing Data ===
  Allotted compute time remaining: ~23h,11m,2s

=== Performing NAS ===
  Allotted compute time remaining: ~23h,4m,42s
spawn
Created model:  piquant_gharial
Created model:  spiked_cassowary
Created model:  cyan_silkworm
Created model:  ultramarine_eel
Created model:  airborne_cricket
Created model:  optimistic_barnacle
Created model:  hopeful_panther
Created model:  resourceful_aardwark
Created model:  ingenious_hippo
Created model:  sociable_smilodon
Created model:  refined_limpet
Created model:  burrowing_viper
Created model:  bouncy_slug
Created model:  obedient_robin
Created model:  succinct_trout
Created model:  lively_sawfish
Created model:  ninja_lori
Created model:  meek_cuttlefish
Created model:  impartial_shark
Created model:  proud_muskrat
[2K[2Kairborne_cricket
[31m[EVAL] Best accuracy:65.8499984741211[0m
[2K[2Kbouncy_slug
[31m[EVAL] Best accuracy:60.709999084472656[0m
[2K[2Kburrowing_viper
[31m[EVAL] Best accuracy:64.44999694824219[0m
[2K[2Kcyan_silkworm
[31m[EVAL] Best accuracy:61.29999923706055[0m
[2K[2Khopeful_panther
[31m[EVAL] Best accuracy:66.0199966430664[0m
[2K[2Kimpartial_shark
[31m[EVAL] Best accuracy:59.689998626708984[0m
[2K[2Kingenious_hippo
[31m[EVAL] Best accuracy:62.769996643066406[0m
[2K[2Klively_sawfish
[31m[EVAL] Best accuracy:63.15999984741211[0m
[2K[2Kmeek_cuttlefish
[31m[EVAL] Best accuracy:61.41999816894531[0m
[2K[2Kninja_lori
[31m[EVAL] Best accuracy:61.87999725341797[0m
[2K[2Kobedient_robin
[31m[EVAL] Best accuracy:63.75[0m
[2K[2Koptimistic_barnacle
[31m[EVAL] Best accuracy:63.429996490478516[0m
[2K[2Kpiquant_gharial
[31m[EVAL] Best accuracy:65.29999542236328[0m
[2K[2Kproud_muskrat
[31m[EVAL] Best accuracy:53.44999694824219[0m
[2K[2Krefined_limpet
[31m[EVAL] Best accuracy:60.04999923706055[0m
[2K[2Kresourceful_aardwark
[31m[EVAL] Best accuracy:60.279998779296875[0m
[2K[2Ksociable_smilodon
[31m[EVAL] Best accuracy:65.54000091552734[0m
[2K[2Kspiked_cassowary
[31m[EVAL] Best accuracy:60.96999740600586[0m
[2K[2Ksuccinct_trout
[31m[EVAL] Best accuracy:61.189998626708984[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2648.0496504306793
ic| self.metadata["time_remaining"]: 83082.32793164253
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 19, 'W0': 120, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kultramarine_eel
[31m[EVAL] Best accuracy:62.3599967956543[0m
['piquant_gharial', 'spiked_cassowary', 'cyan_silkworm', 'ultramarine_eel', 'airborne_cricket', 'optimistic_barnacle', 'hopeful_panther', 'resourceful_aardwark', 'ingenious_hippo', 'sociable_smilodon', 'refined_limpet', 'burrowing_viper', 'bouncy_slug', 'obedient_robin', 'succinct_trout', 'lively_sawfish', 'ninja_lori', 'meek_cuttlefish', 'impartial_shark', 'proud_muskrat', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 66.02
Child: [32.0, 112, 2.6500000000000004, 10]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.09798536198255164
[32.0, 120, 2.6500000000000004, 11]
Child: [20.0, 96, 2.75, 11]
Old_chrom: [16.0, 96, 2.799999999999997, 12]
Diff: 0.09932438244955782
[28.0, 104, 2.75, 11]
Child: [32.0, 120, 2.3000000000000003, 11]
Old_chrom: [32.0, 120, 2.299999999999999, 13]
Diff: 0.03571429561180334
[24.0, 128, 2.2500000000000004, 10]
Child: [20.0, 112, 2.45, 15]
Old_chrom: [16.0, 112, 2.45, 13]
Diff: 0.05654761904761904
[20.0, 120, 2.5, 15]
Child: [16.0, 96, 2.799999999999997, 13]
Old_chrom: [16.0, 96, 2.799999999999997, 12]
Diff: 0.017857142857142856
[np.int64(16), 88, 2.7499999999999973, 13]
Child: [np.int64(16), 88, 2.7499999999999973, 13]
Old_chrom: [16.0, 96, 2.799999999999997, 12]
Diff: 0.09772181834699534
[np.int64(24), 96, 2.7499999999999973, 13]
Child: [48.0, 96, 2.799999999999997, 8]
Old_chrom: [48.0, 96, 2.6999999999999975, 8]
Diff: 0.08574929257125442
[40.0, 88, 2.7499999999999973, 8]
Child: [16.0, 96, 2.6499999999999977, 9]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.041666666666666664
[np.int64(16), 104, 2.6499999999999977, 10]
Child: [np.int64(16), 104, 2.6499999999999977, 10]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.07875457875457875
[np.int64(24), 104, 2.6999999999999975, 9]
Child: [np.int64(24), 104, 2.6999999999999975, 9]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.07986467548985247
[np.int64(24), 104, 2.6499999999999977, 8]
Child: [np.int64(24), 104, 2.6499999999999977, 8]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.03708791208791209
[np.int64(24), 96, 2.599999999999998, np.int64(8)]
Child: [np.int64(24), 96, 2.599999999999998, np.int64(8)]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.07849104911622609
[np.int64(24), 96, 2.549999999999998, np.int64(8)]
Child: [16.0, 120, 2.249999999999999, 20]
Old_chrom: [16.0, 120, 2.249999999999999, 20]
Diff: 0.0
[16.0, 128, 2.1999999999999993, 21]
Child: [16.0, 128, 2.1999999999999993, 21]
Old_chrom: [16.0, 120, 2.249999999999999, 20]
Diff: 0.09772181834699534
[24.0, 136, 2.1499999999999995, 21]
Child: [16.0, 120, 2.4999999999999982, 13]
Old_chrom: [16.0, 112, 2.45, 13]
Diff: 0.0798646754898514
[np.int64(16), 112, 2.4999999999999982, 12]
Child: [np.int64(16), 112, 2.4999999999999982, 12]
Old_chrom: [16.0, 112, 2.45, 13]
Diff: 0.07849104911622502
[np.int64(24), 112, 2.4499999999999984, 11]
Child: [np.int64(24), 112, 2.4499999999999984, 11]
Old_chrom: [16.0, 112, 2.45, 13]
Diff: 0.07738096380962131
[np.int64(24), 120, 2.4999999999999982, 11]
Child: [np.int64(24), 120, 2.4999999999999982, 11]
Old_chrom: [20.0, 120, 2.5, 15]
Diff: 0.09226191619057368
[np.int64(32), 128, 2.4999999999999982, 12]
Child: [16.0, 120, 2.6499999999999977, 9]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.09935897435897437
[24.0, 112, 2.6999999999999975, 10]
Created model:  active_walrus
Created model:  agate_iguana
Created model:  aloof_vicugna
Created model:  astonishing_panther
Created model:  bouncy_wren
Created model:  calm_quail
Created model:  celadon_trout
Created model:  cuddly_wolf
Created model:  delicate_anaconda
Created model:  determined_booby
Created model:  elegant_leech
Created model:  evasive_squid
Created model:  funny_koala
Created model:  glistening_chinchilla
Created model:  laughing_sponge
Created model:  pistachio_wallaby
Created model:  poised_mongoose
Created model:  psychedelic_goose
Created model:  ultra_jackal
Created model:  vigorous_coot
[2K[2Kactive_walrus
[31m[EVAL] Best accuracy:66.02999877929688[0m
[2K[2Kagate_iguana
[31m[EVAL] Best accuracy:66.58000183105469[0m
[2K[2Kaloof_vicugna
[31m[EVAL] Best accuracy:67.30999755859375[0m
[2K[2Kastonishing_panther
[31m[EVAL] Best accuracy:67.5999984741211[0m
[2K[2Kbouncy_wren
[31m[EVAL] Best accuracy:64.91999816894531[0m
[2K[2Kcalm_quail
[31m[EVAL] Best accuracy:66.54999542236328[0m
[2K[2Kceladon_trout
[31m[EVAL] Best accuracy:63.57999801635742[0m
[2K[2Kcuddly_wolf
[31m[EVAL] Best accuracy:62.14999771118164[0m
[2K[2Kdelicate_anaconda
[31m[EVAL] Best accuracy:65.86000061035156[0m
[2K[2Kdetermined_booby
[31m[EVAL] Best accuracy:61.459999084472656[0m
[2K[2Kelegant_leech
[31m[EVAL] Best accuracy:65.20999908447266[0m
[2K[2Kevasive_squid
[31m[EVAL] Best accuracy:65.5[0m
[2K[2Kfunny_koala
[31m[EVAL] Best accuracy:64.26000213623047[0m
[2K[2Kglistening_chinchilla
[31m[EVAL] Best accuracy:67.31999969482422[0m
[2K[2Klaughing_sponge
[31m[EVAL] Best accuracy:58.519996643066406[0m
[2K[2Kpistachio_wallaby
[31m[EVAL] Best accuracy:67.22999572753906[0m
[2K[2Kpoised_mongoose
[31m[EVAL] Best accuracy:65.26000213623047[0m
[2K[2Kpsychedelic_goose
[31m[EVAL] Best accuracy:61.15999984741211[0m
[2K[2Kultra_jackal
[31m[EVAL] Best accuracy:59.34000015258789[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 5238.454201936722
ic| self.metadata["time_remaining"]: 83082.32793164253
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 24.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 32.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvigorous_coot
[31m[EVAL] Best accuracy:68.08000183105469[0m
['parents.csv', 'active_walrus', 'agate_iguana', 'aloof_vicugna', 'astonishing_panther', 'bouncy_wren', 'calm_quail', 'celadon_trout', 'cuddly_wolf', 'delicate_anaconda', 'determined_booby', 'elegant_leech', 'evasive_squid', 'funny_koala', 'glistening_chinchilla', 'laughing_sponge', 'pistachio_wallaby', 'poised_mongoose', 'psychedelic_goose', 'ultra_jackal', 'vigorous_coot', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 68.08
Child: [26.0, 112, 2.6500000000000004, 10]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.06673536198255164
[34.0, 120, 2.7, 11]
Child: [34.0, 120, 2.7, 11]
Old_chrom: [40.0, 120, 2.6499999999999977, 11]
Diff: 0.09188390625908485
[26.0, 128, 2.6500000000000004, 10]
Child: [24.0, 112, 2.5500000000000003, 9]
Old_chrom: [24.0, 120, 2.4999999999999982, 9]
Diff: 0.07986467548985382
[32.0, 112, 2.6, 10]
Child: [32.0, 112, 2.6, 10]
Old_chrom: [32.0, 120, 2.6500000000000004, 11]
Diff: 0.09772181834699559
[24.0, 112, 2.5500000000000003, 10]
Child: [28.0, 120, 2.6, 10]
Old_chrom: [32.0, 120, 2.6500000000000004, 11]
Diff: 0.09932438244955971
[36.0, 120, 2.5500000000000003, 10]
Child: [28.0, 128, 2.5, 11]
Old_chrom: [24.0, 120, 2.4999999999999982, 9]
Diff: 0.0757783997070572
[36.0, 136, 2.5, 12]
Child: [36.0, 136, 2.5, 12]
Old_chrom: [32.0, 128, 2.4999999999999982, 12]
Diff: 0.04006411399277149
[36.0, 136, 2.5, 12]
Child: [36.0, 136, 2.5, 12]
Old_chrom: [32.0, 128, 2.4999999999999982, 12]
Diff: 0.04006411399277149
[44.0, 128, 2.5, 12]
Child: [44.0, 128, 2.5, 12]
Old_chrom: [32.0, 128, 2.4999999999999982, 12]
Diff: 0.06250001142866893
[44.0, 136, 2.55, 12]
Child: [26.0, 104, 2.6500000000000004, 10]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.04750459275178241
[26.0, 112, 2.6500000000000004, 9]
Child: [26.0, 112, 2.6500000000000004, 9]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.04887821912540879
[26.0, 104, 2.7, 9]
Child: [26.0, 104, 2.7, 9]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.09028134215652076
[34.0, 104, 2.7, 9]
Child: [30.0, 112, 2.7, 11]
Old_chrom: [28.0, 104, 2.75, 11]
Diff: 0.09028134215651915
[22.0, 120, 2.7, 12]
Child: [30.0, 120, 2.6500000000000004, 12]
Old_chrom: [40.0, 120, 2.6499999999999977, 11]
Diff: 0.06994049018767985
[22.0, 128, 2.6000000000000005, 13]
Child: [28.0, 112, 2.6, 10]
Old_chrom: [36.0, 112, 2.6, 9]
Diff: 0.05952380952380952
[20.0, 120, 2.6, 9]
Child: [28.0, 112, 2.5500000000000003, 10]
Old_chrom: [24.0, 96, 2.549999999999998, 8]
Diff: 0.09500917028679781
[28.0, 104, 2.5500000000000003, 9]
Child: [32.0, 128, 2.6, 12]
Old_chrom: [32.0, 120, 2.6500000000000004, 11]
Diff: 0.09772181834699559
[40.0, 120, 2.65, 12]
Child: [28.0, 120, 2.4999999999999982, 11]
Old_chrom: [24.0, 120, 2.4999999999999982, 9]
Diff: 0.05654761904761904
[28.0, 120, 2.4999999999999982, 12]
Child: [28.0, 120, 2.4999999999999982, 12]
Old_chrom: [24.0, 120, 2.4999999999999982, 9]
Diff: 0.0744047619047619
[36.0, 120, 2.4999999999999982, 12]
Child: [36.0, 120, 2.4999999999999982, 12]
Old_chrom: [32.0, 128, 2.4999999999999982, 12]
Diff: 0.04006410256410256
[28.0, 120, 2.549999999999998, 12]
Child: [28.0, 120, 2.549999999999998, 12]
Old_chrom: [24.0, 112, 2.5500000000000003, 10]
Diff: 0.07577840105602858
[28.0, 128, 2.549999999999998, 12]
Child: [28.0, 128, 2.549999999999998, 12]
Old_chrom: [32.0, 128, 2.4999999999999982, 12]
Diff: 0.08146723959241657
[36.0, 120, 2.4999999999999982, 11]
Child: [24.0, 96, 2.4999999999999982, 9]
Old_chrom: [24.0, 120, 2.4999999999999982, 9]
Diff: 0.057692307692307696
[16.0, 104, 2.4499999999999984, 10]
Child: [16.0, 104, 2.4499999999999984, 10]
Old_chrom: [16.0, 112, 2.45, 13]
Diff: 0.07280220923086672
[16.0, 112, 2.3999999999999986, 11]
Child: [16.0, 112, 2.3999999999999986, 11]
Old_chrom: [16.0, 112, 2.45, 13]
Diff: 0.09634819197337002
[16.0, 112, 2.3999999999999986, 11]
Child: [24.0, 120, 2.6500000000000004, 9]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.057692321689511356
[32.0, 128, 2.7, 9]
Child: [32.0, 128, 2.7, 9]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.09798536198255164
[40.0, 120, 2.7, 9]
Child: [24.0, 128, 2.4999999999999982, 9]
Old_chrom: [24.0, 120, 2.4999999999999982, 9]
Diff: 0.019230769230769232
[16.0, 136, 2.549999999999998, 10]
Child: [16.0, 136, 2.549999999999998, 10]
Old_chrom: [24.0, 112, 2.5500000000000003, 10]
Diff: 0.09935898713661467
[np.int64(16), 128, 2.4999999999999982, 11]
Child: [28.0, 96, 2.549999999999998, 11]
Old_chrom: [24.0, 96, 2.549999999999998, 8]
Diff: 0.0744047619047619
[36.0, 104, 2.4999999999999982, 10]
Child: [36.0, 104, 2.4999999999999982, 10]
Old_chrom: [36.0, 120, 2.5500000000000003, 10]
Diff: 0.09909544472062305
[36.0, 112, 2.4499999999999984, 9]
Child: [32.0, 120, 2.75, 11]
Old_chrom: [28.0, 104, 2.75, 11]
Diff: 0.05929487179487179
[24.0, 128, 2.7, 11]
Child: [24.0, 128, 2.7, 11]
Old_chrom: [24.0, 112, 2.6999999999999975, 10]
Diff: 0.05631869531588498
[32.0, 120, 2.7, 11]
Child: [32.0, 120, 2.7, 11]
Old_chrom: [32.0, 120, 2.6500000000000004, 11]
Diff: 0.06063390625908324
[24.0, 112, 2.6500000000000004, 12]
Child: [24.0, 112, 2.6500000000000004, 12]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.09203298103017069
[32.0, 112, 2.6500000000000004, 12]
Child: [28.0, 128, 2.4999999999999982, 11]
Old_chrom: [24.0, 120, 2.4999999999999982, 9]
Diff: 0.07577838827838827
[36.0, 128, 2.549999999999998, 10]
Child: [36.0, 128, 2.549999999999998, 10]
Old_chrom: [36.0, 120, 2.5500000000000003, 10]
Diff: 0.01923078200840954
[36.0, 136, 2.4999999999999982, 11]
Child: [36.0, 136, 2.4999999999999982, 11]
Old_chrom: [32.0, 128, 2.4999999999999982, 12]
Diff: 0.05792124542124542
[36.0, 136, 2.549999999999998, 11]
Child: [36.0, 136, 2.549999999999998, 11]
Old_chrom: [36.0, 120, 2.5500000000000003, 10]
Diff: 0.05631869409632163
[28.0, 128, 2.549999999999998, 10]
Child: [28.0, 128, 2.549999999999998, 10]
Old_chrom: [26.0, 128, 2.6500000000000004, 10]
Diff: 0.09616595923792223
[20.0, 120, 2.549999999999998, 9]
Child: [24.0, 120, 2.6500000000000004, 8]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.0755494645466542
[16.0, 120, 2.6000000000000005, 9]
Child: [16.0, 120, 2.6000000000000005, 9]
Old_chrom: [20.0, 120, 2.6, 9]
Diff: 0.020833339047667796
[np.int64(16), 120, 2.6500000000000004, 9]
Child: [np.int64(16), 120, 2.6500000000000004, 9]
Old_chrom: [24.0, 96, 2.6499999999999977, 9]
Diff: 0.09935898835617803
[np.int64(16), 128, 2.6000000000000005, 10]
Child: [32.0, 128, 2.549999999999998, 8]
Old_chrom: [36.0, 120, 2.5500000000000003, 10]
Diff: 0.07577840105602858
[40.0, 128, 2.4999999999999982, 9]
Child: [40.0, 128, 2.4999999999999982, 9]
Old_chrom: [48.0, 120, 2.4999999999999982, 8]
Diff: 0.07875457875457875
[48.0, 128, 2.4499999999999984, 8]
Child: [48.0, 128, 2.4499999999999984, 8]
Old_chrom: [48.0, 120, 2.4999999999999982, 8]
Diff: 0.07986467548985247
[48.0, 136, 2.3999999999999986, 8]
Child: [32.0, 128, 2.4999999999999982, 11]
Old_chrom: [24.0, 120, 2.4999999999999982, 9]
Diff: 0.0966117216117216
[32.0, 120, 2.4999999999999982, 10]
Created model:  adamant_tuna
Created model:  amigurumi_jaybird
Created model:  copper_jaguarundi
Created model:  daft_pronghorn
Created model:  devious_bumblebee
Created model:  economic_kestrel
Created model:  elegant_capuchin
Created model:  fascinating_coati
Created model:  garrulous_cheetah
Created model:  graceful_dugong
Created model:  hasty_echidna
Created model:  illegal_vulture
Created model:  maroon_caiman
Created model:  nimble_tanuki
Created model:  quixotic_koala
Created model:  radiant_agama
Created model:  rapid_ermine
Created model:  rapid_mule
Created model:  shaggy_agouti
Created model:  speedy_quoll
[2K[2Kadamant_tuna
[31m[EVAL] Best accuracy:69.79999542236328[0m
[2K[2Kamigurumi_jaybird
[31m[EVAL] Best accuracy:67.5199966430664[0m
[2K[2Kcopper_jaguarundi
[31m[EVAL] Best accuracy:67.15999603271484[0m
[2K[2Kdaft_pronghorn
[31m[EVAL] Best accuracy:65.8499984741211[0m
[2K[2Kdevious_bumblebee
[31m[EVAL] Best accuracy:64.5[0m
[2K[2Keconomic_kestrel
[31m[EVAL] Best accuracy:64.22999572753906[0m
[2K[2Kelegant_capuchin
[31m[EVAL] Best accuracy:64.73999786376953[0m
[2K[2Kfascinating_coati
[31m[EVAL] Best accuracy:66.25[0m
[2K[2Kgarrulous_cheetah
[31m[EVAL] Best accuracy:65.75[0m
[2K[2Kgraceful_dugong
[31m[EVAL] Best accuracy:65.18000030517578[0m
[2K[2Khasty_echidna
[31m[EVAL] Best accuracy:64.80999755859375[0m
[2K[2Killegal_vulture
[31m[EVAL] Best accuracy:66.88999938964844[0m
[2K[2Kmaroon_caiman
[31m[EVAL] Best accuracy:67.04999542236328[0m
[2K[2Knimble_tanuki
[31m[EVAL] Best accuracy:65.06999969482422[0m
[2K[2Kquixotic_koala
[31m[EVAL] Best accuracy:64.79000091552734[0m
[2K[2Kradiant_agama
[31m[EVAL] Best accuracy:64.25[0m
[2K[2Krapid_ermine
[31m[EVAL] Best accuracy:68.02999877929688[0m
[2K[2Krapid_mule
[31m[EVAL] Best accuracy:66.88999938964844[0m
[2K[2Kshaggy_agouti
[31m[EVAL] Best accuracy:64.02999877929688[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 32.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 32.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 32.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7688.286974906921
ic| self.metadata["time_remaining"]: 83082.32793164253
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 71.35,
               'codename': 'Volga',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_3/tests_Volga_23_10_2024_19_56/Generation_3/speedy_quoll',
               'input_shape': [50000, 20, 20, 20],
               'mode': 'NAS',
               'num_classes': 7,
               'test_type': 'T3_Proxy/seed_3',
               'time_remaining': 75393.56791090965,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| unique_values: array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ],
                         dtype=float32)
ic| C: 1
ic| H: 9
ic| PH: 1
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7ff061c31a20>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff061c33820>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff061c32770>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff061c313f0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7ff0b89c1810>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7ff061c330d0>,
                 ToTensor(),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7ff061c31990>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['flawless_jackdaw',
                  'fancy_cockatoo',
                  'nano_marmoset',
                  'wealthy_gopher',
                  'golden_bug',
                  'carmine_goose',
                  'succinct_antelope',
                  'antique_okapi',
                  'amber_orangutan',
                  'caped_okapi',
                  'adaptable_koala',
                  'tough_frog',
                  'polar_chicken',
                  'sociable_wrasse',
                  'celadon_elephant',
                  'stylish_terrier',
                  'elegant_flounder',
                  'shiny_axolotl',
                  'jumping_muskox',
                  'ethereal_cobra']
ic| params: [64.0, 96, 2.3999999999999986, 12, 8]
ic| params: [48.0, 88, 2.05, 10, 8]
ic| params: [24.0, 40, 2.549999999999998, 8, 8]
ic| params: [48.0, 80, 2.1499999999999995, 14, 8]
ic| params: [32.0, 48, 2.799999999999997, 15, 8]
ic| params: [16.0, 24, 2.299999999999999, 13, 8]
ic| params: [40.0, 120, 2.849999999999997, 11, 8]
ic| params: [40.0, 56, 2.599999999999998, 19, 8]
ic| params: [32.0, 72, 2.799999999999997, 16, 8]
ic| params: [40.0, 104, 2.4999999999999982, 10, 8]
ic| params: [56.0, 120, 2.299999999999999, 10, 8]
ic| params: [16.0, 56, 2.899999999999997, 8, 8]
ic| params: [16.0, 88, 2.0999999999999996, 14, 8]
ic| params: [56.0, 112, 2.849999999999997, 15, 8]
ic| params: [64.0, 72, 2.7499999999999973, 18, 8]
ic| params: [64.0, 96, 2.1499999999999995, 11, 8]
ic| params: [56.0, 56, 2.05, 20, 8]
ic| params: [56.0, 72, 2.0999999999999996, 9, 8]
ic| params: [56.0, 72, 2.4999999999999982, 20, 8]
ic| params: [64.0, 88, 2.899999999999997, 18, 8]
ic| individuals: ['flawless_jackdaw',
                  'fancy_cockatoo',
                  'nano_marmoset',
                  'wealthy_gopher',
                  'golden_bug',
                  'carmine_goose',
                  'succinct_antelope',
                  'antique_okapi',
                  'amber_orangutan',
                  'caped_okapi',
                  'adaptable_koala',
                  'tough_frog',
                  'polar_chicken',
                  'sociable_wrasse',
                  'celadon_elephant',
                  'stylish_terrier',
                  'elegant_flounder',
                  'shiny_axolotl',
                  'jumping_muskox',
                  'ethereal_cobra']
ic| params_dict: {'adaptable_koala': [56.0, 120, 2.299999999999999, 10, 8],
                  'amber_orangutan': [32.0, 72, 2.799999999999997, 16, 8],
                  'antique_okapi': [40.0, 56, 2.599999999999998, 19, 8],
                  'caped_okapi': [40.0, 104, 2.4999999999999982, 10, 8],
                  'carmine_goose': [16.0, 24, 2.299999999999999, 13, 8],
                  'celadon_elephant': [64.0, 72, 2.7499999999999973, 18, 8],
                  'elegant_flounder': [56.0, 56, 2.05, 20, 8],
                  'ethereal_cobra': [64.0, 88, 2.899999999999997, 18, 8],
                  'fancy_cockatoo': [48.0, 88, 2.05, 10, 8],
                  'flawless_jackdaw': [64.0, 96, 2.3999999999999986, 12, 8],
                  'golden_bug': [32.0, 48, 2.799999999999997, 15, 8],
                  'jumping_muskox': [56.0, 72, 2.4999999999999982, 20, 8],
                  'nano_marmoset': [24.0, 40, 2.549999999999998, 8, 8],
                  'polar_chicken': [16.0, 88, 2.0999999999999996, 14, 8],
                  'shiny_axolotl': [56.0, 72, 2.0999999999999996, 9, 8],
                  'sociable_wrasse': [56.0, 112, 2.849999999999997, 15, 8],
                  'stylish_terrier': [64.0, 96, 2.1499999999999995, 11, 8],
                  'succinct_antelope': [40.0, 120, 2.849999999999997, 11, 8],
                  'tough_frog': [16.0, 56, 2.899999999999997, 8, 8],
                  'wealthy_gopher': [48.0, 80, 2.1499999999999995, 14, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff061c31a20>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff061c33820>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff061c32770>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff061c313f0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff0b89c1810>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff061c330d0>,
                                                ToTensor(),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff061c31990>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 1'
ic| f"selected transform {train_transform}": ('selected transform [RandAugment(interpolation=InterpolationMode.NEAREST, '
                                              'num_ops=2, magnitude=9, num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41118990336
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 73144.62534761429
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| ranking_prediction_df:                            score
                           greedy_nyala          128.419369
                           huge_jellyfish        104.134256
                           unyielding_donkey      95.091026
                           amigurumi_ocelot       94.835119
                           aspiring_kiwi          90.129684
                           amiable_seal           84.833888
                           cunning_jerboa         80.789040
                           brainy_serval          79.568114
                           mighty_cricket         79.450498
                           amethyst_grebe         79.413500
                           innocent_parrot        74.669932
                           arboreal_alpaca        72.610969
                           auspicious_crocodile   71.191991
                           convivial_pheasant     71.162463
                           classic_shark          70.693733
                           origami_binturong      70.170977
                           invaluable_sawfly      69.612986
                           burrowing_malkoha      69.121595
                           tangerine_narwhal      66.089137
                           stylish_clam           65.459460
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 64.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 64.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kspeedy_quoll
[31m[EVAL] Best accuracy:65.48999786376953[0m
['parents.csv', 'adamant_tuna', 'amigurumi_jaybird', 'copper_jaguarundi', 'daft_pronghorn', 'devious_bumblebee', 'economic_kestrel', 'elegant_capuchin', 'fascinating_coati', 'garrulous_cheetah', 'graceful_dugong', 'hasty_echidna', 'illegal_vulture', 'maroon_caiman', 'nimble_tanuki', 'quixotic_koala', 'radiant_agama', 'rapid_ermine', 'rapid_mule', 'shaggy_agouti', 'speedy_quoll', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 69.8
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_3/tests_Volga_23_10_2024_19_56/Generation_3/adamant_tuna/config.yaml

=== Training ===
  Allotted compute time remaining: ~20h,56m,33s
Early stopping at epoch 77
[31m[EVAL] Best accuracy:82.5[0m

=== Predicting ===
  Allotted compute time remaining: ~20h,28m,55s

========== Dataset   Sokoto   =============================================
  Metadata:
   - input_shape         : [50000, 1, 9, 9]
   - codename            : Sokoto
   - benchmark           : 0.0
   - num_classes         : 9
   - time_remaining      : 73734.5435590744

=== Processing Data ===
  Allotted compute time remaining: ~20h,28m,54s

=== Performing NAS ===
  Allotted compute time remaining: ~20h,19m,4s
spawn
Created model:  greedy_nyala
Created model:  huge_jellyfish
Created model:  unyielding_donkey
Created model:  amigurumi_ocelot
Created model:  aspiring_kiwi
Created model:  amiable_seal
Created model:  cunning_jerboa
Created model:  brainy_serval
Created model:  mighty_cricket
Created model:  amethyst_grebe
Created model:  innocent_parrot
Created model:  arboreal_alpaca
Created model:  auspicious_crocodile
Created model:  convivial_pheasant
Created model:  classic_shark
Created model:  origami_binturong
Created model:  invaluable_sawfly
Created model:  burrowing_malkoha
Created model:  tangerine_narwhal
Created model:  stylish_clam
[2K[2Kamethyst_grebe
[31m[EVAL] Best accuracy:15.319999694824219[0m
[2K[2Kamiable_seal
[31m[EVAL] Best accuracy:11.65999984741211[0m
[2K[2Kamigurumi_ocelot
[31m[EVAL] Best accuracy:13.779999732971191[0m
[2K[2Karboreal_alpaca
[31m[EVAL] Best accuracy:15.019999504089355[0m
[2K[2Kaspiring_kiwi
[31m[EVAL] Best accuracy:15.079999923706055[0m
[2K[2Kauspicious_crocodile
[31m[EVAL] Best accuracy:15.389999389648438[0m
[2K[2Kbrainy_serval
[31m[EVAL] Best accuracy:11.84999942779541[0m
[2K[2Kburrowing_malkoha
[31m[EVAL] Best accuracy:11.300000190734863[0m
[2K[2Kclassic_shark
[31m[EVAL] Best accuracy:14.6899995803833[0m
[2K[2Kconvivial_pheasant
[31m[EVAL] Best accuracy:12.9399995803833[0m
[2K[2Kcunning_jerboa
[31m[EVAL] Best accuracy:14.719999313354492[0m
[2K[2Kgreedy_nyala
[31m[EVAL] Best accuracy:11.899999618530273[0m
[2K[2Khuge_jellyfish
[31m[EVAL] Best accuracy:15.379999160766602[0m
[2K[2Kinnocent_parrot
[31m[EVAL] Best accuracy:12.029999732971191[0m
[2K[2Kinvaluable_sawfly
[31m[EVAL] Best accuracy:14.309999465942383[0m
[2K[2Kmighty_cricket
[31m[EVAL] Best accuracy:11.319999694824219[0m
[2K[2Korigami_binturong
[31m[EVAL] Best accuracy:12.289999961853027[0m
[2K[2Kstylish_clam
[31m[EVAL] Best accuracy:13.019999504089355[0m
[2K[2Ktangerine_narwhal
[31m[EVAL] Best accuracy:11.84999942779541[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 64.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 64.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 64.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 3288.790189743042
ic| self.metadata["time_remaining"]: 73144.62534761429
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 64.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 64.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 64.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 64.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 64.0, 'WM': 2.0999999999999996, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kunyielding_donkey
[31m[EVAL] Best accuracy:11.619999885559082[0m
['greedy_nyala', 'huge_jellyfish', 'unyielding_donkey', 'amigurumi_ocelot', 'aspiring_kiwi', 'amiable_seal', 'cunning_jerboa', 'brainy_serval', 'mighty_cricket', 'amethyst_grebe', 'innocent_parrot', 'arboreal_alpaca', 'auspicious_crocodile', 'convivial_pheasant', 'classic_shark', 'origami_binturong', 'invaluable_sawfly', 'burrowing_malkoha', 'tangerine_narwhal', 'stylish_clam', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 15.39
Child: [36.0, 112, 2.6, 14]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.07577840105602858
[36.0, 112, 2.65, 13]
Child: [28.0, 104, 2.6, 11]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.0386904889681165
[28.0, 96, 2.5500000000000003, 11]
Child: [28.0, 96, 2.5500000000000003, 11]
Old_chrom: [24.0, 96, 2.549999999999998, 10]
Diff: 0.0386904889681165
[20.0, 96, 2.6, 12]
Child: [20.0, 96, 2.6, 12]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.08173078200840954
[np.int64(16), 96, 2.5500000000000003, 12]
Child: [np.int64(16), 96, 2.5500000000000003, 12]
Old_chrom: [24.0, 96, 2.549999999999998, 10]
Diff: 0.07738096515859269
[np.int64(16), 96, 2.5500000000000003, 13]
Child: [np.int64(16), 96, 2.5500000000000003, 13]
Old_chrom: [24.0, 96, 2.549999999999998, 10]
Diff: 0.09523810801573554
[np.int64(16), 88, 2.5000000000000004, 13]
Child: [36.0, 104, 2.7, 12]
Old_chrom: [40.0, 104, 2.7499999999999973, 12]
Diff: 0.08146723959241496
[28.0, 104, 2.6500000000000004, 12]
Child: [28.0, 104, 2.6500000000000004, 12]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.0814672395924182
[20.0, 96, 2.6000000000000005, 12]
Child: [20.0, 96, 2.6000000000000005, 12]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.08173078322797289
[28.0, 96, 2.6500000000000004, 12]
Child: [28.0, 96, 2.6500000000000004, 12]
Old_chrom: [36.0, 112, 2.65, 13]
Diff: 0.09798535369968245
[36.0, 96, 2.7, 11]
Child: [32.0, 112, 2.6, 13]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.037087924865552395
[32.0, 104, 2.5500000000000003, 12]
Child: [32.0, 104, 2.5500000000000003, 12]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.060633906259081896
[24.0, 112, 2.5000000000000004, 12]
Child: [40.0, 120, 2.45, 13]
Old_chrom: [40.0, 120, 2.4999999999999982, 13]
Diff: 0.06063390625908217
[40.0, 128, 2.4000000000000004, 12]
Child: [40.0, 112, 2.7, 14]
Old_chrom: [36.0, 112, 2.65, 13]
Diff: 0.09932438244955971
[32.0, 120, 2.75, 15]
Child: [32.0, 112, 2.45, 11]
Old_chrom: [36.0, 112, 2.45, 12]
Diff: 0.03869047619047619
[40.0, 104, 2.5, 10]
Child: [40.0, 104, 2.5, 10]
Old_chrom: [40.0, 120, 2.4999999999999982, 13]
Diff: 0.09203297846163597
[32.0, 104, 2.55, 10]
Child: [32.0, 104, 2.6500000000000004, 11]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.07849104911622772
[24.0, 96, 2.7, 10]
Child: [24.0, 96, 2.7, 10]
Old_chrom: [36.0, 96, 2.7, 11]
Diff: 0.08035714285714285
[24.0, 104, 2.6500000000000004, 9]
Child: [40.0, 112, 2.5500000000000003, 12]
Old_chrom: [40.0, 120, 2.4999999999999982, 13]
Diff: 0.09772181834699667
[40.0, 112, 2.5000000000000004, 12]
Child: [32.0, 120, 2.599999999999998, 12]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.038461538461538464
[32.0, 120, 2.599999999999998, 13]
Child: [32.0, 120, 2.599999999999998, 13]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.05631868131868132
[32.0, 120, 2.6499999999999977, 13]
Child: [32.0, 120, 2.6499999999999977, 13]
Old_chrom: [36.0, 112, 2.65, 13]
Diff: 0.04006411534174287
[40.0, 112, 2.6499999999999977, 14]
Child: [40.0, 112, 2.6499999999999977, 14]
Old_chrom: [40.0, 120, 2.599999999999998, 15]
Diff: 0.09772181834699534
[48.0, 104, 2.6999999999999975, 15]
Child: [32.0, 104, 2.549999999999998, 10]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.09634819197336895
[32.0, 112, 2.549999999999998, 9]
Child: [32.0, 120, 2.299999999999999, 12]
Old_chrom: [40.0, 120, 2.299999999999999, 11]
Diff: 0.05952380952380952
[40.0, 120, 2.299999999999999, 13]
Child: [40.0, 120, 2.299999999999999, 13]
Old_chrom: [40.0, 120, 2.299999999999999, 11]
Diff: 0.03571428571428571
[32.0, 128, 2.299999999999999, 12]
Child: [32.0, 128, 2.299999999999999, 12]
Old_chrom: [40.0, 120, 2.299999999999999, 11]
Diff: 0.07875457875457875
[32.0, 120, 2.3499999999999988, 12]
Child: [32.0, 104, 2.7499999999999973, 12]
Old_chrom: [40.0, 104, 2.7499999999999973, 12]
Diff: 0.041666666666666664
[40.0, 96, 2.7499999999999973, 13]
Child: [40.0, 96, 2.7499999999999973, 13]
Old_chrom: [40.0, 104, 2.7499999999999973, 12]
Diff: 0.03708791208791209
[32.0, 88, 2.7499999999999973, 12]
Child: [32.0, 88, 2.7499999999999973, 12]
Old_chrom: [40.0, 104, 2.7499999999999973, 12]
Diff: 0.08012820512820512
[40.0, 88, 2.6999999999999975, 11]
Child: [40.0, 88, 2.6999999999999975, 11]
Old_chrom: [36.0, 96, 2.7, 11]
Diff: 0.04006411656130622
[40.0, 88, 2.6999999999999975, 10]
Child: [40.0, 88, 2.6999999999999975, 10]
Old_chrom: [36.0, 96, 2.7, 11]
Diff: 0.05792125941844908
[48.0, 88, 2.7499999999999973, 9]
Child: [40.0, 120, 2.299999999999999, 11]
Old_chrom: [40.0, 120, 2.299999999999999, 11]
Diff: 0.0
[32.0, 120, 2.3499999999999988, 11]
Child: [32.0, 120, 2.3499999999999988, 11]
Old_chrom: [32.0, 120, 2.3499999999999988, 12]
Diff: 0.017857142857142856
[40.0, 128, 2.3999999999999986, 10]
Child: [40.0, 128, 2.3999999999999986, 10]
Old_chrom: [40.0, 128, 2.4000000000000004, 12]
Diff: 0.03571429714295464
[48.0, 128, 2.3999999999999986, 10]
Child: [48.0, 128, 2.3999999999999986, 10]
Old_chrom: [40.0, 128, 2.4000000000000004, 12]
Diff: 0.07738096380962131
[56.0, 120, 2.3999999999999986, 9]
Child: [40.0, 104, 2.599999999999998, 15]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.09523809523809523
[48.0, 96, 2.599999999999998, 16]
Child: [40.0, 104, 2.549999999999998, 10]
Old_chrom: [32.0, 104, 2.55, 10]
Diff: 0.04166667809533559
[32.0, 96, 2.599999999999998, 9]
Child: [32.0, 96, 2.599999999999998, 9]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.0728021978021978
[32.0, 96, 2.599999999999998, 9]
Child: [32.0, 96, 2.599999999999998, 9]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.0728021978021978
[32.0, 88, 2.599999999999998, 9]
Child: [32.0, 88, 2.599999999999998, 9]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.09203296703296704
[40.0, 80, 2.549999999999998, 8]
Child: [40.0, 104, 2.299999999999999, 11]
Old_chrom: [40.0, 120, 2.299999999999999, 11]
Diff: 0.038461538461538464
[48.0, 104, 2.249999999999999, 12]
Created model:  alluring_jacamar
Created model:  brawny_cicada
Created model:  calm_cassowary
Created model:  crouching_kingfisher
Created model:  delicate_civet
Created model:  fearless_salamander
Created model:  fluffy_lobster
Created model:  fluffy_stingray
Created model:  ginger_lori
Created model:  golden_corgi
Created model:  holistic_dinosaur
Created model:  ingenious_jacamar
Created model:  ingenious_puma
Created model:  inquisitive_barnacle
Created model:  laughing_slug
Created model:  powerful_nautilus
Created model:  prehistoric_bat
Created model:  stereotyped_slug
Created model:  wild_bullmastiff
Created model:  wooden_bat
[2K[2Kalluring_jacamar
[31m[EVAL] Best accuracy:14.179999351501465[0m
[2K[2Kbrawny_cicada
[31m[EVAL] Best accuracy:15.619999885559082[0m
[2K[2Kcalm_cassowary
[31m[EVAL] Best accuracy:11.699999809265137[0m
[2K[2Kcrouching_kingfisher
[31m[EVAL] Best accuracy:11.84000015258789[0m
[2K[2Kdelicate_civet
[31m[EVAL] Best accuracy:13.9399995803833[0m
[2K[2Kfearless_salamander
[31m[EVAL] Best accuracy:11.460000038146973[0m
[2K[2Kfluffy_lobster
[31m[EVAL] Best accuracy:14.389999389648438[0m
[2K[2Kfluffy_stingray
[31m[EVAL] Best accuracy:12.559999465942383[0m
[2K[2Kginger_lori
[31m[EVAL] Best accuracy:14.829999923706055[0m
[2K[2Kgolden_corgi
[31m[EVAL] Best accuracy:12.969999313354492[0m
[2K[2Kholistic_dinosaur
[31m[EVAL] Best accuracy:13.369999885559082[0m
[2K[2Kingenious_jacamar
[31m[EVAL] Best accuracy:13.65999984741211[0m
[2K[2Kingenious_puma
[31m[EVAL] Best accuracy:12.989999771118164[0m
[2K[2Kinquisitive_barnacle
[31m[EVAL] Best accuracy:11.869999885559082[0m
[2K[2Klaughing_slug
[31m[EVAL] Best accuracy:13.170000076293945[0m
[2K[2Kpowerful_nautilus
[31m[EVAL] Best accuracy:12.039999961853027[0m
[2K[2Kprehistoric_bat
[31m[EVAL] Best accuracy:11.5[0m
[2K[2Kstereotyped_slug
[31m[EVAL] Best accuracy:16.389999389648438[0m
[2K[2Kwild_bullmastiff
[31m[EVAL] Best accuracy:13.289999961853027[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6363.505147695541
ic| self.metadata["time_remaining"]: 73144.62534761429
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 104, 'WA': 48.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 128, 'WA': 28.0, 'WM': 2.7, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwooden_bat
[31m[EVAL] Best accuracy:12.489999771118164[0m
['parents.csv', 'alluring_jacamar', 'brawny_cicada', 'calm_cassowary', 'crouching_kingfisher', 'delicate_civet', 'fearless_salamander', 'fluffy_lobster', 'fluffy_stingray', 'ginger_lori', 'golden_corgi', 'holistic_dinosaur', 'ingenious_jacamar', 'ingenious_puma', 'inquisitive_barnacle', 'laughing_slug', 'powerful_nautilus', 'prehistoric_bat', 'stereotyped_slug', 'wild_bullmastiff', 'wooden_bat', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 16.39
Child: [24.0, 112, 2.5, 10]
Old_chrom: [24.0, 96, 2.549999999999998, 10]
Diff: 0.09909544472062062
[16.0, 112, 2.45, 10]
Child: [30.0, 120, 2.5, 12]
Old_chrom: [40.0, 120, 2.4999999999999982, 13]
Diff: 0.06994048761914512
[22.0, 120, 2.5, 13]
Child: [22.0, 120, 2.5, 13]
Old_chrom: [40.0, 120, 2.4999999999999982, 13]
Diff: 0.09375001142866893
[22.0, 120, 2.5, 14]
Child: [20.0, 96, 2.6, 11]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.0995879248655524
[np.int64(16), 88, 2.65, 12]
Child: [24.0, 104, 2.6500000000000004, 14]
Old_chrom: [24.0, 104, 2.6500000000000004, 9]
Diff: 0.08928571428571429
[24.0, 96, 2.7, 13]
Child: [26.0, 104, 2.6, 13]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.04910715563478316
[26.0, 104, 2.6, 13]
Child: [26.0, 104, 2.6, 13]
Old_chrom: [32.0, 104, 2.599999999999998, 12]
Diff: 0.04910715563478316
[26.0, 96, 2.65, 13]
Child: [26.0, 96, 2.65, 13]
Old_chrom: [36.0, 112, 2.65, 13]
Diff: 0.0905448717948718
[26.0, 88, 2.65, 13]
Child: [28.0, 112, 2.7, 12]
Old_chrom: [36.0, 96, 2.7, 11]
Diff: 0.09798534798534797
[28.0, 104, 2.75, 12]
Child: [30.0, 112, 2.7, 11]
Old_chrom: [36.0, 96, 2.7, 11]
Diff: 0.06971153846153846
[22.0, 104, 2.7, 10]
Child: [22.0, 104, 2.7, 10]
Old_chrom: [24.0, 104, 2.6500000000000004, 9]
Diff: 0.08890771578289278
[30.0, 104, 2.6500000000000004, 11]
Child: [34.0, 120, 2.7, 14]
Old_chrom: [32.0, 120, 2.75, 15]
Diff: 0.08890771578289278
[26.0, 112, 2.75, 14]
Child: [16.0, 120, 2.299999999999999, 13]
Old_chrom: [24.0, 120, 2.299999999999999, 10]
Diff: 0.09523809523809523
[24.0, 120, 2.299999999999999, 14]
Child: [24.0, 120, 2.299999999999999, 9]
Old_chrom: [24.0, 120, 2.299999999999999, 10]
Diff: 0.017857142857142856
[32.0, 128, 2.299999999999999, 10]
Child: [32.0, 128, 2.299999999999999, 10]
Old_chrom: [40.0, 120, 2.299999999999999, 11]
Diff: 0.07875457875457875
[40.0, 128, 2.299999999999999, 10]
Child: [40.0, 128, 2.299999999999999, 10]
Old_chrom: [40.0, 120, 2.299999999999999, 11]
Diff: 0.03708791208791209
[40.0, 136, 2.3499999999999988, 11]
Child: [40.0, 136, 2.3499999999999988, 11]
Old_chrom: [40.0, 120, 2.299999999999999, 11]
Diff: 0.0990954447206217
[32.0, 144, 2.3499999999999988, 12]
Child: [32.0, 120, 2.299999999999999, 15]
Old_chrom: [24.0, 112, 2.299999999999999, 16]
Diff: 0.07875457875457875
[24.0, 112, 2.3499999999999988, 14]
Child: [24.0, 112, 2.3499999999999988, 14]
Old_chrom: [24.0, 112, 2.299999999999999, 16]
Diff: 0.09634819197336895
[16.0, 112, 2.3499999999999988, 13]
Child: [24.0, 112, 2.65, 10]
Old_chrom: [24.0, 104, 2.6500000000000004, 9]
Diff: 0.03708791780224655
[16.0, 112, 2.6999999999999997, 11]
Child: [24.0, 104, 2.5000000000000004, 13]
Old_chrom: [16.0, 88, 2.5000000000000004, 13]
Diff: 0.08012820512820512
[24.0, 104, 2.5000000000000004, 13]
Child: [16.0, 120, 2.75, 13]
Old_chrom: [26.0, 112, 2.75, 14]
Diff: 0.08917124542124541
[24.0, 112, 2.7, 14]
Child: [36.0, 112, 2.5000000000000004, 13]
Old_chrom: [40.0, 120, 2.4999999999999982, 13]
Diff: 0.04006411534174287
[28.0, 120, 2.5000000000000004, 12]
Child: [28.0, 120, 2.5000000000000004, 12]
Old_chrom: [40.0, 120, 2.4999999999999982, 13]
Diff: 0.08035715563478316
[28.0, 128, 2.5500000000000003, 12]
Child: [32.0, 120, 2.6500000000000004, 9]
Old_chrom: [24.0, 104, 2.6500000000000004, 9]
Diff: 0.08012820512820512
[32.0, 112, 2.6000000000000005, 10]
Child: [36.0, 112, 2.6500000000000004, 9]
Old_chrom: [24.0, 104, 2.6500000000000004, 9]
Diff: 0.08173076923076923
[44.0, 104, 2.6500000000000004, 8]
Child: [36.0, 120, 2.75, 13]
Old_chrom: [40.0, 104, 2.7499999999999973, 12]
Diff: 0.0771520286492183
[28.0, 112, 2.8, 14]
Child: [28.0, 112, 2.8, 14]
Old_chrom: [26.0, 112, 2.75, 14]
Diff: 0.07105057292574991
[36.0, 120, 2.75, 15]
Child: [36.0, 120, 2.75, 15]
Old_chrom: [32.0, 120, 2.75, 15]
Diff: 0.020833333333333332
[28.0, 128, 2.75, 16]
Child: [28.0, 128, 2.75, 16]
Old_chrom: [32.0, 120, 2.75, 15]
Diff: 0.05792124542124542
[28.0, 128, 2.7, 17]
Created model:  amaranth_peccary
Created model:  eggplant_loon
Created model:  exuberant_agouti
Created model:  functional_petrel
Created model:  funky_vole
Created model:  gigantic_mink
Created model:  glaring_dragonfly
Created model:  hissing_mole
Created model:  hot_grasshopper
Created model:  lavender_capuchin
Created model:  lemon_yak
Created model:  lurking_grebe
Created model:  neon_alligator
Created model:  omniscient_frog
Created model:  paper_narwhal
Created model:  portable_oxpecker
Created model:  pygmy_chupacabra
Created model:  ultra_silkworm
Created model:  unselfish_hedgehog
Created model:  vegan_coucal
[2K[2Kamaranth_peccary
[31m[EVAL] Best accuracy:11.869999885559082[0m
[2K[2Keggplant_loon
[31m[EVAL] Best accuracy:15.039999961853027[0m
[2K[2Kexuberant_agouti
[31m[EVAL] Best accuracy:14.579999923706055[0m
[2K[2Kfunctional_petrel
[31m[EVAL] Best accuracy:14.449999809265137[0m
[2K[2Kfunky_vole
[31m[EVAL] Best accuracy:12.449999809265137[0m
[2K[2Kgigantic_mink
[31m[EVAL] Best accuracy:12.119999885559082[0m
[2K[2Kglaring_dragonfly
[31m[EVAL] Best accuracy:11.769999504089355[0m
[2K[2Khissing_mole
[31m[EVAL] Best accuracy:16.10999870300293[0m
[2K[2Khot_grasshopper
[31m[EVAL] Best accuracy:14.869999885559082[0m
[2K[2Klavender_capuchin
[31m[EVAL] Best accuracy:16.10999870300293[0m
[2K[2Klemon_yak
[31m[EVAL] Best accuracy:11.519999504089355[0m
[2K[2Klurking_grebe
[31m[EVAL] Best accuracy:15.809999465942383[0m
[2K[2Kneon_alligator
[31m[EVAL] Best accuracy:15.569999694824219[0m
[2K[2Komniscient_frog
[31m[EVAL] Best accuracy:16.520000457763672[0m
[2K[2Kpaper_narwhal
[31m[EVAL] Best accuracy:13.739999771118164[0m
[2K[2Kportable_oxpecker
[31m[EVAL] Best accuracy:11.449999809265137[0m
[2K[2Kpygmy_chupacabra
[31m[EVAL] Best accuracy:13.549999237060547[0m
[2K[2Kultra_silkworm
[31m[EVAL] Best accuracy:12.869999885559082[0m
[2K[2Kunselfish_hedgehog
[31m[EVAL] Best accuracy:13.84999942779541[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 128, 'WA': 28.0, 'WM': 2.7, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 128, 'WA': 28.0, 'WM': 2.7, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 128, 'WA': 28.0, 'WM': 2.7, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 9505.896219015121
ic| self.metadata["time_remaining"]: 73144.62534761429
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 0.0,
               'codename': 'Sokoto',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_3/tests_Sokoto_23_10_2024_22_42/Generation_3/vegan_coucal',
               'input_shape': [50000, 1, 9, 9],
               'mode': 'NAS',
               'num_classes': 9,
               'test_type': 'T3_Proxy/seed_3',
               'time_remaining': 63638.18119549751,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| unique_values: array([0.09411765, 0.09803922, 0.10196079, 0.10588235, 0.10980392,
                          0.11372549, 0.11764706, 0.12156863, 0.1254902 , 0.12941177,
                          0.13333334, 0.13725491, 0.14117648, 0.14509805, 0.14901961,
                          0.15294118, 0.15686275, 0.16078432, 0.16470589, 0.16862746,
                          0.17254902, 0.1764706 , 0.18039216, 0.18431373, 0.1882353 ,
                          0.19215687, 0.19607843, 0.2       , 0.20392157, 0.20784314,
                          0.21176471, 0.21568628, 0.21960784, 0.22352941, 0.22745098,
                          0.23137255, 0.23529412, 0.23921569, 0.24313726, 0.24705882,
                          0.2509804 , 0.25490198, 0.25882354, 0.2627451 , 0.26666668,
                          0.27058825, 0.27450982, 0.2784314 , 0.28235295, 0.28627452,
                          0.2901961 , 0.29411766, 0.29803923, 0.3019608 , 0.30588236,
                          0.30980393, 0.3137255 , 0.31764707, 0.32156864, 0.3254902 ,
                          0.32941177, 0.33333334, 0.3372549 , 0.34117648, 0.34509805,
                          0.34901962, 0.3529412 , 0.35686275, 0.36078432, 0.3647059 ,
                          0.36862746, 0.37254903, 0.3764706 , 0.38039216, 0.38431373,
                          0.3882353 , 0.39215687, 0.39607844, 0.4       , 0.40392157,
                          0.40784314, 0.4117647 , 0.41568628, 0.41960785, 0.42352942,
                          0.42745098, 0.43137255, 0.43529412, 0.4392157 , 0.44313726,
                          0.44705883, 0.4509804 , 0.45490196, 0.45882353, 0.4627451 ,
                          0.46666667, 0.47058824, 0.4745098 , 0.47843137, 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7411765 ,
                          0.74509805, 0.7490196 , 0.7529412 , 0.75686276, 0.7647059 ,
                          0.76862746, 0.77254903, 0.7764706 , 0.78431374, 0.7882353 ,
                          0.7921569 , 0.79607844, 0.8       , 0.8039216 , 0.8156863 ,
                          0.81960785, 0.8235294 , 0.827451  , 0.83137256, 0.8392157 ,
                          0.8509804 , 0.85882354, 0.8627451 , 0.8666667 , 0.87058824,
                          0.8784314 , 0.88235295, 0.8901961 , 0.89411765, 0.90588236,
                          0.9098039 , 0.9137255 , 0.92156863, 0.92941177, 0.93333334,
                          0.9411765 , 0.9490196 , 0.9529412 , 0.972549  ], dtype=float32)
ic| C: 3
ic| H: 32
ic| PH: 4
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7ff120aba230>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff120ab82b0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff120abbf10>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7ff120abaa70>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7ff06045cc40>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7ff06045ce50>,
                 ToTensor(),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7ff06045e770>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['bright_wildebeest',
                  'dexterous_booby',
                  'gay_alpaca',
                  'unique_finch',
                  'bald_nyala',
                  'steadfast_jackrabbit',
                  'competent_bandicoot',
                  'sincere_wasp',
                  'puzzling_lorikeet',
                  'qualified_lemming',
                  'mahogany_numbat',
                  'striped_albatross',
                  'practical_mantis',
                  'vagabond_pigeon',
                  'abiding_mantis',
                  'arboreal_vulture',
                  'ninja_mongrel',
                  'laughing_termite',
                  'auburn_lynx',
                  'grinning_beluga']
ic| params: [56.0, 120, 2.849999999999997, 15, 8]
ic| params: [40.0, 56, 2.0999999999999996, 19, 8]
ic| params: [64.0, 96, 2.0999999999999996, 9, 8]
ic| params: [40.0, 80, 2.7499999999999973, 17, 8]
ic| params: [64.0, 120, 2.05, 21, 8]
ic| params: [48.0, 96, 2.7499999999999973, 12, 8]
ic| params: [48.0, 112, 2.549999999999998, 14, 8]
ic| params: [56.0, 112, 2.799999999999997, 18, 8]
ic| params: [48.0, 112, 2.3499999999999988, 10, 8]
ic| params: [56.0, 112, 2.7499999999999973, 12, 8]
ic| params: [64.0, 72, 2.1999999999999993, 14, 8]
ic| params: [32.0, 40, 2.0999999999999996, 15, 8]
ic| params: [16.0, 40, 2.6499999999999977, 22, 8]
ic| params: [24.0, 120, 2.6499999999999977, 18, 8]
ic| params: [56.0, 72, 2.799999999999997, 22, 8]
ic| params: [16.0, 88, 2.4999999999999982, 9, 8]
ic| params: [32.0, 96, 2.599999999999998, 12, 8]
ic| params: [48.0, 56, 2.849999999999997, 19, 8]
ic| params: [32.0, 80, 2.1499999999999995, 14, 8]
ic| params: [64.0, 104, 2.4999999999999982, 22, 8]
ic| individuals: ['bright_wildebeest',
                  'dexterous_booby',
                  'gay_alpaca',
                  'unique_finch',
                  'bald_nyala',
                  'steadfast_jackrabbit',
                  'competent_bandicoot',
                  'sincere_wasp',
                  'puzzling_lorikeet',
                  'qualified_lemming',
                  'mahogany_numbat',
                  'striped_albatross',
                  'practical_mantis',
                  'vagabond_pigeon',
                  'abiding_mantis',
                  'arboreal_vulture',
                  'ninja_mongrel',
                  'laughing_termite',
                  'auburn_lynx',
                  'grinning_beluga']
ic| params_dict: {'abiding_mantis': [56.0, 72, 2.799999999999997, 22, 8],
                  'arboreal_vulture': [16.0, 88, 2.4999999999999982, 9, 8],
                  'auburn_lynx': [32.0, 80, 2.1499999999999995, 14, 8],
                  'bald_nyala': [64.0, 120, 2.05, 21, 8],
                  'bright_wildebeest': [56.0, 120, 2.849999999999997, 15, 8],
                  'competent_bandicoot': [48.0, 112, 2.549999999999998, 14, 8],
                  'dexterous_booby': [40.0, 56, 2.0999999999999996, 19, 8],
                  'gay_alpaca': [64.0, 96, 2.0999999999999996, 9, 8],
                  'grinning_beluga': [64.0, 104, 2.4999999999999982, 22, 8],
                  'laughing_termite': [48.0, 56, 2.849999999999997, 19, 8],
                  'mahogany_numbat': [64.0, 72, 2.1999999999999993, 14, 8],
                  'ninja_mongrel': [32.0, 96, 2.599999999999998, 12, 8],
                  'practical_mantis': [16.0, 40, 2.6499999999999977, 22, 8],
                  'puzzling_lorikeet': [48.0, 112, 2.3499999999999988, 10, 8],
                  'qualified_lemming': [56.0, 112, 2.7499999999999973, 12, 8],
                  'sincere_wasp': [56.0, 112, 2.799999999999997, 18, 8],
                  'steadfast_jackrabbit': [48.0, 96, 2.7499999999999973, 12, 8],
                  'striped_albatross': [32.0, 40, 2.0999999999999996, 15, 8],
                  'unique_finch': [40.0, 80, 2.7499999999999973, 17, 8],
                  'vagabond_pigeon': [24.0, 120, 2.6499999999999977, 18, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff120aba230>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff120ab82b0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff120abbf10>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff120abaa70>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff06045cc40>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff06045ce50>,
                                                ToTensor(),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7ff06045e770>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 5'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=15)]')
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 40024276992
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 60658.00741124153
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| ranking_prediction_df:                           score
                           pearl_peacock        131.137964
                           merciful_griffin     119.319142
                           talented_swallow     117.368982
                           fuzzy_teal           117.000703
                           screeching_pudu      101.435650
                           monumental_hamster    97.821110
                           private_turkey        89.322605
                           glorious_dugong       88.548601
                           able_owl              88.239492
                           mustard_gazelle       87.610764
                           pompous_piculet       87.329114
                           beige_hare            85.929269
                           important_duck        82.349725
                           idealistic_skua       80.754013
                           impetuous_quoll       79.250938
                           hasty_partridge       68.829096
                           futuristic_squirrel   66.685286
                           antique_emu           66.127525
                           miniature_scallop     64.510822
                           charcoal_sawfish      63.504768
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvegan_coucal
[31m[EVAL] Best accuracy:15.789999961853027[0m
['parents.csv', 'amaranth_peccary', 'eggplant_loon', 'exuberant_agouti', 'functional_petrel', 'funky_vole', 'gigantic_mink', 'glaring_dragonfly', 'hissing_mole', 'hot_grasshopper', 'lavender_capuchin', 'lemon_yak', 'lurking_grebe', 'neon_alligator', 'omniscient_frog', 'paper_narwhal', 'portable_oxpecker', 'pygmy_chupacabra', 'ultra_silkworm', 'unselfish_hedgehog', 'vegan_coucal', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 16.52
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_3/tests_Sokoto_23_10_2024_22_42/Generation_3/omniscient_frog/config.yaml

=== Training ===
  Allotted compute time remaining: ~17h,40m,38s
Early stopping at epoch 83
[31m[EVAL] Best accuracy:52.30999755859375[0m

=== Predicting ===
  Allotted compute time remaining: ~17h,3m,21s

========== Dataset  CIFAR10   =============================================
  Metadata:
   - input_shape         : [50000, 3, 32, 32]
   - codename            : CIFAR10
   - benchmark           : 90.65
   - num_classes         : 10
   - time_remaining      : 61399.32743644714

=== Processing Data ===
  Allotted compute time remaining: ~17h,3m,19s

=== Performing NAS ===
  Allotted compute time remaining: ~16h,50m,58s
spawn
Created model:  pearl_peacock
Created model:  merciful_griffin
Created model:  talented_swallow
Created model:  fuzzy_teal
Created model:  screeching_pudu
Created model:  monumental_hamster
Created model:  private_turkey
Created model:  glorious_dugong
Created model:  able_owl
Created model:  mustard_gazelle
Created model:  pompous_piculet
Created model:  beige_hare
Created model:  important_duck
Created model:  idealistic_skua
Created model:  impetuous_quoll
Created model:  hasty_partridge
Created model:  futuristic_squirrel
Created model:  antique_emu
Created model:  miniature_scallop
Created model:  charcoal_sawfish
[2K[2Kable_owl
[31m[EVAL] Best accuracy:74.13999938964844[0m
[2K[2Kantique_emu
[31m[EVAL] Best accuracy:73.90999603271484[0m
[2K[2Kbeige_hare
[31m[EVAL] Best accuracy:69.86000061035156[0m
[2K[2Kcharcoal_sawfish
[31m[EVAL] Best accuracy:71.83000183105469[0m
[2K[2Kfuturistic_squirrel
[31m[EVAL] Best accuracy:72.97000122070312[0m
[2K[2Kfuzzy_teal
[31m[EVAL] Best accuracy:76.54000091552734[0m
[2K[2Kglorious_dugong
[31m[EVAL] Best accuracy:70.68999481201172[0m
[2K[2Khasty_partridge
[31m[EVAL] Best accuracy:72.20999908447266[0m
[2K[2Kidealistic_skua
[31m[EVAL] Best accuracy:70.23999786376953[0m
[2K[2Kimpetuous_quoll
[31m[EVAL] Best accuracy:73.20999908447266[0m
[2K[2Kimportant_duck
[31m[EVAL] Best accuracy:76.54999542236328[0m
[2K[2Kmerciful_griffin
[31m[EVAL] Best accuracy:76.93999481201172[0m
[2K[2Kminiature_scallop
[31m[EVAL] Best accuracy:72.05999755859375[0m
[2K[2Kmonumental_hamster
[31m[EVAL] Best accuracy:77.66999816894531[0m
[2K[2Kmustard_gazelle
[31m[EVAL] Best accuracy:72.94999694824219[0m
[2K[2Kpearl_peacock
[31m[EVAL] Best accuracy:73.18000030517578[0m
[2K[2Kpompous_piculet
[31m[EVAL] Best accuracy:72.00999450683594[0m
[2K[2Kprivate_turkey
[31m[EVAL] Best accuracy:76.47000122070312[0m
[2K[2Kscreeching_pudu
[31m[EVAL] Best accuracy:73.81999969482422[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2339.4676625728607
ic| self.metadata["time_remaining"]: 60658.00741124153
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 16, 'W0': 104, 'WA': 48.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Ktalented_swallow
[31m[EVAL] Best accuracy:76.22999572753906[0m
['pearl_peacock', 'merciful_griffin', 'talented_swallow', 'fuzzy_teal', 'screeching_pudu', 'monumental_hamster', 'private_turkey', 'glorious_dugong', 'able_owl', 'mustard_gazelle', 'pompous_piculet', 'beige_hare', 'important_duck', 'idealistic_skua', 'impetuous_quoll', 'hasty_partridge', 'futuristic_squirrel', 'antique_emu', 'miniature_scallop', 'charcoal_sawfish', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.67
Child: [20.0, 112, 2.6500000000000004, 12]
Old_chrom: [24.0, 104, 2.6499999999999977, 9]
Diff: 0.09363554513273478
[20.0, 120, 2.7, 13]
Child: [36.0, 104, 2.7, 9]
Old_chrom: [32.0, 112, 2.7, 12]
Diff: 0.09363553113553114
[36.0, 104, 2.6500000000000004, 10]
Child: [28.0, 112, 2.5, 10]
Old_chrom: [24.0, 120, 2.5, 13]
Diff: 0.09363553113553114
[28.0, 120, 2.45, 10]
Child: [64.0, 120, 2.599999999999998, 9]
Old_chrom: [64.0, 112, 2.599999999999998, 9]
Diff: 0.019230769230769232
[56.0, 112, 2.599999999999998, 10]
Child: [56.0, 112, 2.599999999999998, 10]
Old_chrom: [64.0, 112, 2.599999999999998, 9]
Diff: 0.05952380952380952
[56.0, 120, 2.599999999999998, 10]
Child: [56.0, 120, 2.599999999999998, 10]
Old_chrom: [64.0, 112, 2.599999999999998, 9]
Diff: 0.07875457875457875
[64.0, 120, 2.599999999999998, 10]
Child: [64.0, 120, 2.599999999999998, 10]
Old_chrom: [64.0, 112, 2.599999999999998, 9]
Diff: 0.03708791208791209
[56.0, 112, 2.549999999999998, 9]
Child: [56.0, 112, 2.549999999999998, 9]
Old_chrom: [56.0, 112, 2.4499999999999984, 9]
Diff: 0.08574929257125442
[56.0, 120, 2.599999999999998, 10]
Child: [56.0, 120, 2.599999999999998, 10]
Old_chrom: [64.0, 112, 2.599999999999998, 9]
Diff: 0.07875457875457875
[56.0, 112, 2.549999999999998, 11]
Child: [32.0, 120, 2.599999999999998, 9]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.09523810801573554
[24.0, 112, 2.549999999999998, 10]
Child: [64.0, 104, 2.6499999999999977, 9]
Old_chrom: [64.0, 112, 2.599999999999998, 9]
Diff: 0.07986467548985247
[56.0, 96, 2.6499999999999977, 10]
Child: [48.0, 120, 2.599999999999998, 9]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.09523810801573554
[40.0, 112, 2.599999999999998, 10]
Child: [32.0, 120, 2.599999999999998, 15]
Old_chrom: [16.0, 120, 2.599999999999998, 15]
Diff: 0.08333333333333333
[40.0, 112, 2.6499999999999977, 14]
Child: [40.0, 112, 2.6499999999999977, 14]
Old_chrom: [48.0, 104, 2.6499999999999977, 16]
Diff: 0.0966117216117216
[48.0, 104, 2.6999999999999975, 13]
Child: [16.0, 104, 2.6499999999999977, 15]
Old_chrom: [16.0, 120, 2.599999999999998, 15]
Diff: 0.0990954447206217
[24.0, 96, 2.599999999999998, 14]
Child: [24.0, 104, 2.7499999999999973, 9]
Old_chrom: [24.0, 104, 2.6499999999999977, 9]
Diff: 0.08574929257125442
[32.0, 112, 2.799999999999997, 9]
Child: [32.0, 112, 2.799999999999997, 9]
Old_chrom: [32.0, 104, 2.7499999999999973, 10]
Diff: 0.09772181834699534
[40.0, 112, 2.7499999999999973, 10]
Child: [32.0, 104, 2.6499999999999977, 10]
Old_chrom: [24.0, 104, 2.6499999999999977, 9]
Diff: 0.05952380952380952
[40.0, 112, 2.599999999999998, 9]
Child: [40.0, 112, 2.599999999999998, 9]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.0728022105798381
[40.0, 104, 2.599999999999998, 10]
Child: [40.0, 104, 2.599999999999998, 10]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.07417583695346448
[48.0, 104, 2.549999999999998, 10]
Child: [48.0, 104, 2.549999999999998, 10]
Old_chrom: [48.0, 120, 2.5, 10]
Diff: 0.09909544472062062
[56.0, 112, 2.549999999999998, 11]
Created model:  accelerated_hawk
Created model:  amaranth_firefly
Created model:  amigurumi_angelfish
Created model:  amigurumi_pig
Created model:  cunning_limpet
Created model:  enchanted_warthog
Created model:  great_stoat
Created model:  hairy_zebu
Created model:  infrared_groundhog
Created model:  large_parrot
Created model:  literate_chinchilla
Created model:  olive_mammoth
Created model:  polite_hound
Created model:  prophetic_hare
Created model:  resourceful_tody
Created model:  scrupulous_lemming
Created model:  silent_guppy
Created model:  victorious_caracal
Created model:  wonderful_potoo
Created model:  yellow_otter
[2K[2Kaccelerated_hawk
[31m[EVAL] Best accuracy:75.9000015258789[0m
[2K[2Kamaranth_firefly
[31m[EVAL] Best accuracy:75.0999984741211[0m
[2K[2Kamigurumi_angelfish
[31m[EVAL] Best accuracy:75.7699966430664[0m
[2K[2Kamigurumi_pig
[31m[EVAL] Best accuracy:72.63999938964844[0m
[2K[2Kcunning_limpet
[31m[EVAL] Best accuracy:75.79000091552734[0m
[2K[2Kenchanted_warthog
[31m[EVAL] Best accuracy:75.6500015258789[0m
[2K[2Kgreat_stoat
[31m[EVAL] Best accuracy:76.38999938964844[0m
[2K[2Khairy_zebu
[31m[EVAL] Best accuracy:75.50999450683594[0m
[2K[2Kinfrared_groundhog
[31m[EVAL] Best accuracy:77.44999694824219[0m
[2K[2Klarge_parrot
[31m[EVAL] Best accuracy:75.22000122070312[0m
[2K[2Kliterate_chinchilla
[31m[EVAL] Best accuracy:74.9000015258789[0m
[2K[2Kolive_mammoth
[31m[EVAL] Best accuracy:76.6199951171875[0m
[2K[2Kpolite_hound
[31m[EVAL] Best accuracy:71.04000091552734[0m
[2K[2Kprophetic_hare
[31m[EVAL] Best accuracy:75.93000030517578[0m
[2K[2Kresourceful_tody
[31m[EVAL] Best accuracy:78.11000061035156[0m
[2K[2Kscrupulous_lemming
[31m[EVAL] Best accuracy:72.9000015258789[0m
[2K[2Ksilent_guppy
[31m[EVAL] Best accuracy:74.33000183105469[0m
[2K[2Kvictorious_caracal
[31m[EVAL] Best accuracy:73.72000122070312[0m
[2K[2Kwonderful_potoo
[31m[EVAL] Best accuracy:74.9000015258789[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 4494.707392215729
ic| self.metadata["time_remaining"]: 60658.00741124153
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 56.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 96, 'WA': 28.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kyellow_otter
[31m[EVAL] Best accuracy:75.04999542236328[0m
['parents.csv', 'accelerated_hawk', 'amaranth_firefly', 'amigurumi_angelfish', 'amigurumi_pig', 'cunning_limpet', 'enchanted_warthog', 'great_stoat', 'hairy_zebu', 'infrared_groundhog', 'large_parrot', 'literate_chinchilla', 'olive_mammoth', 'polite_hound', 'prophetic_hare', 'resourceful_tody', 'scrupulous_lemming', 'silent_guppy', 'victorious_caracal', 'wonderful_potoo', 'yellow_otter', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 78.11
Child: [38.0, 112, 2.6500000000000004, 10]
Old_chrom: [40.0, 112, 2.599999999999998, 10]
Diff: 0.07105057292575152
[38.0, 104, 2.7, 10]
Child: [38.0, 104, 2.7, 10]
Old_chrom: [36.0, 104, 2.6500000000000004, 10]
Diff: 0.07105057292574991
[30.0, 104, 2.75, 9]
Child: [30.0, 104, 2.75, 9]
Old_chrom: [48.0, 104, 2.7499999999999973, 9]
Diff: 0.09375001399720366
[30.0, 104, 2.75, 9]
Child: [44.0, 112, 2.6, 10]
Old_chrom: [40.0, 112, 2.599999999999998, 10]
Diff: 0.02083334611097364
[36.0, 112, 2.65, 10]
Child: [36.0, 112, 2.65, 10]
Old_chrom: [24.0, 104, 2.6499999999999977, 9]
Diff: 0.0995879248655524
[44.0, 120, 2.65, 10]
Child: [30.0, 120, 2.6500000000000004, 12]
Old_chrom: [32.0, 112, 2.7, 12]
Diff: 0.09028134215651915
[30.0, 120, 2.6000000000000005, 12]
Child: [48.0, 104, 2.6500000000000004, 10]
Old_chrom: [36.0, 104, 2.6500000000000004, 10]
Diff: 0.0625
[40.0, 104, 2.6000000000000005, 9]
Child: [40.0, 104, 2.6000000000000005, 9]
Old_chrom: [40.0, 112, 2.599999999999998, 10]
Diff: 0.03708792608511574
[40.0, 104, 2.5500000000000007, 10]
Child: [40.0, 104, 2.5500000000000007, 10]
Old_chrom: [40.0, 112, 2.599999999999998, 10]
Diff: 0.07986467548985085
[40.0, 96, 2.5500000000000007, 11]
Child: [40.0, 96, 2.5500000000000007, 11]
Old_chrom: [40.0, 112, 2.5500000000000003, 10]
Diff: 0.056318687033015784
[32.0, 96, 2.500000000000001, 11]
Child: [42.0, 104, 2.6500000000000004, 10]
Old_chrom: [40.0, 112, 2.599999999999998, 10]
Diff: 0.09028134215652076
[42.0, 104, 2.6000000000000005, 11]
Child: [28.0, 112, 2.7, 12]
Old_chrom: [20.0, 120, 2.7, 13]
Diff: 0.07875457875457875
[36.0, 104, 2.7, 13]
Child: [36.0, 104, 2.7, 13]
Old_chrom: [32.0, 112, 2.7, 12]
Diff: 0.05792124542124542
[36.0, 96, 2.75, 12]
Child: [36.0, 96, 2.75, 12]
Old_chrom: [40.0, 112, 2.7499999999999973, 10]
Diff: 0.09500917150636116
[36.0, 104, 2.7, 12]
Child: [46.0, 104, 2.6500000000000004, 10]
Old_chrom: [36.0, 104, 2.6500000000000004, 10]
Diff: 0.052083333333333336
[38.0, 104, 2.7, 9]
Child: [38.0, 104, 2.7, 9]
Old_chrom: [36.0, 104, 2.6500000000000004, 10]
Diff: 0.08890771578289278
[30.0, 112, 2.6500000000000004, 8]
Child: [34.0, 112, 2.6500000000000004, 11]
Old_chrom: [36.0, 104, 2.6500000000000004, 10]
Diff: 0.04750457875457875
[42.0, 120, 2.6500000000000004, 12]
Child: [42.0, 120, 2.6500000000000004, 12]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.07105057292575018
[50.0, 112, 2.7, 13]
Child: [50.0, 112, 2.7, 13]
Old_chrom: [48.0, 104, 2.6999999999999975, 13]
Diff: 0.029647449894639553
[42.0, 112, 2.75, 14]
Child: [42.0, 112, 2.75, 14]
Old_chrom: [40.0, 112, 2.7499999999999973, 10]
Diff: 0.08184525209244176
[50.0, 104, 2.7, 13]
Child: [52.0, 104, 2.6500000000000004, 10]
Old_chrom: [36.0, 104, 2.6500000000000004, 10]
Diff: 0.08333333333333333
[52.0, 104, 2.7, 11]
Child: [38.0, 112, 2.7, 12]
Old_chrom: [32.0, 112, 2.7, 12]
Diff: 0.03125
[46.0, 112, 2.7, 11]
Child: [46.0, 112, 2.7, 11]
Old_chrom: [32.0, 112, 2.7, 12]
Diff: 0.09077380952380953
[38.0, 120, 2.75, 11]
Child: [36.0, 104, 2.599999999999998, 10]
Old_chrom: [40.0, 112, 2.599999999999998, 10]
Diff: 0.04006410256410256
[36.0, 104, 2.549999999999998, 10]
Child: [36.0, 104, 2.549999999999998, 10]
Old_chrom: [36.0, 104, 2.6500000000000004, 10]
Diff: 0.08574929257125556
[36.0, 112, 2.599999999999998, 11]
Child: [40.0, 104, 2.599999999999998, 10]
Old_chrom: [40.0, 112, 2.599999999999998, 10]
Diff: 0.019230769230769232
[32.0, 96, 2.599999999999998, 10]
Child: [32.0, 96, 2.599999999999998, 10]
Old_chrom: [40.0, 112, 2.599999999999998, 10]
Diff: 0.08012820512820512
[40.0, 104, 2.549999999999998, 11]
Child: [20.0, 112, 2.599999999999998, 13]
Old_chrom: [16.0, 120, 2.599999999999998, 15]
Diff: 0.07577838827838827
[28.0, 112, 2.599999999999998, 13]
Child: [28.0, 112, 2.599999999999998, 13]
Old_chrom: [40.0, 120, 2.6, 12]
Diff: 0.0995879248655524
[28.0, 104, 2.549999999999998, 14]
Child: [56.0, 96, 2.599999999999998, 10]
Old_chrom: [64.0, 112, 2.599999999999998, 9]
Diff: 0.09798534798534797
[64.0, 96, 2.599999999999998, 10]
Child: [36.0, 104, 2.599999999999998, 10]
Old_chrom: [40.0, 112, 2.599999999999998, 10]
Diff: 0.04006410256410256
[36.0, 112, 2.599999999999998, 10]
Child: [36.0, 112, 2.599999999999998, 10]
Old_chrom: [40.0, 112, 2.599999999999998, 10]
Diff: 0.020833333333333332
[36.0, 120, 2.549999999999998, 10]
Child: [36.0, 120, 2.549999999999998, 10]
Old_chrom: [40.0, 112, 2.5500000000000003, 10]
Diff: 0.04006411534174287
[28.0, 112, 2.4999999999999982, 11]
Child: [28.0, 112, 2.4999999999999982, 11]
Old_chrom: [24.0, 120, 2.5, 13]
Diff: 0.0757783997070572
[28.0, 104, 2.549999999999998, 11]
Child: [28.0, 104, 2.549999999999998, 11]
Old_chrom: [40.0, 112, 2.5500000000000003, 10]
Diff: 0.0995879248655524
[36.0, 112, 2.4999999999999982, 11]
Child: [20.0, 104, 2.6500000000000004, 13]
Old_chrom: [24.0, 104, 2.6499999999999977, 9]
Diff: 0.09226191875910841
[np.int64(16), 96, 2.6000000000000005, 12]
Child: [56.0, 96, 2.6500000000000004, 10]
Old_chrom: [56.0, 96, 2.6499999999999977, 10]
Diff: 1.3997203657444208e-08
[48.0, 96, 2.6500000000000004, 11]
Child: [48.0, 96, 2.6500000000000004, 11]
Old_chrom: [36.0, 104, 2.6500000000000004, 10]
Diff: 0.0995879120879121
[56.0, 96, 2.7, 10]
Child: [48.0, 104, 2.7, 13]
Old_chrom: [48.0, 104, 2.6999999999999975, 13]
Diff: 1.3997203657444208e-08
[48.0, 104, 2.7, 13]
Child: [48.0, 104, 2.7, 13]
Old_chrom: [48.0, 104, 2.6999999999999975, 13]
Diff: 1.3997203657444208e-08
[56.0, 96, 2.6500000000000004, 14]
Child: [56.0, 96, 2.6500000000000004, 14]
Old_chrom: [48.0, 104, 2.6499999999999977, 16]
Diff: 0.09661173560892528
[64.0, 104, 2.6500000000000004, 15]
Child: [56.0, 104, 2.599999999999998, 10]
Old_chrom: [64.0, 112, 2.599999999999998, 9]
Diff: 0.07875457875457875
[48.0, 112, 2.549999999999998, 10]
Child: [48.0, 112, 2.549999999999998, 10]
Old_chrom: [48.0, 104, 2.599999999999998, 9]
Diff: 0.09772181834699534
[56.0, 112, 2.4999999999999982, 11]
Child: [20.0, 96, 2.6499999999999977, 13]
Old_chrom: [24.0, 96, 2.599999999999998, 14]
Diff: 0.09932438244955943
[28.0, 96, 2.6499999999999977, 13]
Created model:  bouncy_barnacle
Created model:  cordial_stingray
Created model:  gentle_chupacabra
Created model:  ginger_hedgehog
Created model:  gregarious_lorikeet
Created model:  hallowed_alligator
Created model:  illustrious_chicken
Created model:  kickass_rat
Created model:  mutant_stingray
Created model:  nocturnal_dragon
Created model:  peculiar_coati
Created model:  placid_bee
Created model:  polar_mandrill
Created model:  pompous_cicada
Created model:  porcelain_flamingo
Created model:  psychedelic_inchworm
Created model:  truthful_chamois
Created model:  tunneling_tapir
Created model:  turquoise_pigeon
Created model:  vague_guppy
[2K[2Kbouncy_barnacle
[31m[EVAL] Best accuracy:77.16999816894531[0m
[2K[2Kcordial_stingray
[31m[EVAL] Best accuracy:75.3699951171875[0m
[2K[2Kgentle_chupacabra
[31m[EVAL] Best accuracy:77.45999908447266[0m
[2K[2Kginger_hedgehog
[31m[EVAL] Best accuracy:72.3699951171875[0m
[2K[2Kgregarious_lorikeet
[31m[EVAL] Best accuracy:74.95999908447266[0m
[2K[2Khallowed_alligator
[31m[EVAL] Best accuracy:75.36000061035156[0m
[2K[2Killustrious_chicken
[31m[EVAL] Best accuracy:76.56999969482422[0m
[2K[2Kkickass_rat
[31m[EVAL] Best accuracy:69.44999694824219[0m
[2K[2Kmutant_stingray
[31m[EVAL] Best accuracy:72.58000183105469[0m
[2K[2Knocturnal_dragon
[31m[EVAL] Best accuracy:76.83000183105469[0m
[2K[2Kpeculiar_coati
[31m[EVAL] Best accuracy:77.36000061035156[0m
[2K[2Kplacid_bee
[31m[EVAL] Best accuracy:74.8699951171875[0m
[2K[2Kpolar_mandrill
[31m[EVAL] Best accuracy:71.56999969482422[0m
[2K[2Kpompous_cicada
[31m[EVAL] Best accuracy:75.83000183105469[0m
[2K[2Kporcelain_flamingo
[31m[EVAL] Best accuracy:75.83000183105469[0m
[2K[2Kpsychedelic_inchworm
[31m[EVAL] Best accuracy:75.44999694824219[0m
[2K[2Ktruthful_chamois
[31m[EVAL] Best accuracy:73.91999816894531[0m
[2K[2Ktunneling_tapir
[31m[EVAL] Best accuracy:71.90999603271484[0m
[2K[2Kturquoise_pigeon
[31m[EVAL] Best accuracy:76.0[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 96, 'WA': 28.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 96, 'WA': 28.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 96, 'WA': 28.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6692.376891613007
ic| self.metadata["time_remaining"]: 60658.00741124153
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 90.65,
               'codename': 'CIFAR10',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_3/tests_CIFAR10_24_10_2024_02_10/Generation_3/vague_guppy',
               'input_shape': [50000, 3, 32, 32],
               'mode': 'NAS',
               'num_classes': 10,
               'test_type': 'T3_Proxy/seed_3',
               'time_remaining': 53965.22087430954,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

[2Kvague_guppy
[31m[EVAL] Best accuracy:72.2699966430664[0m
['parents.csv', 'bouncy_barnacle', 'cordial_stingray', 'gentle_chupacabra', 'ginger_hedgehog', 'gregarious_lorikeet', 'hallowed_alligator', 'illustrious_chicken', 'kickass_rat', 'mutant_stingray', 'nocturnal_dragon', 'peculiar_coati', 'placid_bee', 'polar_mandrill', 'pompous_cicada', 'porcelain_flamingo', 'psychedelic_inchworm', 'truthful_chamois', 'tunneling_tapir', 'turquoise_pigeon', 'vague_guppy', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.46
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_3/tests_CIFAR10_24_10_2024_02_10/Generation_2/resourceful_tody/config.yaml

=== Training ===
  Allotted compute time remaining: ~14h,59m,25s
[31m[EVAL] Best accuracy:91.86000061035156[0m

=== Predicting ===
  Allotted compute time remaining: ~14h,27m,45s

rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/labels
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/predictions
rsync -avr --exclude='**/*x.npy' --exclude='**/train*.npy' --exclude='**/valid*.npy'   --include='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/labels/
sending incremental file list
CIFAR10/
CIFAR10/cifar-10-python.tar.gz
CIFAR10/metadata
CIFAR10/test_y.npy
ImageNet16-120/
ImageNet16-120/metadata
ImageNet16-120/test_y.npy
Sudoku/
Sudoku/Example Image with Corresponding Sudoku Grid.png
Sudoku/README
Sudoku/metadata
Sudoku/test_y.npy
Sudoku/Sokoto/
Sudoku/Sokoto/augmentation_results.json
Sudoku/Sokoto/aug_0/
Sudoku/Sokoto/aug_0/student_best
Sudoku/Sokoto/aug_0/worklog.txt
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_1/
Sudoku/Sokoto/aug_1/student_best
Sudoku/Sokoto/aug_1/worklog.txt
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_2/
Sudoku/Sokoto/aug_2/student_best
Sudoku/Sokoto/aug_2/worklog.txt
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_3/
Sudoku/Sokoto/aug_3/student_best
Sudoku/Sokoto/aug_3/worklog.txt
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_4/
Sudoku/Sokoto/aug_4/student_best
Sudoku/Sokoto/aug_4/worklog.txt
Sudoku/Sokoto/aug_5/
Sudoku/Sokoto/aug_5/student_best
Sudoku/Sokoto/aug_5/worklog.txt
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_6/
Sudoku/Sokoto/aug_6/student_best
Sudoku/Sokoto/aug_6/worklog.txt
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_7/
Sudoku/Sokoto/aug_7/student_best
Sudoku/Sokoto/aug_7/worklog.txt
Sudoku/Sokoto/aug_8/
Sudoku/Sokoto/aug_8/student_best
Sudoku/Sokoto/aug_8/worklog.txt
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_9/
Sudoku/Sokoto/aug_9/student_best
Sudoku/Sokoto/aug_9/worklog.txt
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/worklog-checkpoint.txt
Voxel/
Voxel/Rendered Examples.png
Voxel/metadata
Voxel/test_y.npy

sent 620,487,017 bytes  received 951 bytes  137,886,215.11 bytes/sec
total size is 620,331,646  speedup is 1.00
cp -R /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/predictions /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
cp evaluation/score.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/score.py
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3; python3 score.py
===========================================================================
=============    Your Unseen Data 2024 Submission is scoring     =============
===========================================================================
== Scoring Voxel ==
Raw Score:    83.050
Adj Score:    4.084
Model Params: 1,984,472
Runtime:      9,728.3s
== Scoring ImageNet16-120 ==
Raw Score:    33.667
Adj Score:    -2.371
Model Params: 3,352,540
Runtime:      24,533.7s
== Scoring Sudoku ==
Raw Score:    51.470
Adj Score:    5.147
Model Params: 1,665,718
Runtime:      12,334.4s
== Scoring CIFAR10 ==
Raw Score:    91.670
Adj Score:    1.091
Model Params: 2,833,834
Runtime:      9,335.3s
===========================
Final Score: 7.951
=== JOB_STATISTICS ===
=== current date     : Thu 24 Oct 2024 04:34:06 AM CEST
= Job-ID             : 916710 on tinygpu
= Job-Name           : /home/woody/iwb3/iwb3021h/THESIS_RESULTS/hpcruns/evonas
= Job-Command        : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/evonas_job_full_main_3.sh
= Initial workdir    : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024
= Queue/Partition    : a100
= Slurm account      : iwb3 with QOS=normal
= Requested resources:  for 23:59:00
= Elapsed runtime    : 15:34:37
= Total RAM usage    : 6.1 GiB of requested  GiB (%)   
= Node list          : tg090
= Subm/Elig/Start/End: 2024-10-22T20:43:53 / 2024-10-22T20:43:53 / 2024-10-23T12:59:29 / 2024-10-24T04:34:06
======================
=== Quota infos ======
    Path              Used     SoftQ    HardQ    Gracetime  Filec    FileQ    FiHaQ    FileGrace    
    /home/hpc          103.0G   104.9G   209.7G        N/A     196K     500K   1,000K        N/A    
    /home/vault        984.8G  1048.6G  2097.2G        N/A     180K     200K     400K        N/A    
    /home/woody        889.3G  1000.0G  1500.0G        N/A     263K   5,000K   7,500K        N/A    
======================
=== GPU utilization ==
gpu_name, gpu_bus_id, pid, gpu_utilization [%], mem_utilization [%], max_memory_usage [MiB], time [ms]
NVIDIA A100-SXM4-40GB, 00000000:81:00.0, 1581959, 23 %, 4 %, 10272 MiB, 55942477 ms
