### Starting TaskPrologue of job 915604 on tg093 at Sun 20 Oct 2024 09:58:36 PM CEST
Running on cores 0-31 with governor ondemand
Sun Oct 20 21:58:36 2024       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 560.28.03              Driver Version: 560.28.03      CUDA Version: 12.6     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-40GB          On  |   00000000:01:00.0 Off |                    0 |
| N/A   42C    P0             60W /  400W |       1MiB /  40960MiB |      0%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
### Finished TaskPrologue

Loading python/pytorch-1.13py3.10
  Loading requirement: cuda/11.6.1
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/predictions
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/datasets
rsync -ar --exclude='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/datasets/
cp -R evaluation/main.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/main.py
cp -R anki_lab_submission/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3; python3 main.py --mode T3 --select_augment Proxy
ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| unique_values: array([0.02745098, 0.05098039, 0.05490196, 0.05882353, 0.0627451 ,
                          0.07058824, 0.07450981, 0.07843138, 0.08627451, 0.09019608,
                          0.09411765, 0.09803922, 0.10196079, 0.10980392, 0.11372549,
                          0.11764706, 0.12156863, 0.1254902 , 0.12941177, 0.13333334,
                          0.13725491, 0.14117648, 0.14509805, 0.14901961, 0.15294118,
                          0.15686275, 0.16078432, 0.16470589, 0.16862746, 0.17254902,
                          0.1764706 , 0.18039216, 0.18431373, 0.1882353 , 0.19215687,
                          0.19607843, 0.2       , 0.20392157, 0.21176471, 0.21568628,
                          0.21960784, 0.22352941, 0.22745098, 0.23137255, 0.23529412,
                          0.23921569, 0.24313726, 0.24705882, 0.2509804 , 0.25490198,
                          0.25882354, 0.2627451 , 0.26666668, 0.27058825, 0.27450982,
                          0.2784314 , 0.2901961 , 0.29411766, 0.29803923, 0.3019608 ,
                          0.3137255 , 0.31764707, 0.3254902 , 0.32941177, 0.33333334,
                          0.3372549 , 0.34117648, 0.34509805, 0.34901962, 0.3529412 ,
                          0.35686275, 0.36078432, 0.3647059 , 0.36862746, 0.37254903,
                          0.3764706 , 0.38039216, 0.38431373, 0.3882353 , 0.39215687,
                          0.39607844, 0.40392157, 0.40784314, 0.4117647 , 0.41568628,
                          0.41960785, 0.42352942, 0.43137255, 0.43529412, 0.4392157 ,
                          0.44313726, 0.44705883, 0.4509804 , 0.45490196, 0.45882353,
                          0.4627451 , 0.46666667, 0.47058824, 0.4745098 , 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7372549 ,
                          0.7411765 , 0.74509805, 0.7490196 , 0.7529412 , 0.75686276,
                          0.7607843 , 0.7647059 , 0.76862746, 0.77254903, 0.7764706 ,
                          0.78039217, 0.78431374, 0.7882353 , 0.7921569 , 0.79607844,
                          0.8       , 0.8039216 , 0.80784315, 0.8117647 , 0.8156863 ,
                          0.8235294 , 0.83137256, 0.8352941 , 0.8392157 , 0.84313726,
                          0.85882354, 0.8666667 , 0.87058824, 0.8745098 , 0.8784314 ,
                          0.88235295, 0.8980392 , 0.90588236, 0.9098039 , 0.9137255 ,
                          0.91764706, 0.92156863, 0.9254902 , 0.92941177, 0.93333334,
                          0.9372549 , 0.9411765 , 0.94509804, 0.95686275, 0.9607843 ],
                         dtype=float32)
ic| C: 3
ic| H: 16
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning: The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.
  warnings.warn(
ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fbed6193ee0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbed6193fa0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbed6190f70>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbed6193fd0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fbed6191090>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fbed6191840>,
                 ToTensor(),
                 RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fbed61912a0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['spiked_bulldog',
                  'solid_bat',
                  'xanthic_squid',
                  'outstanding_junglefowl',
                  'icy_salamander',
                  'pastoral_rooster',
                  'hairy_goose',
                  'papaya_worm',
                  'manipulative_marmot',
                  'pompous_kingfisher']
ic| params: [16.0, 24, 2.599999999999998, 21, 8]
ic| params: [32.0, 88, 2.3499999999999988, 17, 8]
ic| params: [56.0, 120, 2.6999999999999975, 18, 8]
ic| params: [48.0, 72, 2.849999999999997, 12, 8]
ic| params: [32.0, 72, 2.549999999999998, 22, 8]
ic| params: [48.0, 72, 2.899999999999997, 10, 8]
ic| params: [24.0, 56, 2.299999999999999, 10, 8]
ic| params: [56.0, 80, 2.299999999999999, 22, 8]
ic| params: [56.0, 80, 2.599999999999998, 20, 8]
ic| params: [64.0, 72, 2.299999999999999, 20, 8]
ic| individuals: ['spiked_bulldog',
                  'solid_bat',
                  'xanthic_squid',
                  'outstanding_junglefowl',
                  'icy_salamander',
                  'pastoral_rooster',
                  'hairy_goose',
                  'papaya_worm',
                  'manipulative_marmot',
                  'pompous_kingfisher']
ic| params_dict: {'hairy_goose': [24.0, 56, 2.299999999999999, 10, 8],
                  'icy_salamander': [32.0, 72, 2.549999999999998, 22, 8],
                  'manipulative_marmot': [56.0, 80, 2.599999999999998, 20, 8],
                  'outstanding_junglefowl': [48.0, 72, 2.849999999999997, 12, 8],
                  'papaya_worm': [56.0, 80, 2.299999999999999, 22, 8],
                  'pastoral_rooster': [48.0, 72, 2.899999999999997, 10, 8],
                  'pompous_kingfisher': [64.0, 72, 2.299999999999999, 20, 8],
                  'solid_bat': [32.0, 88, 2.3499999999999988, 17, 8],
                  'spiked_bulldog': [16.0, 24, 2.599999999999998, 21, 8],
                  'xanthic_squid': [56.0, 120, 2.6999999999999975, 18, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbed6193ee0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbed6193fa0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbed6190f70>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbed6193fd0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbed6191090>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbed6191840>,
                                                ToTensor(),
                                                RandomCrop(size=(16, 16), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbed61912a0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4712, 0.4543, 0.3944]), std=tensor([0.2319, 0.2252, 0.2321]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  self._maybe_warn_non_full_backward_hook(args, result, grad_fn)
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["fisher"] = scaler.fit_transform(subset_df_no_outliers[["fisher"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  subset_df_no_outliers["jacob_cov"] = scaler.fit_transform(subset_df_no_outliers[["jacob_cov"]])
ic| f"best_augmentation: {best_aug}": 'best_augmentation: 4'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=31)]')
ic| self.x.shape: torch.Size([148700, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| self.x.shape: torch.Size([3000, 3, 16, 16])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41406300160
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 107639.61707282066
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning: Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
  warnings.warn(
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  ranking_test_df[pred_column]=sgd_regressor.predict(X_test)
ic| ranking_prediction_df:                            score
                           laughing_angelfish    153.462232
                           translucent_bulldog   151.496428
                           daffy_warthog         146.273622
                           heavenly_bullmastiff  145.266718
                           translucent_collie    138.859946
                           monumental_silkworm   137.416313
                           didactic_whippet      132.711485
                           omniscient_chicken    126.076447
                           fabulous_firefly      113.328694
                           light_seal            111.125686
                           pistachio_llama       105.581722
                           polite_beagle         104.438021
                           outgoing_gazelle      100.007897
                           rose_swine             96.106426
                           hypnotic_wallaby       91.933414
                           bulky_butterfly        75.378767
                           gainful_echidna        74.890410
                           tiny_myna              73.614380
                           large_aardwolf         73.546899
                           miniature_cow          72.973286
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 96, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 96, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
Mode: T3
===========================================================================
=============    Your Unseen Data 2024 Submission is running     =============
===========================================================================
========== Dataset    in16    =============================================
  Metadata:
   - input_shape         : [148700, 3, 16, 16]
   - codename            : in16
   - benchmark           : 46.38
   - num_classes         : 120
   - time_remaining      : 107999.14404463768

=== Processing Data ===
  Allotted compute time remaining: ~29h,59m,59s

=== Performing NAS ===
  Allotted compute time remaining: ~29h,53m,59s
None
Created model:  laughing_angelfish
Created model:  translucent_bulldog
Created model:  daffy_warthog
Created model:  heavenly_bullmastiff
Created model:  translucent_collie
Created model:  monumental_silkworm
Created model:  didactic_whippet
Created model:  omniscient_chicken
Created model:  fabulous_firefly
Created model:  light_seal
Created model:  pistachio_llama
Created model:  polite_beagle
Created model:  outgoing_gazelle
Created model:  rose_swine
Created model:  hypnotic_wallaby
Created model:  bulky_butterfly
Created model:  gainful_echidna
Created model:  tiny_myna
Created model:  large_aardwolf
Created model:  miniature_cow
[2K[2Kbulky_butterfly
[31m[EVAL] Best accuracy:18.19999885559082[0m
[2K[2Kdaffy_warthog
[31m[EVAL] Best accuracy:19.399999618530273[0m
[2K[2Kdidactic_whippet
[31m[EVAL] Best accuracy:18.633333206176758[0m
[2K[2Kfabulous_firefly
[31m[EVAL] Best accuracy:18.266666412353516[0m
[2K[2Kgainful_echidna
[31m[EVAL] Best accuracy:11.09999942779541[0m
[2K[2Kheavenly_bullmastiff
[31m[EVAL] Best accuracy:19.16666603088379[0m
[2K[2Khypnotic_wallaby
[31m[EVAL] Best accuracy:20.33333396911621[0m
[2K[2Klarge_aardwolf
[31m[EVAL] Best accuracy:20.933332443237305[0m
[2K[2Klaughing_angelfish
[31m[EVAL] Best accuracy:19.733333587646484[0m
[2K[2Klight_seal
[31m[EVAL] Best accuracy:19.633333206176758[0m
[2K[2Kminiature_cow
[31m[EVAL] Best accuracy:18.399999618530273[0m
[2K[2Kmonumental_silkworm
[31m[EVAL] Best accuracy:20.433332443237305[0m
[2K[2Komniscient_chicken
[31m[EVAL] Best accuracy:17.0[0m
[2K[2Koutgoing_gazelle
[31m[EVAL] Best accuracy:19.366666793823242[0m
[2K[2Kpistachio_llama
[31m[EVAL] Best accuracy:15.366666793823242[0m
[2K[2Kpolite_beagle
[31m[EVAL] Best accuracy:15.966666221618652[0m
[2K[2Krose_swine
[31m[EVAL] Best accuracy:19.799999237060547[0m
[2K[2Ktiny_myna
[31m[EVAL] Best accuracy:18.066665649414062[0m
[2K[2Ktranslucent_bulldog
[31m[EVAL] Best accuracy:20.866666793823242[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 96, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 96, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 96, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 7750.380981206894
ic| self.metadata["time_remaining"]: 107639.61707282066
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 96, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 96, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 96, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 96, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 96, 'WA': 40.0, 'WM': 2.549999999999998, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Ktranslucent_collie
[31m[EVAL] Best accuracy:18.433332443237305[0m
['laughing_angelfish', 'translucent_bulldog', 'daffy_warthog', 'heavenly_bullmastiff', 'translucent_collie', 'monumental_silkworm', 'didactic_whippet', 'omniscient_chicken', 'fabulous_firefly', 'light_seal', 'pistachio_llama', 'polite_beagle', 'outgoing_gazelle', 'rose_swine', 'hypnotic_wallaby', 'bulky_butterfly', 'gainful_echidna', 'tiny_myna', 'large_aardwolf', 'miniature_cow', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 20.93
Child: [16.0, 112, 2.5500000000000003, 9]
Old_chrom: [20.0, 112, 2.5, 10]
Diff: 0.09932438244955971
[24.0, 104, 2.5000000000000004, 8]
Child: [24.0, 104, 2.35, 9]
Old_chrom: [24.0, 112, 2.3499999999999988, 13]
Diff: 0.09065935055685828
[32.0, 96, 2.4, 9]
Child: [20.0, 120, 2.45, 11]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.02083334476200226
[28.0, 128, 2.4000000000000004, 10]
Child: [20.0, 112, 2.6500000000000004, 9]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.09932438244956104
[20.0, 112, 2.6000000000000005, 8]
Child: [28.0, 104, 2.45, 9]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.09500916893782643
[36.0, 96, 2.4000000000000004, 8]
Child: [24.0, 120, 2.5500000000000003, 11]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.09772181834699398
[24.0, 112, 2.5000000000000004, 12]
Child: [24.0, 104, 2.5, 8]
Old_chrom: [20.0, 112, 2.5, 10]
Diff: 0.07577838827838827
[16.0, 112, 2.5, 8]
Child: [16.0, 112, 2.5, 8]
Old_chrom: [20.0, 112, 2.5, 10]
Diff: 0.05654761904761904
[24.0, 120, 2.5, 9]
Child: [24.0, 120, 2.5, 9]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.09634819197337002
[32.0, 128, 2.55, 8]
Child: [20.0, 112, 2.6, 10]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.02083334611097364
[28.0, 104, 2.5500000000000003, 11]
Child: [28.0, 112, 2.35, 10]
Old_chrom: [24.0, 112, 2.3499999999999988, 13]
Diff: 0.07440477180227953
[20.0, 104, 2.35, 9]
Child: [24.0, 112, 2.3999999999999986, 10]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.041666666666666664
[24.0, 112, 2.3999999999999986, 9]
Child: [24.0, 112, 2.3999999999999986, 9]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.05952380952380952
[24.0, 104, 2.3999999999999986, 9]
Child: [24.0, 104, 2.3999999999999986, 9]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.07875457875457875
[24.0, 96, 2.4499999999999984, 8]
Child: [24.0, 96, 2.4499999999999984, 8]
Old_chrom: [24.0, 104, 2.5000000000000004, 8]
Diff: 0.07986467548985382
[24.0, 96, 2.4499999999999984, 9]
Child: [24.0, 96, 2.4499999999999984, 9]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.09340659340659341
[24.0, 96, 2.3999999999999986, 9]
Child: [16.0, 112, 2.3999999999999986, 8]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.03571428571428571
[24.0, 104, 2.4499999999999984, 9]
Child: [24.0, 104, 2.4499999999999984, 9]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.07417582417582418
[32.0, 96, 2.3999999999999986, 10]
Child: [32.0, 96, 2.3999999999999986, 10]
Old_chrom: [32.0, 96, 2.4, 9]
Diff: 0.01785715275466048
[40.0, 88, 2.3499999999999988, 9]
Child: [24.0, 112, 2.3999999999999986, 11]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.05952380952380952
[24.0, 120, 2.3499999999999988, 12]
Child: [24.0, 120, 2.3499999999999988, 12]
Old_chrom: [24.0, 112, 2.3499999999999988, 13]
Diff: 0.03708791208791209
[16.0, 128, 2.299999999999999, 13]
Child: [24.0, 104, 2.6999999999999975, 10]
Old_chrom: [16.0, 104, 2.6999999999999975, 8]
Diff: 0.07738095238095238
[24.0, 112, 2.7499999999999973, 10]
Child: [32.0, 96, 2.599999999999998, 10]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.08012820512820512
[40.0, 88, 2.6499999999999977, 9]
Child: [24.0, 112, 2.4499999999999984, 11]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.019230769230769232
[16.0, 120, 2.4499999999999984, 10]
Child: [16.0, 120, 2.4499999999999984, 10]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.07986467548985247
[24.0, 112, 2.3999999999999986, 9]
Child: [24.0, 112, 2.3999999999999986, 9]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.05952380952380952
[32.0, 120, 2.4499999999999984, 8]
Child: [32.0, 120, 2.4499999999999984, 8]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.09523809523809523
[24.0, 128, 2.4499999999999984, 9]
Child: [16.0, 120, 2.4499999999999984, 8]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.09523809523809523
[16.0, 112, 2.3999999999999986, 8]
Child: [32.0, 96, 2.4499999999999984, 11]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.09935897435897437
[40.0, 96, 2.4999999999999982, 12]
Created model:  able_ladybug
Created model:  accomplished_walrus
Created model:  artichoke_whippet
Created model:  brown_monkey
Created model:  devout_mantis
Created model:  didactic_millipede
Created model:  encouraging_monkey
Created model:  functional_cuttlefish
Created model:  heavy_perch
Created model:  hilarious_galago
Created model:  honored_mule
Created model:  infrared_cuckoo
Created model:  jade_coua
Created model:  just_taipan
Created model:  lean_doberman
Created model:  prophetic_wallaby
Created model:  shiny_python
Created model:  smiling_wren
Created model:  smoky_cockle
Created model:  warm_frog
[2K[2Kable_ladybug
[31m[EVAL] Best accuracy:20.5[0m
[2K[2Kaccomplished_walrus
[31m[EVAL] Best accuracy:20.33333396911621[0m
[2K[2Kartichoke_whippet
[31m[EVAL] Best accuracy:18.899999618530273[0m
[2K[2Kbrown_monkey
[31m[EVAL] Best accuracy:21.600000381469727[0m
[2K[2Kdevout_mantis
[31m[EVAL] Best accuracy:19.899999618530273[0m
[2K[2Kdidactic_millipede
[31m[EVAL] Best accuracy:19.633333206176758[0m
[2K[2Kencouraging_monkey
[31m[EVAL] Best accuracy:20.399999618530273[0m
[2K[2Kfunctional_cuttlefish
[31m[EVAL] Best accuracy:21.33333396911621[0m
[2K[2Kheavy_perch
[31m[EVAL] Best accuracy:20.233333587646484[0m
[2K[2Khilarious_galago
[31m[EVAL] Best accuracy:19.600000381469727[0m
[2K[2Khonored_mule
[31m[EVAL] Best accuracy:19.066665649414062[0m
[2K[2Kinfrared_cuckoo
[31m[EVAL] Best accuracy:19.69999885559082[0m
[2K[2Kjade_coua
[31m[EVAL] Best accuracy:18.69999885559082[0m
[2K[2Kjust_taipan
[31m[EVAL] Best accuracy:20.066665649414062[0m
[2K[2Klean_doberman
[31m[EVAL] Best accuracy:18.899999618530273[0m
[2K[2Kprophetic_wallaby
[31m[EVAL] Best accuracy:19.766666412353516[0m
[2K[2Kshiny_python
[31m[EVAL] Best accuracy:21.433332443237305[0m
[2K[2Ksmiling_wren
[31m[EVAL] Best accuracy:19.933332443237305[0m
[2K[2Ksmoky_cockle
[31m[EVAL] Best accuracy:21.5[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 14677.84727692604
ic| self.metadata["time_remaining"]: 107639.61707282066
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 12, 'W0': 96, 'WA': 40.0, 'WM': 2.4999999999999982, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 40.0, 'WM': 2.45, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwarm_frog
[31m[EVAL] Best accuracy:17.700000762939453[0m
['parents.csv', 'able_ladybug', 'accomplished_walrus', 'artichoke_whippet', 'brown_monkey', 'devout_mantis', 'didactic_millipede', 'encouraging_monkey', 'functional_cuttlefish', 'heavy_perch', 'hilarious_galago', 'honored_mule', 'infrared_cuckoo', 'jade_coua', 'just_taipan', 'lean_doberman', 'prophetic_wallaby', 'shiny_python', 'smiling_wren', 'smoky_cockle', 'warm_frog', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 21.6
Child: [22.0, 120, 2.4000000000000004, 9]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.06833792351658102
[30.0, 120, 2.45, 10]
Child: [30.0, 120, 2.45, 10]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.049107154285811784
[30.0, 120, 2.4000000000000004, 10]
Child: [30.0, 120, 2.4000000000000004, 10]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.09214744732610483
[30.0, 128, 2.3500000000000005, 10]
Child: [26.0, 128, 2.45, 10]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.04750459018324768
[34.0, 136, 2.4000000000000004, 9]
Child: [34.0, 136, 2.4000000000000004, 9]
Old_chrom: [28.0, 128, 2.4000000000000004, 10]
Diff: 0.0683379120879121
[26.0, 128, 2.45, 9]
Child: [26.0, 128, 2.45, 9]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.06536173304039053
[34.0, 120, 2.5, 10]
Child: [34.0, 120, 2.5, 10]
Old_chrom: [20.0, 112, 2.5, 10]
Diff: 0.0921474358974359
[34.0, 120, 2.55, 9]
Child: [30.0, 128, 2.5, 9]
Old_chrom: [24.0, 128, 2.4499999999999984, 9]
Diff: 0.09188390625908432
[30.0, 128, 2.45, 8]
Child: [24.0, 120, 2.45, 10]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.017857154285811784
[32.0, 120, 2.4000000000000004, 9]
Child: [32.0, 120, 2.4000000000000004, 9]
Old_chrom: [28.0, 128, 2.4000000000000004, 10]
Diff: 0.05792124542124542
[40.0, 128, 2.4000000000000004, 10]
Child: [40.0, 128, 2.4000000000000004, 10]
Old_chrom: [28.0, 128, 2.4000000000000004, 10]
Diff: 0.0625
[48.0, 136, 2.4000000000000004, 11]
Child: [20.0, 120, 2.45, 9]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.05654763047628797
[20.0, 112, 2.5, 8]
Child: [20.0, 112, 2.5, 8]
Old_chrom: [20.0, 112, 2.5, 10]
Diff: 0.03571428571428571
[28.0, 104, 2.5, 9]
Child: [28.0, 104, 2.5, 9]
Old_chrom: [20.0, 112, 2.5, 10]
Diff: 0.07875457875457875
[20.0, 96, 2.55, 10]
Child: [20.0, 96, 2.55, 10]
Old_chrom: [20.0, 112, 2.5, 10]
Diff: 0.0990954447206217
[20.0, 96, 2.5, 10]
Child: [24.0, 120, 2.5, 8]
Old_chrom: [24.0, 128, 2.4499999999999984, 9]
Diff: 0.09772181834699639
[24.0, 120, 2.5, 8]
Child: [18.0, 112, 2.45, 9]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.08890771578289383
[18.0, 104, 2.4000000000000004, 8]
Child: [28.0, 128, 2.5, 9]
Old_chrom: [24.0, 128, 2.4499999999999984, 9]
Diff: 0.08146723959241765
[20.0, 136, 2.55, 8]
Child: [22.0, 120, 2.5, 10]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.08890771578289383
[30.0, 128, 2.55, 9]
Child: [26.0, 120, 2.5500000000000003, 9]
Old_chrom: [32.0, 128, 2.55, 8]
Diff: 0.06833791780224654
[18.0, 120, 2.6, 9]
Child: [18.0, 120, 2.6, 9]
Old_chrom: [24.0, 112, 2.599999999999998, 10]
Diff: 0.0683379248655524
[18.0, 112, 2.65, 9]
Child: [18.0, 112, 2.65, 9]
Old_chrom: [20.0, 112, 2.6000000000000005, 8]
Diff: 0.0889077157828925
[np.int64(16), 112, 2.6999999999999997, 9]
Child: [28.0, 128, 2.3999999999999986, 8]
Old_chrom: [28.0, 128, 2.4000000000000004, 10]
Diff: 0.03571429714295464
[36.0, 128, 2.4499999999999984, np.int64(8)]
Child: [36.0, 128, 2.4499999999999984, np.int64(8)]
Old_chrom: [24.0, 128, 2.4499999999999984, 9]
Diff: 0.08035714285714285
[44.0, 128, 2.4999999999999982, np.int64(9)]
Child: [24.0, 128, 2.4000000000000004, 10]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.08012821655687405
[16.0, 128, 2.3500000000000005, 9]
Child: [32.0, 128, 2.4000000000000004, 10]
Old_chrom: [28.0, 128, 2.4000000000000004, 10]
Diff: 0.020833333333333332
[32.0, 120, 2.3500000000000005, 11]
Child: [32.0, 120, 2.3500000000000005, 11]
Old_chrom: [24.0, 112, 2.3499999999999988, 13]
Diff: 0.09661173304039053
[24.0, 112, 2.3500000000000005, 10]
Child: [28.0, 128, 2.5, 10]
Old_chrom: [28.0, 128, 2.4000000000000004, 10]
Diff: 0.08574929257125442
[36.0, 120, 2.55, 9]
Child: [24.0, 112, 2.3999999999999986, 9]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.05952380952380952
[32.0, 112, 2.3499999999999988, 10]
Child: [32.0, 112, 2.3499999999999988, 10]
Old_chrom: [24.0, 112, 2.3499999999999988, 13]
Diff: 0.09523809523809523
[40.0, 120, 2.299999999999999, 11]
Child: [32.0, 128, 2.3999999999999986, 8]
Old_chrom: [28.0, 128, 2.4000000000000004, 10]
Diff: 0.05654763047628797
[40.0, 120, 2.3999999999999986, 9]
Child: [40.0, 120, 2.3999999999999986, 9]
Old_chrom: [28.0, 128, 2.4000000000000004, 10]
Diff: 0.09958792351658102
[32.0, 112, 2.3999999999999986, 10]
Child: [20.0, 112, 2.3999999999999986, 8]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.05654761904761904
[28.0, 112, 2.3999999999999986, np.int64(8)]
Child: [28.0, 112, 2.3999999999999986, np.int64(8)]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.09821428571428571
[36.0, 112, 2.3999999999999986, np.int64(9)]
Child: [32.0, 128, 2.4499999999999984, 8]
Old_chrom: [24.0, 128, 2.4499999999999984, 9]
Diff: 0.05952380952380952
[24.0, 136, 2.4499999999999984, np.int64(8)]
Child: [24.0, 136, 2.4499999999999984, np.int64(8)]
Old_chrom: [24.0, 120, 2.4499999999999984, 11]
Diff: 0.09203296703296704
[32.0, 136, 2.4499999999999984, np.int64(9)]
Child: [20.0, 112, 2.4499999999999984, 9]
Old_chrom: [16.0, 112, 2.3999999999999986, 10]
Diff: 0.09932438244955943
[20.0, 112, 2.4499999999999984, 10]
Child: [32.0, 128, 2.5, 10]
Old_chrom: [32.0, 128, 2.55, 8]
Diff: 0.09634819197336895
[40.0, 120, 2.45, 9]
Created model:  almond_cockle
Created model:  amazing_jackrabbit
Created model:  analytic_beetle
Created model:  chirpy_jaguar
Created model:  curvy_dalmatian
Created model:  intrepid_bettong
Created model:  invisible_nuthatch
Created model:  merciful_cow
Created model:  muscular_locust
Created model:  mutant_bison
Created model:  rigorous_booby
Created model:  rousing_eagle
Created model:  solid_koel
Created model:  steadfast_swift
Created model:  steel_jerboa
Created model:  swinging_loon
Created model:  tacky_kagu
Created model:  tireless_tuna
Created model:  ultraviolet_perch
Created model:  wondrous_condor
[2K[2Kalmond_cockle
[31m[EVAL] Best accuracy:21.5[0m
[2K[2Kamazing_jackrabbit
[31m[EVAL] Best accuracy:21.399999618530273[0m
[2K[2Kanalytic_beetle
[31m[EVAL] Best accuracy:21.16666603088379[0m
[2K[2Kchirpy_jaguar
[31m[EVAL] Best accuracy:19.633333206176758[0m
[2K[2Kcurvy_dalmatian
[31m[EVAL] Best accuracy:19.766666412353516[0m
[2K[2Kintrepid_bettong
[31m[EVAL] Best accuracy:22.066665649414062[0m
[2K[2Kinvisible_nuthatch
[31m[EVAL] Best accuracy:19.83333396911621[0m
[2K[2Kmerciful_cow
[31m[EVAL] Best accuracy:21.5[0m
[2K[2Kmuscular_locust
[31m[EVAL] Best accuracy:21.299999237060547[0m
[2K[2Kmutant_bison
[31m[EVAL] Best accuracy:20.566665649414062[0m
[2K[2Krigorous_booby
[31m[EVAL] Best accuracy:20.899999618530273[0m
[2K[2Krousing_eagle
[31m[EVAL] Best accuracy:20.600000381469727[0m
[2K[2Ksolid_koel
[31m[EVAL] Best accuracy:19.5[0m
[2K[2Ksteadfast_swift
[31m[EVAL] Best accuracy:21.733333587646484[0m
[2K[2Ksteel_jerboa
[31m[EVAL] Best accuracy:20.733333587646484[0m
[2K[2Kswinging_loon
[31m[EVAL] Best accuracy:19.33333396911621[0m
[2K[2Ktacky_kagu
[31m[EVAL] Best accuracy:20.433332443237305[0m
[2K[2Ktireless_tuna
[31m[EVAL] Best accuracy:21.133333206176758[0m
[2K[2Kultraviolet_perch
[31m[EVAL] Best accuracy:18.766666412353516[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 40.0, 'WM': 2.45, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 40.0, 'WM': 2.45, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 120, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 16, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 120, 'WA': 40.0, 'WM': 2.45, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 21568.731583356857
ic| self.metadata["time_remaining"]: 107639.61707282066
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 46.38,
               'codename': 'in16',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_2/tests_in16_20_10_2024_22_06/Generation_3/wondrous_condor',
               'input_shape': [148700, 3, 16, 16],
               'mode': 'NAS',
               'num_classes': 120,
               'test_type': 'T3_Proxy/seed_2',
               'time_remaining': 86070.37737560272,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| unique_values: array([0., 1.], dtype=float32)
ic| C: 20
ic| H: 20
ic| PH: 2
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fbe01431150>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbe01431750>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbe01432bf0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbed40c7910>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fbe0019add0>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fbe01432590>,
                 ToTensor(),
                 RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fbe01430d30>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['olive_mouse',
                  'giga_angelfish',
                  'pretty_mussel',
                  'zircon_lemur',
                  'brave_agama',
                  'skinny_toad',
                  'mini_hippo',
                  'small_serval',
                  'keen_fulmar',
                  'unnatural_urchin']
ic| params: [64.0, 72, 2.6499999999999977, 9, 8]
ic| params: [16.0, 40, 2.3999999999999986, 16, 8]
ic| params: [16.0, 104, 2.6499999999999977, 9, 8]
ic| params: [56.0, 104, 2.0999999999999996, 16, 8]
ic| params: [24.0, 64, 2.249999999999999, 15, 8]
ic| params: [48.0, 96, 2.849999999999997, 21, 8]
ic| params: [64.0, 112, 2.7499999999999973, 10, 8]
ic| params: [24.0, 120, 2.599999999999998, 10, 8]
ic| params: [56.0, 88, 2.249999999999999, 18, 8]
ic| params: [40.0, 72, 2.3499999999999988, 14, 8]
ic| individuals: ['olive_mouse',
                  'giga_angelfish',
                  'pretty_mussel',
                  'zircon_lemur',
                  'brave_agama',
                  'skinny_toad',
                  'mini_hippo',
                  'small_serval',
                  'keen_fulmar',
                  'unnatural_urchin']
ic| params_dict: {'brave_agama': [24.0, 64, 2.249999999999999, 15, 8],
                  'giga_angelfish': [16.0, 40, 2.3999999999999986, 16, 8],
                  'keen_fulmar': [56.0, 88, 2.249999999999999, 18, 8],
                  'mini_hippo': [64.0, 112, 2.7499999999999973, 10, 8],
                  'olive_mouse': [64.0, 72, 2.6499999999999977, 9, 8],
                  'pretty_mussel': [16.0, 104, 2.6499999999999977, 9, 8],
                  'skinny_toad': [48.0, 96, 2.849999999999997, 21, 8],
                  'small_serval': [24.0, 120, 2.599999999999998, 10, 8],
                  'unnatural_urchin': [40.0, 72, 2.3499999999999988, 14, 8],
                  'zircon_lemur': [56.0, 104, 2.0999999999999996, 16, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbe01431150>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbe01431750>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbe01432bf0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbed40c7910>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbe0019add0>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbe01432590>,
                                                ToTensor(),
                                                RandomCrop(size=(20, 20), padding=[2, 2, 2, 2], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbe01430d30>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.0724, 0.0832, 0.0932, 0.1020, 0.1097, 0.1162, 0.1213, 0.1250, 0.1275,
                                                       0.1288, 0.1289, 0.1274, 0.1250, 0.1211, 0.1157, 0.1091, 0.1012, 0.0924,
                                                       0.0824, 0.0716]), std=tensor([0.2592, 0.2762, 0.2907, 0.3026, 0.3125, 0.3204, 0.3264, 0.3307, 0.3336,
                                                       0.3350, 0.3351, 0.3334, 0.3308, 0.3263, 0.3198, 0.3117, 0.3016, 0.2896,
                                                       0.2750, 0.2578]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 14'
ic| f"selected transform {train_transform}": ('selected transform [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, '
                                              '3.3), value=[0.0], inplace=False), RandomCrop(size=(20, 20), padding=[2, 2, '
                                              '2, 2], pad_if_needed=False, fill=0, padding_mode=constant), '
                                              'RandomHorizontalFlip(p=0.5)]')
ic| self.x.shape: torch.Size([50000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| self.x.shape: torch.Size([10000, 20, 20, 20])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41670541312
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 83331.85172510147
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| ranking_prediction_df:                           score
                           taupe_goat           126.059295
                           overjoyed_sheep      118.597828
                           splendid_aardwark    111.517285
                           grinning_cassowary   103.272717
                           courageous_mouse      98.514844
                           grinning_bettong      98.100540
                           prompt_mussel         97.064456
                           cryptic_mongrel       96.508341
                           sly_kagu              93.855375
                           screeching_aardwark   93.560567
                           pompous_leech         90.380470
                           sepia_hippo           87.536341
                           elite_gerbil          84.692933
                           devious_ammonite      83.351194
                           maroon_hyena          82.252813
                           magenta_jerboa        82.070319
                           eggplant_taipan       81.683766
                           deft_lion             81.133319
                           grinning_lemming      80.674209
                           gifted_lynx           80.184709
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwondrous_condor
[31m[EVAL] Best accuracy:20.066665649414062[0m
['parents.csv', 'almond_cockle', 'amazing_jackrabbit', 'analytic_beetle', 'chirpy_jaguar', 'curvy_dalmatian', 'intrepid_bettong', 'invisible_nuthatch', 'merciful_cow', 'muscular_locust', 'mutant_bison', 'rigorous_booby', 'rousing_eagle', 'solid_koel', 'steadfast_swift', 'steel_jerboa', 'swinging_loon', 'tacky_kagu', 'tireless_tuna', 'ultraviolet_perch', 'wondrous_condor', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 22.07
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_2/tests_in16_20_10_2024_22_06/Generation_3/intrepid_bettong/config.yaml

=== Training ===
  Allotted compute time remaining: ~23h,54m,30s
Early stopping at epoch 44
[31m[EVAL] Best accuracy:36.5[0m

=== Predicting ===
  Allotted compute time remaining: ~23h,12m,16s

========== Dataset   Volga    =============================================
  Metadata:
   - input_shape         : [50000, 20, 20, 20]
   - codename            : Volga
   - benchmark           : 71.35
   - num_classes         : 7
   - time_remaining      : 83533.03231930733

=== Processing Data ===
  Allotted compute time remaining: ~23h,12m,13s

=== Performing NAS ===
  Allotted compute time remaining: ~23h,8m,51s
spawn
Created model:  taupe_goat
Created model:  overjoyed_sheep
Created model:  splendid_aardwark
Created model:  grinning_cassowary
Created model:  courageous_mouse
Created model:  grinning_bettong
Created model:  prompt_mussel
Created model:  cryptic_mongrel
Created model:  sly_kagu
Created model:  screeching_aardwark
Created model:  pompous_leech
Created model:  sepia_hippo
Created model:  elite_gerbil
Created model:  devious_ammonite
Created model:  maroon_hyena
Created model:  magenta_jerboa
Created model:  eggplant_taipan
Created model:  deft_lion
Created model:  grinning_lemming
Created model:  gifted_lynx
[2K[2Kcourageous_mouse
[31m[EVAL] Best accuracy:62.78999710083008[0m
[2K[2Kcryptic_mongrel
[31m[EVAL] Best accuracy:57.8599967956543[0m
[2K[2Kdeft_lion
[31m[EVAL] Best accuracy:60.529998779296875[0m
[2K[2Kdevious_ammonite
[31m[EVAL] Best accuracy:59.68000030517578[0m
[2K[2Keggplant_taipan
[31m[EVAL] Best accuracy:57.94999694824219[0m
[2K[2Kelite_gerbil
[31m[EVAL] Best accuracy:65.80999755859375[0m
[2K[2Kgifted_lynx
[31m[EVAL] Best accuracy:62.73999786376953[0m
[2K[2Kgrinning_bettong
[31m[EVAL] Best accuracy:57.63999938964844[0m
[2K[2Kgrinning_cassowary
[31m[EVAL] Best accuracy:60.05999755859375[0m
[2K[2Kgrinning_lemming
[31m[EVAL] Best accuracy:64.63999938964844[0m
[2K[2Kmagenta_jerboa
[31m[EVAL] Best accuracy:57.12999725341797[0m
[2K[2Kmaroon_hyena
[31m[EVAL] Best accuracy:67.00999450683594[0m
[2K[2Koverjoyed_sheep
[31m[EVAL] Best accuracy:66.01000213623047[0m
[2K[2Kpompous_leech
[31m[EVAL] Best accuracy:60.119998931884766[0m
[2K[2Kprompt_mussel
[31m[EVAL] Best accuracy:55.63999938964844[0m
[2K[2Kscreeching_aardwark
[31m[EVAL] Best accuracy:61.459999084472656[0m
[2K[2Ksepia_hippo
[31m[EVAL] Best accuracy:62.7599983215332[0m
[2K[2Ksly_kagu
[31m[EVAL] Best accuracy:58.16999816894531[0m
[2K[2Ksplendid_aardwark
[31m[EVAL] Best accuracy:66.77999877929688[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2928.44588804245
ic| self.metadata["time_remaining"]: 83331.85172510147
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 11, 'W0': 112, 'WA': 48.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 40.0, 'WM': 2.9999999999999964, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Ktaupe_goat
[31m[EVAL] Best accuracy:67.06999969482422[0m
['taupe_goat', 'overjoyed_sheep', 'splendid_aardwark', 'grinning_cassowary', 'courageous_mouse', 'grinning_bettong', 'prompt_mussel', 'cryptic_mongrel', 'sly_kagu', 'screeching_aardwark', 'pompous_leech', 'sepia_hippo', 'elite_gerbil', 'devious_ammonite', 'maroon_hyena', 'magenta_jerboa', 'eggplant_taipan', 'deft_lion', 'grinning_lemming', 'gifted_lynx', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 67.07
Child: [48.0, 112, 2.8000000000000003, 10]
Old_chrom: [40.0, 104, 2.799999999999997, 10]
Diff: 0.0608974510161438
[48.0, 104, 2.85, 9]
Child: [52.0, 112, 2.85, 9]
Old_chrom: [64.0, 112, 2.849999999999997, 8]
Diff: 0.08035715797585075
[44.0, 104, 2.8000000000000003, 9]
Child: [44.0, 104, 2.8000000000000003, 9]
Old_chrom: [40.0, 104, 2.799999999999997, 10]
Diff: 0.03869049130918409
[36.0, 104, 2.85, 8]
Child: [36.0, 104, 2.85, 8]
Old_chrom: [48.0, 104, 2.85, 9]
Diff: 0.08035714285714285
[28.0, 96, 2.8000000000000003, np.int64(8)]
Child: [44.0, 104, 2.8000000000000003, 10]
Old_chrom: [40.0, 104, 2.799999999999997, 10]
Diff: 0.020833348452041232
[36.0, 96, 2.8000000000000003, 9]
Child: [36.0, 96, 2.8000000000000003, 9]
Old_chrom: [40.0, 104, 2.799999999999997, 10]
Diff: 0.05792126053995332
[36.0, 104, 2.85, 9]
Child: [36.0, 104, 2.85, 9]
Old_chrom: [40.0, 104, 2.799999999999997, 10]
Diff: 0.09932438244956132
[44.0, 112, 2.8000000000000003, 10]
Child: [28.0, 104, 2.6500000000000004, 12]
Old_chrom: [40.0, 112, 2.6500000000000004, 11]
Diff: 0.0995879120879121
[20.0, 96, 2.6000000000000005, 11]
Child: [20.0, 104, 2.6, 13]
Old_chrom: [24.0, 104, 2.6, 13]
Diff: 0.020833333333333332
[np.int64(16), 96, 2.65, 13]
Child: [36.0, 104, 2.8000000000000003, 11]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.09932438244956132
[44.0, 112, 2.8000000000000003, 10]
Child: [28.0, 104, 2.75, 12]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.02083334733053699
[20.0, 112, 2.75, 11]
Child: [20.0, 112, 2.75, 11]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.09958792608511574
[28.0, 120, 2.7, 10]
Child: [32.0, 104, 2.75, 11]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.017857156854346513
[40.0, 96, 2.7, 12]
Child: [40.0, 96, 2.7, 12]
Old_chrom: [24.0, 96, 2.6999999999999975, 12]
Diff: 0.08333334733053699
[32.0, 104, 2.7, 12]
Child: [32.0, 104, 2.7, 12]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.060633906259081626
[24.0, 112, 2.75, 11]
Child: [24.0, 112, 2.75, 11]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.07875459275178241
[16.0, 120, 2.75, 12]
Child: [40.0, 112, 2.849999999999997, 10]
Old_chrom: [40.0, 104, 2.799999999999997, 10]
Diff: 0.07986467548985247
[32.0, 104, 2.899999999999997, 10]
Child: [24.0, 96, 2.4499999999999984, 13]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.060897435897435896
[16.0, 88, 2.3999999999999986, 12]
Child: [32.0, 104, 2.799999999999997, 12]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.06063390625908324
[32.0, 104, 2.799999999999997, 11]
Child: [32.0, 104, 2.799999999999997, 11]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.07849104911622609
[32.0, 112, 2.849999999999997, 10]
Child: [32.0, 112, 2.849999999999997, 10]
Old_chrom: [32.0, 104, 2.899999999999997, 10]
Diff: 0.07986467548985247
[32.0, 112, 2.799999999999997, 11]
Child: [32.0, 112, 2.799999999999997, 11]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.09772181834699534
[24.0, 104, 2.799999999999997, 11]
Child: [24.0, 104, 2.7499999999999973, 12]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.041666666666666664
[16.0, 104, 2.7499999999999973, 13]
Child: [16.0, 104, 2.7499999999999973, 13]
Old_chrom: [16.0, 120, 2.75, 12]
Diff: 0.05631869531588498
[16.0, 112, 2.6999999999999975, 13]
Child: [16.0, 112, 2.6999999999999975, 13]
Old_chrom: [24.0, 96, 2.6999999999999975, 12]
Diff: 0.09798534798534797
[np.int64(16), 112, 2.6999999999999975, 14]
Child: [24.0, 96, 2.799999999999997, 10]
Old_chrom: [28.0, 96, 2.8000000000000003, np.int64(8)]
Diff: 0.056547634166326945
[32.0, 104, 2.849999999999997, 9]
Child: [32.0, 104, 2.849999999999997, 9]
Old_chrom: [48.0, 104, 2.85, 9]
Diff: 0.08333334845204123
[40.0, 104, 2.899999999999997, 10]
Child: [40.0, 104, 2.899999999999997, 10]
Old_chrom: [40.0, 104, 2.799999999999997, 10]
Diff: 0.08574929257125442
[32.0, 112, 2.9499999999999966, 10]
Child: [32.0, 112, 2.9499999999999966, 10]
Old_chrom: [32.0, 104, 2.899999999999997, 10]
Diff: 0.07986467548985247
[32.0, 104, 2.9499999999999966, 10]
Child: [32.0, 104, 2.9499999999999966, 10]
Old_chrom: [32.0, 104, 2.899999999999997, 10]
Diff: 0.06063390625908324
[32.0, 112, 2.9499999999999966, 9]
Child: [32.0, 112, 2.9499999999999966, 9]
Old_chrom: [32.0, 104, 2.899999999999997, 10]
Diff: 0.09772181834699534
[40.0, 104, 2.9999999999999964, 8]
Created model:  almond_albatross
Created model:  ancient_rat
Created model:  antique_cougar
Created model:  authentic_corgi
Created model:  blond_booby
Created model:  defiant_leech
Created model:  delightful_skink
Created model:  exotic_hyena
Created model:  fanatic_porpoise
Created model:  ingenious_stoat
Created model:  invisible_pegasus
Created model:  large_goat
Created model:  poised_pheasant
Created model:  puzzling_woodlouse
Created model:  refreshing_newt
Created model:  rose_mastodon
Created model:  sly_walrus
Created model:  spectral_ara
Created model:  speedy_llama
Created model:  strange_falcon
[2K[2Kalmond_albatross
[31m[EVAL] Best accuracy:65.90999603271484[0m
[2K[2Kancient_rat
[31m[EVAL] Best accuracy:65.25[0m
[2K[2Kantique_cougar
[31m[EVAL] Best accuracy:65.7699966430664[0m
[2K[2Kauthentic_corgi
[31m[EVAL] Best accuracy:66.43000030517578[0m
[2K[2Kblond_booby
[31m[EVAL] Best accuracy:66.70999908447266[0m
[2K[2Kdefiant_leech
[31m[EVAL] Best accuracy:63.5[0m
[2K[2Kdelightful_skink
[31m[EVAL] Best accuracy:67.00999450683594[0m
[2K[2Kexotic_hyena
[31m[EVAL] Best accuracy:61.3599967956543[0m
[2K[2Kfanatic_porpoise
[31m[EVAL] Best accuracy:57.959999084472656[0m
[2K[2Kingenious_stoat
[31m[EVAL] Best accuracy:64.75[0m
[2K[2Kinvisible_pegasus
[31m[EVAL] Best accuracy:67.9000015258789[0m
[2K[2Klarge_goat
[31m[EVAL] Best accuracy:64.70999908447266[0m
[2K[2Kpoised_pheasant
[31m[EVAL] Best accuracy:66.50999450683594[0m
[2K[2Kpuzzling_woodlouse
[31m[EVAL] Best accuracy:66.75[0m
[2K[2Krefreshing_newt
[31m[EVAL] Best accuracy:63.31999969482422[0m
[2K[2Krose_mastodon
[31m[EVAL] Best accuracy:63.79999923706055[0m
[2K[2Ksly_walrus
[31m[EVAL] Best accuracy:67.02999877929688[0m
[2K[2Kspectral_ara
[31m[EVAL] Best accuracy:61.56999969482422[0m
[2K[2Kspeedy_llama
[31m[EVAL] Best accuracy:61.06999969482422[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 40.0, 'WM': 2.9999999999999964, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 40.0, 'WM': 2.9999999999999964, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 40.0, 'WM': 2.9999999999999964, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 5558.943235397339
ic| self.metadata["time_remaining"]: 83331.85172510147
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 40.0, 'WM': 2.9999999999999964, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 40.0, 'WM': 2.9999999999999964, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 40.0, 'WM': 2.9999999999999964, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 40.0, 'WM': 2.9999999999999964, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 104, 'WA': 40.0, 'WM': 2.9999999999999964, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 16.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kstrange_falcon
[31m[EVAL] Best accuracy:66.27999877929688[0m
['parents.csv', 'almond_albatross', 'ancient_rat', 'antique_cougar', 'authentic_corgi', 'blond_booby', 'defiant_leech', 'delightful_skink', 'exotic_hyena', 'fanatic_porpoise', 'ingenious_stoat', 'invisible_pegasus', 'large_goat', 'poised_pheasant', 'puzzling_woodlouse', 'refreshing_newt', 'rose_mastodon', 'sly_walrus', 'spectral_ara', 'speedy_llama', 'strange_falcon', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 67.9
Child: [16.0, 96, 2.6500000000000004, 10]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.05357143428576303
[24.0, 88, 2.7, 11]
Child: [24.0, 88, 2.7, 11]
Old_chrom: [24.0, 96, 2.6999999999999975, 12]
Diff: 0.03708792608511574
[16.0, 96, 2.6500000000000004, 10]
Child: [16.0, 96, 2.6500000000000004, 10]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.05357143428576303
[16.0, 104, 2.6000000000000005, 11]
Child: [16.0, 104, 2.6000000000000005, 11]
Old_chrom: [24.0, 104, 2.6, 13]
Diff: 0.07738095809528683
[24.0, 112, 2.6000000000000005, 12]
Child: [24.0, 112, 2.6000000000000005, 12]
Old_chrom: [24.0, 104, 2.6, 13]
Diff: 0.03708791780224655
[24.0, 112, 2.6500000000000004, 13]
Child: [24.0, 112, 2.6500000000000004, 13]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.08012821084253959
[32.0, 120, 2.6000000000000005, 12]
Child: [16.0, 104, 2.75, 11]
Old_chrom: [16.0, 120, 2.75, 12]
Diff: 0.05631868131868132
[24.0, 96, 2.7, 12]
Child: [24.0, 96, 2.7, 12]
Old_chrom: [24.0, 96, 2.6999999999999975, 12]
Diff: 1.3997203657444208e-08
[24.0, 104, 2.7, 11]
Child: [24.0, 104, 2.7, 11]
Old_chrom: [24.0, 96, 2.6999999999999975, 12]
Diff: 0.03708792608511574
[16.0, 112, 2.6500000000000004, 10]
Child: [16.0, 112, 2.6500000000000004, 10]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.09203297274730149
[16.0, 104, 2.6000000000000005, 11]
Child: [20.0, 112, 2.85, 10]
Old_chrom: [16.0, 104, 2.849999999999997, 8]
Diff: 0.07577840339709618
[20.0, 112, 2.9, 9]
Child: [20.0, 112, 2.9, 9]
Old_chrom: [32.0, 104, 2.899999999999997, 10]
Diff: 0.09958792720661999
[28.0, 104, 2.9499999999999997, 10]
Child: [20.0, 104, 2.75, 11]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.08035715685434652
[20.0, 96, 2.75, 10]
Child: [16.0, 96, 2.5500000000000003, 13]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.08574929257125442
[24.0, 104, 2.5000000000000004, 12]
Child: [20.0, 104, 2.6500000000000004, 12]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.05792125113557988
[20.0, 104, 2.6500000000000004, 12]
Child: [20.0, 104, 2.6500000000000004, 12]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.05792125113557988
[28.0, 112, 2.6500000000000004, 12]
Child: [28.0, 112, 2.6500000000000004, 12]
Old_chrom: [40.0, 112, 2.6500000000000004, 11]
Diff: 0.08035714285714285
[36.0, 104, 2.6500000000000004, 13]
Child: [20.0, 96, 2.5, 13]
Old_chrom: [24.0, 104, 2.5000000000000004, 12]
Diff: 0.05792125113557988
[np.int64(16), 104, 2.45, 14]
Child: [np.int64(16), 104, 2.45, 14]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.017857154285811784
[np.int64(24), 112, 2.5, 13]
Child: [np.int64(24), 112, 2.5, 13]
Old_chrom: [24.0, 104, 2.5000000000000004, 12]
Diff: 0.03708791780224655
[np.int64(24), 112, 2.5, 14]
Child: [np.int64(24), 112, 2.5, 14]
Old_chrom: [24.0, 104, 2.5000000000000004, 12]
Diff: 0.05494506065938941
[np.int64(24), 120, 2.5, 14]
Child: [np.int64(24), 120, 2.5, 14]
Old_chrom: [24.0, 104, 2.5000000000000004, 12]
Diff: 0.07417582989015864
[np.int64(16), 120, 2.45, 13]
Child: [np.int64(16), 120, 2.45, 13]
Old_chrom: [16.0, 104, 2.4499999999999984, 13]
Diff: 0.03846154989020739
[np.int64(16), 128, 2.5, 13]
Child: [20.0, 104, 2.75, 13]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.08035715685434652
[np.int64(16), 96, 2.7, 14]
Child: [20.0, 104, 2.6500000000000004, 13]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.040064108278437024
[20.0, 104, 2.6500000000000004, 12]
Child: [20.0, 104, 2.6500000000000004, 12]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.05792125113557988
[np.int64(16), 104, 2.7, 13]
Child: [np.int64(16), 104, 2.7, 13]
Old_chrom: [24.0, 96, 2.6999999999999975, 12]
Diff: 0.07875459275178241
[np.int64(16), 96, 2.75, 12]
Child: [np.int64(16), 96, 2.75, 12]
Old_chrom: [16.0, 120, 2.75, 12]
Diff: 0.057692307692307696
[np.int64(16), 96, 2.75, 13]
Child: [np.int64(16), 96, 2.75, 13]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.0857492925712546
[np.int64(24), 104, 2.75, 13]
Child: [24.0, 112, 2.75, 13]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.07875459275178241
[32.0, 112, 2.8, 14]
Child: [16.0, 88, 2.3999999999999986, 8]
Old_chrom: [16.0, 88, 2.3999999999999986, 12]
Diff: 0.07142857142857142
[24.0, 88, 2.3999999999999986, 8]
Child: [16.0, 96, 2.849999999999997, 8]
Old_chrom: [16.0, 104, 2.849999999999997, 8]
Diff: 0.019230769230769232
[np.int64(16), 96, 2.799999999999997, 9]
Child: [np.int64(16), 96, 2.799999999999997, 9]
Old_chrom: [16.0, 104, 2.849999999999997, 8]
Diff: 0.09772181834699534
[np.int64(16), 88, 2.799999999999997, 9]
Child: [16.0, 104, 2.849999999999997, 12]
Old_chrom: [16.0, 104, 2.849999999999997, 8]
Diff: 0.07142857142857142
[16.0, 112, 2.899999999999997, 11]
Child: [24.0, 104, 2.849999999999997, 13]
Old_chrom: [24.0, 112, 2.849999999999997, 12]
Diff: 0.03708791208791209
[32.0, 104, 2.849999999999997, 13]
Child: [32.0, 104, 2.849999999999997, 13]
Old_chrom: [24.0, 112, 2.849999999999997, 12]
Diff: 0.07875457875457875
[40.0, 104, 2.849999999999997, 12]
Child: [40.0, 104, 2.849999999999997, 12]
Old_chrom: [40.0, 104, 2.799999999999997, 10]
Diff: 0.09634819197336895
[48.0, 104, 2.899999999999997, 12]
Child: [16.0, 96, 2.65, 12]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.017857142857142856
[24.0, 96, 2.6999999999999997, 11]
Child: [24.0, 96, 2.6999999999999997, 11]
Old_chrom: [24.0, 96, 2.6999999999999975, 12]
Diff: 0.017857155634783163
[32.0, 88, 2.65, 10]
Child: [24.0, 88, 2.3999999999999986, 12]
Old_chrom: [16.0, 88, 2.3999999999999986, 12]
Diff: 0.041666666666666664
[32.0, 88, 2.4499999999999984, 11]
Child: [32.0, 88, 2.4499999999999984, 11]
Old_chrom: [32.0, 104, 2.4499999999999984, 12]
Diff: 0.05631868131868132
[32.0, 80, 2.4999999999999982, 11]
Child: [16.0, 88, 2.6, 13]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.07986467548985247
[16.0, 88, 2.65, 12]
Child: [16.0, 88, 2.65, 12]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.03708791208791209
[24.0, 88, 2.6999999999999997, 12]
Child: [24.0, 88, 2.6999999999999997, 12]
Old_chrom: [24.0, 96, 2.6999999999999975, 12]
Diff: 0.01923078200840954
[32.0, 88, 2.6999999999999997, 12]
Child: [32.0, 88, 2.6999999999999997, 12]
Old_chrom: [32.0, 104, 2.7499999999999973, 12]
Diff: 0.09909544472062036
[24.0, 88, 2.65, 12]
Child: [16.0, 112, 2.849999999999997, 13]
Old_chrom: [24.0, 112, 2.849999999999997, 12]
Diff: 0.05952380952380952
[np.int64(16), 104, 2.799999999999997, 12]
Child: [np.int64(16), 104, 2.799999999999997, 12]
Old_chrom: [16.0, 120, 2.75, 12]
Diff: 0.0990954447206201
[np.int64(16), 104, 2.799999999999997, 13]
Child: [24.0, 96, 2.65, 13]
Old_chrom: [24.0, 96, 2.6999999999999975, 12]
Diff: 0.07849104911622476
[16.0, 104, 2.6999999999999997, 13]
Child: [16.0, 104, 2.6999999999999997, 13]
Old_chrom: [24.0, 96, 2.6999999999999975, 12]
Diff: 0.07875459153221906
[16.0, 112, 2.65, 12]
Child: [16.0, 112, 2.65, 12]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.05631868131868132
[np.int64(16), 104, 2.6, 12]
Child: [np.int64(16), 104, 2.6, 12]
Old_chrom: [16.0, 96, 2.65, 13]
Diff: 0.09772181834699534
[np.int64(24), 96, 2.6, 12]
Child: [24.0, 112, 2.849999999999997, 13]
Old_chrom: [24.0, 112, 2.849999999999997, 12]
Diff: 0.017857142857142856
[16.0, 112, 2.799999999999997, 13]
Child: [16.0, 112, 2.799999999999997, 13]
Old_chrom: [16.0, 120, 2.75, 12]
Diff: 0.0977218183469937
[np.int64(16), 120, 2.799999999999997, 13]
Created model:  burgundy_dugong
Created model:  cinnamon_agama
Created model:  colorful_beagle
Created model:  fiery_porpoise
Created model:  imported_mastiff
Created model:  ivory_leech
Created model:  jolly_tarantula
Created model:  light_monkey
Created model:  lively_trout
Created model:  merciful_weasel
Created model:  muscular_heron
Created model:  noisy_jaguar
Created model:  peculiar_pheasant
Created model:  russet_shellfish
Created model:  sepia_raccoon
Created model:  steadfast_smilodon
Created model:  tan_mantis
Created model:  taupe_meerkat
Created model:  vengeful_turkey
Created model:  wild_skunk
[2K[2Kburgundy_dugong
[31m[EVAL] Best accuracy:64.69999694824219[0m
[2K[2Kcinnamon_agama
[31m[EVAL] Best accuracy:65.04999542236328[0m
[2K[2Kcolorful_beagle
[31m[EVAL] Best accuracy:66.2699966430664[0m
[2K[2Kfiery_porpoise
[31m[EVAL] Best accuracy:63.38999938964844[0m
[2K[2Kimported_mastiff
[31m[EVAL] Best accuracy:59.68000030517578[0m
[2K[2Kivory_leech
[31m[EVAL] Best accuracy:57.8599967956543[0m
[2K[2Kjolly_tarantula
[31m[EVAL] Best accuracy:66.5[0m
[2K[2Klight_monkey
[31m[EVAL] Best accuracy:64.7699966430664[0m
[2K[2Klively_trout
[31m[EVAL] Best accuracy:64.63999938964844[0m
[2K[2Kmerciful_weasel
[31m[EVAL] Best accuracy:64.51000213623047[0m
[2K[2Kmuscular_heron
[31m[EVAL] Best accuracy:65.56999969482422[0m
[2K[2Knoisy_jaguar
[31m[EVAL] Best accuracy:65.41999816894531[0m
[2K[2Kpeculiar_pheasant
[31m[EVAL] Best accuracy:63.90999984741211[0m
[2K[2Krusset_shellfish
[31m[EVAL] Best accuracy:60.39999771118164[0m
[2K[2Ksepia_raccoon
[31m[EVAL] Best accuracy:58.439998626708984[0m
[2K[2Ksteadfast_smilodon
[31m[EVAL] Best accuracy:64.18000030517578[0m
[2K[2Ktan_mantis
[31m[EVAL] Best accuracy:65.86000061035156[0m
[2K[2Ktaupe_meerkat
[31m[EVAL] Best accuracy:65.33000183105469[0m
[2K[2Kvengeful_turkey
[31m[EVAL] Best accuracy:62.939998626708984[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 16.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 16.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 7, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 20, 'STEM_W': 20, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 120, 'WA': 16.0, 'WM': 2.799999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 8244.341625928879
ic| self.metadata["time_remaining"]: 83331.85172510147
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 71.35,
               'codename': 'Volga',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_2/tests_Volga_21_10_2024_04_51/Generation_3/wild_skunk',
               'input_shape': [50000, 20, 20, 20],
               'mode': 'NAS',
               'num_classes': 7,
               'test_type': 'T3_Proxy/seed_2',
               'time_remaining': 75087.1517727375,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| unique_values: array([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1. ],
                         dtype=float32)
ic| C: 1
ic| H: 9
ic| PH: 1
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fbdf946f010>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbdf946f3d0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbdf946fac0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbdf946cbb0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fbec063b070>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fbe18ccb8b0>,
                 ToTensor(),
                 RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fbdf946d930>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['tangerine_muskrat',
                  'silent_nuthatch',
                  'fabulous_earwig',
                  'cherubic_junglefowl',
                  'authentic_tuna',
                  'cautious_crow',
                  'brilliant_bobcat',
                  'faithful_horse',
                  'taupe_caterpillar',
                  'manipulative_taipan']
ic| params: [32.0, 48, 2.549999999999998, 11, 8]
ic| params: [16.0, 24, 2.299999999999999, 22, 8]
ic| params: [32.0, 112, 2.899999999999997, 11, 8]
ic| params: [16.0, 80, 2.4499999999999984, 16, 8]
ic| params: [48.0, 112, 2.249999999999999, 21, 8]
ic| params: [16.0, 48, 2.849999999999997, 15, 8]
ic| params: [56.0, 104, 2.849999999999997, 13, 8]
ic| params: [40.0, 72, 2.05, 22, 8]
ic| params: [40.0, 104, 2.3999999999999986, 17, 8]
ic| params: [32.0, 72, 2.249999999999999, 22, 8]
ic| individuals: ['tangerine_muskrat',
                  'silent_nuthatch',
                  'fabulous_earwig',
                  'cherubic_junglefowl',
                  'authentic_tuna',
                  'cautious_crow',
                  'brilliant_bobcat',
                  'faithful_horse',
                  'taupe_caterpillar',
                  'manipulative_taipan']
ic| params_dict: {'authentic_tuna': [48.0, 112, 2.249999999999999, 21, 8],
                  'brilliant_bobcat': [56.0, 104, 2.849999999999997, 13, 8],
                  'cautious_crow': [16.0, 48, 2.849999999999997, 15, 8],
                  'cherubic_junglefowl': [16.0, 80, 2.4499999999999984, 16, 8],
                  'fabulous_earwig': [32.0, 112, 2.899999999999997, 11, 8],
                  'faithful_horse': [40.0, 72, 2.05, 22, 8],
                  'manipulative_taipan': [32.0, 72, 2.249999999999999, 22, 8],
                  'silent_nuthatch': [16.0, 24, 2.299999999999999, 22, 8],
                  'tangerine_muskrat': [32.0, 48, 2.549999999999998, 11, 8],
                  'taupe_caterpillar': [40.0, 104, 2.3999999999999986, 17, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbdf946f010>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbdf946f3d0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbdf946fac0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbdf946cbb0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbec063b070>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbe18ccb8b0>,
                                                ToTensor(),
                                                RandomCrop(size=(9, 9), padding=[1, 1, 1, 1], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbdf946d930>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4198]), std=tensor([0.3068]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/pandas/core/dtypes/astype.py:133: ComplexWarning:

Casting complex values to real discards the imaginary part

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 9'
ic| f"selected transform {train_transform}": ('selected transform [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, '
                                              '3.3), value=[0.0], inplace=False), RandomHorizontalFlip(p=0.5), '
                                              'RandomVerticalFlip(p=0.5)]')
ic| self.x.shape: torch.Size([50000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| self.x.shape: torch.Size([10000, 1, 9, 9])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41465020416
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 73204.84693336487
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| ranking_prediction_df:                           score
                           sincere_alpaca       150.573598
                           flashy_bear          146.585501
                           kind_ocelot          137.350848
                           visionary_terrier    127.440261
                           proficient_clam      113.369293
                           optimistic_nautilus  112.631919
                           petite_firefly       108.511837
                           kind_worm            106.650169
                           just_monkey          104.041002
                           colossal_cheetah     103.983883
                           enthusiastic_skink    94.531234
                           myrtle_seagull        92.686314
                           paper_tarantula       92.521288
                           vehement_ferret       88.557730
                           nondescript_giraffe   79.272209
                           strange_bumblebee     76.477282
                           serious_orca          73.361346
                           awesome_ocelot        70.591216
                           ruddy_numbat          66.059671
                           taupe_swan            65.266714
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwild_skunk
[31m[EVAL] Best accuracy:66.5999984741211[0m
['parents.csv', 'burgundy_dugong', 'cinnamon_agama', 'colorful_beagle', 'fiery_porpoise', 'imported_mastiff', 'ivory_leech', 'jolly_tarantula', 'light_monkey', 'lively_trout', 'merciful_weasel', 'muscular_heron', 'noisy_jaguar', 'peculiar_pheasant', 'russet_shellfish', 'sepia_raccoon', 'steadfast_smilodon', 'tan_mantis', 'taupe_meerkat', 'vengeful_turkey', 'wild_skunk', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 66.6
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_2/tests_Volga_21_10_2024_04_51/Generation_2/invisible_pegasus/config.yaml

=== Training ===
  Allotted compute time remaining: ~20h,51m,27s
Early stopping at epoch 73
[31m[EVAL] Best accuracy:83.15999603271484[0m

=== Predicting ===
  Allotted compute time remaining: ~20h,25m,24s

========== Dataset   Sokoto   =============================================
  Metadata:
   - input_shape         : [50000, 1, 9, 9]
   - codename            : Sokoto
   - benchmark           : 0.0
   - num_classes         : 9
   - time_remaining      : 73523.14656996727

=== Processing Data ===
  Allotted compute time remaining: ~20h,25m,23s

=== Performing NAS ===
  Allotted compute time remaining: ~20h,20m,4s
spawn
Created model:  sincere_alpaca
Created model:  flashy_bear
Created model:  kind_ocelot
Created model:  visionary_terrier
Created model:  proficient_clam
Created model:  optimistic_nautilus
Created model:  petite_firefly
Created model:  kind_worm
Created model:  just_monkey
Created model:  colossal_cheetah
Created model:  enthusiastic_skink
Created model:  myrtle_seagull
Created model:  paper_tarantula
Created model:  vehement_ferret
Created model:  nondescript_giraffe
Created model:  strange_bumblebee
Created model:  serious_orca
Created model:  awesome_ocelot
Created model:  ruddy_numbat
Created model:  taupe_swan
[2K[2Kawesome_ocelot
[31m[EVAL] Best accuracy:22.25[0m
[2K[2Kcolossal_cheetah
[31m[EVAL] Best accuracy:23.559999465942383[0m
[2K[2Kenthusiastic_skink
[31m[EVAL] Best accuracy:22.65999984741211[0m
[2K[2Kflashy_bear
[31m[EVAL] Best accuracy:19.600000381469727[0m
[2K[2Kjust_monkey
[31m[EVAL] Best accuracy:19.049999237060547[0m
[2K[2Kkind_ocelot
[31m[EVAL] Best accuracy:20.889999389648438[0m
[2K[2Kkind_worm
[31m[EVAL] Best accuracy:22.85999870300293[0m
[2K[2Kmyrtle_seagull
[31m[EVAL] Best accuracy:21.049999237060547[0m
[2K[2Knondescript_giraffe
[31m[EVAL] Best accuracy:19.60999870300293[0m
[2K[2Koptimistic_nautilus
[31m[EVAL] Best accuracy:22.559999465942383[0m
[2K[2Kpaper_tarantula
[31m[EVAL] Best accuracy:16.619998931884766[0m
[2K[2Kpetite_firefly
[31m[EVAL] Best accuracy:21.90999984741211[0m
[2K[2Kproficient_clam
[31m[EVAL] Best accuracy:18.53999900817871[0m
[2K[2Kruddy_numbat
[31m[EVAL] Best accuracy:16.34000015258789[0m
[2K[2Kserious_orca
[31m[EVAL] Best accuracy:16.649999618530273[0m
[2K[2Ksincere_alpaca
[31m[EVAL] Best accuracy:21.219999313354492[0m
[2K[2Kstrange_bumblebee
[31m[EVAL] Best accuracy:21.689998626708984[0m
[2K[2Ktaupe_swan
[31m[EVAL] Best accuracy:18.239999771118164[0m
[2K[2Kvehement_ferret
[31m[EVAL] Best accuracy:22.329999923706055[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2207.582302570343
ic| self.metadata["time_remaining"]: 73204.84693336487
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 17, 'W0': 96, 'WA': 56.0, 'WM': 2.6499999999999977, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 120, 'WA': 32.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvisionary_terrier
[31m[EVAL] Best accuracy:25.53999900817871[0m
['sincere_alpaca', 'flashy_bear', 'kind_ocelot', 'visionary_terrier', 'proficient_clam', 'optimistic_nautilus', 'petite_firefly', 'kind_worm', 'just_monkey', 'colossal_cheetah', 'enthusiastic_skink', 'myrtle_seagull', 'paper_tarantula', 'vehement_ferret', 'nondescript_giraffe', 'strange_bumblebee', 'serious_orca', 'awesome_ocelot', 'ruddy_numbat', 'taupe_swan', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 25.54
Child: [24.0, 120, 2.4000000000000004, 12]
Old_chrom: [16.0, 112, 2.3999999999999986, 14]
Diff: 0.09661173304039053
[24.0, 128, 2.3500000000000005, 11]
Child: [40.0, 120, 2.4000000000000004, 9]
Old_chrom: [48.0, 112, 2.3999999999999986, 8]
Diff: 0.07875459018324768
[32.0, 128, 2.45, 8]
Child: [28.0, 112, 2.6500000000000004, 13]
Old_chrom: [24.0, 104, 2.6499999999999977, 11]
Diff: 0.07577840227559193
[28.0, 112, 2.6500000000000004, 12]
Child: [28.0, 112, 2.6500000000000004, 12]
Old_chrom: [24.0, 104, 2.6499999999999977, 11]
Diff: 0.05792125941844908
[20.0, 120, 2.6500000000000004, 11]
Child: [20.0, 120, 2.6500000000000004, 11]
Old_chrom: [24.0, 104, 2.6499999999999977, 11]
Diff: 0.05929488579207545
[20.0, 128, 2.6500000000000004, 12]
Child: [20.0, 128, 2.6500000000000004, 12]
Old_chrom: [24.0, 104, 2.6499999999999977, 11]
Diff: 0.09638279787998755
[20.0, 136, 2.6000000000000005, 11]
Child: [36.0, 112, 2.5500000000000003, 10]
Old_chrom: [36.0, 120, 2.6, 11]
Diff: 0.09772181834699534
[36.0, 112, 2.5000000000000004, 9]
Child: [32.0, 112, 2.75, 12]
Old_chrom: [32.0, 104, 2.799999999999997, 13]
Diff: 0.0977218183469937
[40.0, 112, 2.8, 12]
Child: [16.0, 120, 2.3499999999999988, 14]
Old_chrom: [16.0, 112, 2.3999999999999986, 14]
Diff: 0.07986467548985247
[24.0, 128, 2.3999999999999986, 15]
Child: [24.0, 128, 2.3999999999999986, 15]
Old_chrom: [16.0, 112, 2.3999999999999986, 14]
Diff: 0.09798534798534797
[32.0, 120, 2.3999999999999986, 14]
Child: [32.0, 104, 2.6499999999999977, 9]
Old_chrom: [24.0, 104, 2.6499999999999977, 11]
Diff: 0.07738095238095238
[32.0, 104, 2.6499999999999977, 9]
Child: [32.0, 104, 2.6499999999999977, 9]
Old_chrom: [24.0, 104, 2.6499999999999977, 11]
Diff: 0.07738095238095238
[40.0, 104, 2.6999999999999975, 9]
Child: [48.0, 112, 2.3499999999999988, 9]
Old_chrom: [48.0, 112, 2.3999999999999986, 8]
Diff: 0.07849104911622609
[56.0, 112, 2.299999999999999, 10]
Child: [32.0, 112, 2.849999999999997, 9]
Old_chrom: [40.0, 112, 2.849999999999997, 12]
Diff: 0.09523809523809523
[40.0, 112, 2.799999999999997, 9]
Child: [24.0, 112, 2.3999999999999986, 11]
Old_chrom: [16.0, 112, 2.3999999999999986, 14]
Diff: 0.09523809523809523
[24.0, 120, 2.3999999999999986, 10]
Child: [40.0, 112, 2.3999999999999986, 14]
Old_chrom: [32.0, 112, 2.4000000000000004, 11]
Diff: 0.09523810666676416
[40.0, 112, 2.3499999999999988, 15]
Child: [48.0, 112, 2.6499999999999977, 11]
Old_chrom: [44.0, 112, 2.6500000000000004, 10]
Diff: 0.038690490187679845
[48.0, 120, 2.6999999999999975, 12]
Child: [40.0, 112, 2.3999999999999986, 12]
Old_chrom: [32.0, 112, 2.4000000000000004, 11]
Diff: 0.05952382095247845
[40.0, 104, 2.3499999999999988, 13]
Child: [40.0, 104, 2.3499999999999988, 13]
Old_chrom: [40.0, 112, 2.3499999999999988, 15]
Diff: 0.054945054945054944
[40.0, 112, 2.299999999999999, 14]
Child: [40.0, 112, 2.299999999999999, 14]
Old_chrom: [40.0, 120, 2.299999999999999, 11]
Diff: 0.0728021978021978
[32.0, 120, 2.249999999999999, 15]
Created model:  cerulean_turtle
Created model:  chirpy_iguana
Created model:  debonair_whale
Created model:  electric_gaur
Created model:  eminent_boa
Created model:  fantastic_uakari
Created model:  lime_wasp
Created model:  ludicrous_axolotl
Created model:  married_jacamar
Created model:  military_python
Created model:  monumental_bonobo
Created model:  papaya_ibex
Created model:  quixotic_pegasus
Created model:  rough_crane
Created model:  russet_dragonfly
Created model:  snobbish_pegasus
Created model:  teal_chowchow
Created model:  tentacled_buffalo
Created model:  towering_pogona
Created model:  witty_nuthatch
[2K[2Kcerulean_turtle
[31m[EVAL] Best accuracy:22.239999771118164[0m
[2K[2Kchirpy_iguana
[31m[EVAL] Best accuracy:24.5[0m
[2K[2Kdebonair_whale
[31m[EVAL] Best accuracy:25.420000076293945[0m
[2K[2Kelectric_gaur
[31m[EVAL] Best accuracy:25.869998931884766[0m
[2K[2Keminent_boa
[31m[EVAL] Best accuracy:20.09000015258789[0m
[2K[2Kfantastic_uakari
[31m[EVAL] Best accuracy:21.739999771118164[0m
[2K[2Klime_wasp
[31m[EVAL] Best accuracy:23.3799991607666[0m
[2K[2Kludicrous_axolotl
[31m[EVAL] Best accuracy:27.079999923706055[0m
[2K[2Kmarried_jacamar
[31m[EVAL] Best accuracy:23.709999084472656[0m
[2K[2Kmilitary_python
[31m[EVAL] Best accuracy:22.35999870300293[0m
[2K[2Kmonumental_bonobo
[31m[EVAL] Best accuracy:21.959999084472656[0m
[2K[2Kpapaya_ibex
[31m[EVAL] Best accuracy:24.34000015258789[0m
[2K[2Kquixotic_pegasus
[31m[EVAL] Best accuracy:19.389999389648438[0m
[2K[2Krough_crane
[31m[EVAL] Best accuracy:25.19999885559082[0m
[2K[2Krusset_dragonfly
[31m[EVAL] Best accuracy:26.170000076293945[0m
[2K[2Ksnobbish_pegasus
[31m[EVAL] Best accuracy:16.5[0m
[2K[2Kteal_chowchow
[31m[EVAL] Best accuracy:16.549999237060547[0m
[2K[2Ktentacled_buffalo
[31m[EVAL] Best accuracy:21.559999465942383[0m
[2K[2Ktowering_pogona
[31m[EVAL] Best accuracy:20.489999771118164[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 120, 'WA': 32.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 120, 'WA': 32.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 120, 'WA': 32.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 4262.591031074524
ic| self.metadata["time_remaining"]: 73204.84693336487
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 120, 'WA': 32.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 120, 'WA': 32.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 120, 'WA': 32.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 120, 'WA': 32.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 15, 'W0': 120, 'WA': 32.0, 'WM': 2.249999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 32.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kwitty_nuthatch
[31m[EVAL] Best accuracy:19.5[0m
['parents.csv', 'cerulean_turtle', 'chirpy_iguana', 'debonair_whale', 'electric_gaur', 'eminent_boa', 'fantastic_uakari', 'lime_wasp', 'ludicrous_axolotl', 'married_jacamar', 'military_python', 'monumental_bonobo', 'papaya_ibex', 'quixotic_pegasus', 'rough_crane', 'russet_dragonfly', 'snobbish_pegasus', 'teal_chowchow', 'tentacled_buffalo', 'towering_pogona', 'witty_nuthatch', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 27.08
Child: [30.0, 120, 2.45, 10]
Old_chrom: [24.0, 120, 2.3999999999999986, 10]
Diff: 0.09188390625908432
[22.0, 128, 2.45, 9]
Child: [36.0, 120, 2.5500000000000003, 10]
Old_chrom: [36.0, 112, 2.5000000000000004, 9]
Diff: 0.09772181834699534
[28.0, 120, 2.5000000000000004, 9]
Child: [34.0, 120, 2.5, 9]
Old_chrom: [36.0, 112, 2.5000000000000004, 9]
Diff: 0.02964744161177036
[34.0, 120, 2.55, 10]
Child: [34.0, 120, 2.55, 10]
Old_chrom: [36.0, 120, 2.6, 11]
Diff: 0.08890771578289303
[42.0, 120, 2.5999999999999996, 9]
Child: [38.0, 112, 2.6500000000000004, 9]
Old_chrom: [40.0, 104, 2.6999999999999975, 9]
Diff: 0.09028134215651752
[46.0, 112, 2.7, 8]
Child: [30.0, 120, 2.5, 11]
Old_chrom: [36.0, 112, 2.5000000000000004, 9]
Diff: 0.08619506065938941
[22.0, 112, 2.45, 11]
Child: [28.0, 128, 2.45, 9]
Old_chrom: [32.0, 128, 2.45, 8]
Diff: 0.03869047619047619
[28.0, 120, 2.45, 8]
Child: [28.0, 120, 2.45, 8]
Old_chrom: [32.0, 128, 2.45, 8]
Diff: 0.04006410256410256
[20.0, 128, 2.5, 8]
Child: [20.0, 128, 2.5, 8]
Old_chrom: [22.0, 128, 2.45, 9]
Diff: 0.08890771578289278
[20.0, 128, 2.45, 9]
Child: [32.0, 120, 2.6, 10]
Old_chrom: [36.0, 120, 2.6, 11]
Diff: 0.03869047619047619
[40.0, 112, 2.65, 10]
Child: [40.0, 112, 2.65, 10]
Old_chrom: [40.0, 104, 2.6999999999999975, 9]
Diff: 0.09772181834699398
[32.0, 112, 2.6, 11]
Child: [38.0, 120, 2.7, 10]
Old_chrom: [40.0, 104, 2.6999999999999975, 9]
Diff: 0.06673536198255164
[38.0, 120, 2.75, 9]
Child: [38.0, 120, 2.75, 9]
Old_chrom: [40.0, 112, 2.799999999999997, 9]
Diff: 0.09028134215651752
[30.0, 112, 2.8, 9]
Child: [36.0, 120, 2.6500000000000004, 9]
Old_chrom: [36.0, 120, 2.6, 11]
Diff: 0.09634819197336922
[36.0, 128, 2.6000000000000005, 8]
Child: [24.0, 112, 2.5000000000000004, 10]
Old_chrom: [36.0, 112, 2.5000000000000004, 9]
Diff: 0.08035714285714285
[24.0, 112, 2.4500000000000006, 9]
Child: [36.0, 112, 2.6, 11]
Old_chrom: [36.0, 120, 2.6, 11]
Diff: 0.019230769230769232
[36.0, 120, 2.65, 12]
Child: [36.0, 120, 2.65, 12]
Old_chrom: [36.0, 120, 2.6, 11]
Diff: 0.07849104911622609
[36.0, 112, 2.65, 13]
Child: [36.0, 112, 2.65, 13]
Old_chrom: [44.0, 112, 2.6500000000000004, 10]
Diff: 0.0952381009524297
[36.0, 120, 2.65, 12]
Child: [32.0, 128, 2.5000000000000004, 9]
Old_chrom: [36.0, 112, 2.5000000000000004, 9]
Diff: 0.05929487179487179
[32.0, 128, 2.5000000000000004, 9]
Child: [32.0, 128, 2.5000000000000004, 9]
Old_chrom: [36.0, 112, 2.5000000000000004, 9]
Diff: 0.05929487179487179
[40.0, 120, 2.5500000000000003, 10]
Child: [40.0, 120, 2.5500000000000003, 10]
Old_chrom: [36.0, 120, 2.6, 11]
Diff: 0.09932438244955943
[40.0, 120, 2.6, 10]
Child: [40.0, 112, 2.5000000000000004, 9]
Old_chrom: [48.0, 104, 2.4999999999999982, 11]
Diff: 0.09661173438936191
[32.0, 120, 2.5500000000000003, 10]
Child: [36.0, 120, 2.3999999999999986, 10]
Old_chrom: [32.0, 120, 2.3499999999999988, 9]
Diff: 0.09932438244955943
[36.0, 112, 2.4499999999999984, 9]
Child: [32.0, 120, 2.3999999999999986, 8]
Old_chrom: [32.0, 120, 2.3499999999999988, 9]
Diff: 0.07849104911622609
[40.0, 120, 2.3999999999999986, np.int64(8)]
Child: [40.0, 120, 2.3999999999999986, np.int64(8)]
Old_chrom: [48.0, 112, 2.3999999999999986, 8]
Diff: 0.060897435897435896
[40.0, 128, 2.3999999999999986, np.int64(9)]
Child: [40.0, 128, 2.3999999999999986, np.int64(9)]
Old_chrom: [48.0, 112, 2.3999999999999986, 8]
Diff: 0.09798534798534797
[32.0, 128, 2.3999999999999986, np.int64(8)]
Child: [40.0, 120, 2.3999999999999986, 9]
Old_chrom: [48.0, 112, 2.3999999999999986, 8]
Diff: 0.07875457875457875
[32.0, 112, 2.4499999999999984, 10]
Child: [32.0, 112, 2.4499999999999984, 10]
Old_chrom: [36.0, 112, 2.5000000000000004, 9]
Diff: 0.09932438244956077
[40.0, 104, 2.4499999999999984, 9]
Child: [32.0, 128, 2.6, 11]
Old_chrom: [36.0, 120, 2.6, 11]
Diff: 0.04006410256410256
[24.0, 120, 2.6, 11]
Child: [24.0, 120, 2.6, 11]
Old_chrom: [24.0, 104, 2.6499999999999977, 11]
Diff: 0.09909544472062036
[32.0, 120, 2.65, 10]
Child: [40.0, 112, 2.6, 11]
Old_chrom: [36.0, 120, 2.6, 11]
Diff: 0.04006410256410256
[48.0, 112, 2.6, 10]
Child: [48.0, 112, 2.6, 10]
Old_chrom: [36.0, 120, 2.6, 11]
Diff: 0.0995879120879121
[56.0, 104, 2.6, 9]
Child: [32.0, 128, 2.799999999999997, 9]
Old_chrom: [40.0, 112, 2.799999999999997, 9]
Diff: 0.08012820512820512
[32.0, 120, 2.849999999999997, 10]
Created model:  able_sturgeon
Created model:  adventurous_rhino
Created model:  cerise_basilisk
Created model:  chestnut_dove
Created model:  demonic_chamois
Created model:  enigmatic_stallion
Created model:  finicky_flamingo
Created model:  fortunate_roadrunner
Created model:  industrious_rattlesnake
Created model:  inventive_hyena
Created model:  laughing_butterfly
Created model:  lively_panda
Created model:  lyrical_viper
Created model:  masked_ammonite
Created model:  overjoyed_gharial
Created model:  private_trogon
Created model:  sexy_avocet
Created model:  stirring_caribou
Created model:  tall_kiwi
Created model:  vanilla_pillbug
[2K[2Kable_sturgeon
[31m[EVAL] Best accuracy:25.260000228881836[0m
[2K[2Kadventurous_rhino
[31m[EVAL] Best accuracy:25.209999084472656[0m
[2K[2Kcerise_basilisk
[31m[EVAL] Best accuracy:22.85999870300293[0m
[2K[2Kchestnut_dove
[31m[EVAL] Best accuracy:24.989999771118164[0m
[2K[2Kdemonic_chamois
[31m[EVAL] Best accuracy:23.719999313354492[0m
[2K[2Kenigmatic_stallion
[31m[EVAL] Best accuracy:26.28999900817871[0m
[2K[2Kfinicky_flamingo
[31m[EVAL] Best accuracy:22.760000228881836[0m
[2K[2Kfortunate_roadrunner
[31m[EVAL] Best accuracy:26.90999984741211[0m
[2K[2Kindustrious_rattlesnake
[31m[EVAL] Best accuracy:26.689998626708984[0m
[2K[2Kinventive_hyena
[31m[EVAL] Best accuracy:27.279998779296875[0m
[2K[2Klaughing_butterfly
[31m[EVAL] Best accuracy:27.099998474121094[0m
[2K[2Klively_panda
[31m[EVAL] Best accuracy:25.09000015258789[0m
[2K[2Klyrical_viper
[31m[EVAL] Best accuracy:23.309999465942383[0m
[2K[2Kmasked_ammonite
[31m[EVAL] Best accuracy:24.34000015258789[0m
[2K[2Koverjoyed_gharial
[31m[EVAL] Best accuracy:23.34000015258789[0m
[2K[2Kprivate_trogon
[31m[EVAL] Best accuracy:26.599998474121094[0m
[2K[2Ksexy_avocet
[31m[EVAL] Best accuracy:25.599998474121094[0m
[2K[2Kstirring_caribou
[31m[EVAL] Best accuracy:24.69999885559082[0m
[2K[2Ktall_kiwi
[31m[EVAL] Best accuracy:22.60999870300293[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 32.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 32.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 9, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 1, 'STEM_W': 9, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 10, 'W0': 120, 'WA': 32.0, 'WM': 2.849999999999997, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6211.829077959061
ic| self.metadata["time_remaining"]: 73204.84693336487
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 0.0,
               'codename': 'Sokoto',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_2/tests_Sokoto_21_10_2024_07_40/Generation_3/vanilla_pillbug',
               'input_shape': [50000, 1, 9, 9],
               'mode': 'NAS',
               'num_classes': 9,
               'test_type': 'T3_Proxy/seed_2',
               'time_remaining': 66992.76445913315,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| self.select_augment: 'Proxy'
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| unique_values: array([0.09411765, 0.09803922, 0.10196079, 0.10588235, 0.10980392,
                          0.11372549, 0.11764706, 0.12156863, 0.1254902 , 0.12941177,
                          0.13333334, 0.13725491, 0.14117648, 0.14509805, 0.14901961,
                          0.15294118, 0.15686275, 0.16078432, 0.16470589, 0.16862746,
                          0.17254902, 0.1764706 , 0.18039216, 0.18431373, 0.1882353 ,
                          0.19215687, 0.19607843, 0.2       , 0.20392157, 0.20784314,
                          0.21176471, 0.21568628, 0.21960784, 0.22352941, 0.22745098,
                          0.23137255, 0.23529412, 0.23921569, 0.24313726, 0.24705882,
                          0.2509804 , 0.25490198, 0.25882354, 0.2627451 , 0.26666668,
                          0.27058825, 0.27450982, 0.2784314 , 0.28235295, 0.28627452,
                          0.2901961 , 0.29411766, 0.29803923, 0.3019608 , 0.30588236,
                          0.30980393, 0.3137255 , 0.31764707, 0.32156864, 0.3254902 ,
                          0.32941177, 0.33333334, 0.3372549 , 0.34117648, 0.34509805,
                          0.34901962, 0.3529412 , 0.35686275, 0.36078432, 0.3647059 ,
                          0.36862746, 0.37254903, 0.3764706 , 0.38039216, 0.38431373,
                          0.3882353 , 0.39215687, 0.39607844, 0.4       , 0.40392157,
                          0.40784314, 0.4117647 , 0.41568628, 0.41960785, 0.42352942,
                          0.42745098, 0.43137255, 0.43529412, 0.4392157 , 0.44313726,
                          0.44705883, 0.4509804 , 0.45490196, 0.45882353, 0.4627451 ,
                          0.46666667, 0.47058824, 0.4745098 , 0.47843137, 0.48235294,
                          0.4862745 , 0.49019608, 0.49411765, 0.49803922, 0.5019608 ,
                          0.5058824 , 0.50980395, 0.5137255 , 0.5176471 , 0.52156866,
                          0.5254902 , 0.5294118 , 0.53333336, 0.5372549 , 0.5411765 ,
                          0.54509807, 0.54901963, 0.5529412 , 0.5568628 , 0.56078434,
                          0.5647059 , 0.5686275 , 0.57254905, 0.5764706 , 0.5803922 ,
                          0.58431375, 0.5882353 , 0.5921569 , 0.59607846, 0.6       ,
                          0.6039216 , 0.60784316, 0.6117647 , 0.6156863 , 0.61960787,
                          0.62352943, 0.627451  , 0.6313726 , 0.63529414, 0.6392157 ,
                          0.6431373 , 0.64705884, 0.6509804 , 0.654902  , 0.65882355,
                          0.6627451 , 0.6666667 , 0.67058825, 0.6745098 , 0.6784314 ,
                          0.68235296, 0.6862745 , 0.6901961 , 0.69411767, 0.69803923,
                          0.7019608 , 0.7058824 , 0.70980394, 0.7137255 , 0.7176471 ,
                          0.72156864, 0.7254902 , 0.7294118 , 0.73333335, 0.7411765 ,
                          0.74509805, 0.7490196 , 0.7529412 , 0.75686276, 0.7647059 ,
                          0.76862746, 0.77254903, 0.7764706 , 0.78431374, 0.7882353 ,
                          0.7921569 , 0.79607844, 0.8       , 0.8039216 , 0.8156863 ,
                          0.81960785, 0.8235294 , 0.827451  , 0.83137256, 0.8392157 ,
                          0.8509804 , 0.85882354, 0.8627451 , 0.8666667 , 0.87058824,
                          0.8784314 , 0.88235295, 0.8901961 , 0.89411765, 0.90588236,
                          0.9098039 , 0.9137255 , 0.92156863, 0.92941177, 0.93333334,
                          0.9411765 , 0.9490196 , 0.9529412 , 0.972549  ], dtype=float32)
ic| C: 3
ic| H: 32
ic| PH: 4
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torchvision/transforms/v2/_deprecated.py:42: UserWarning:

The transform `ToTensor()` is deprecated and will be removed in a future release. Instead, please use `v2.Compose([v2.ToImage(), v2.ToDtype(torch.float32, scale=True)])`.Output is equivalent up to float precision.

ic| poss_augs: [[],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31)],
                [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31)],
                [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True)],
                [RandomHorizontalFlip(p=0.5), RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                 RandomHorizontalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fbdf9077be0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbdf9077d60>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbdf90774c0>, ToTensor()],
                [<data_processor.RandomPixelChange object at 0x7fbdf90761d0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5)],
                [<data_processor.RandomPixelChange object at 0x7fbec11a4d30>,
                 ToTensor(),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)],
                [<data_processor.RandomPixelChange object at 0x7fbe194f1f30>,
                 ToTensor(),
                 RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant)],
                [<data_processor.RandomPixelChange object at 0x7fbe194f0ca0>,
                 ToTensor(),
                 RandomHorizontalFlip(p=0.5),
                 RandomVerticalFlip(p=0.5),
                 RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False)]]
ic| individuals: ['micro_mongrel',
                  'crazy_scorpion',
                  'yellow_numbat',
                  'ruby_aardwolf',
                  'polar_lemming',
                  'overjoyed_woodpecker',
                  'flawless_limpet',
                  'teal_civet',
                  'charcoal_dachshund',
                  'astonishing_antelope']
ic| params: [24.0, 32, 2.1999999999999993, 16, 8]
ic| params: [48.0, 104, 2.3999999999999986, 15, 8]
ic| params: [56.0, 120, 2.899999999999997, 13, 8]
ic| params: [64.0, 104, 2.299999999999999, 19, 8]
ic| params: [56.0, 64, 2.599999999999998, 17, 8]
ic| params: [48.0, 104, 2.3499999999999988, 12, 8]
ic| params: [24.0, 104, 2.4499999999999984, 22, 8]
ic| params: [64.0, 72, 2.899999999999997, 15, 8]
ic| params: [56.0, 88, 2.549999999999998, 17, 8]
ic| params: [48.0, 88, 2.599999999999998, 8, 8]
ic| individuals: ['micro_mongrel',
                  'crazy_scorpion',
                  'yellow_numbat',
                  'ruby_aardwolf',
                  'polar_lemming',
                  'overjoyed_woodpecker',
                  'flawless_limpet',
                  'teal_civet',
                  'charcoal_dachshund',
                  'astonishing_antelope']
ic| params_dict: {'astonishing_antelope': [48.0, 88, 2.599999999999998, 8, 8],
                  'charcoal_dachshund': [56.0, 88, 2.549999999999998, 17, 8],
                  'crazy_scorpion': [48.0, 104, 2.3999999999999986, 15, 8],
                  'flawless_limpet': [24.0, 104, 2.4499999999999984, 22, 8],
                  'micro_mongrel': [24.0, 32, 2.1999999999999993, 16, 8],
                  'overjoyed_woodpecker': [48.0, 104, 2.3499999999999988, 12, 8],
                  'polar_lemming': [56.0, 64, 2.599999999999998, 17, 8],
                  'ruby_aardwolf': [64.0, 104, 2.299999999999999, 19, 8],
                  'teal_civet': [64.0, 72, 2.899999999999997, 15, 8],
                  'yellow_numbat': [56.0, 120, 2.899999999999997, 13, 8]}
ic| '#############'
ic| aug: 0
ic| train_loader.dataset.transform.transforms: [Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 1
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=9, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 2
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=5, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 3
ic| train_loader.dataset.transform.transforms: [RandAugment(interpolation=InterpolationMode.NEAREST, num_ops=2, magnitude=1, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 4
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=31),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 5
ic| train_loader.dataset.transform.transforms: [TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, num_magnitude_bins=15),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 6
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=3, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 7
ic| train_loader.dataset.transform.transforms: [AugMix(interpolation=InterpolationMode.BILINEAR, severity=1, mixture_width=3, chain_depth=-1, alpha=1.0, all_ops=True),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 8
ic| train_loader.dataset.transform.transforms: [RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 9
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 10
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 11
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 12
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 13
ic| train_loader.dataset.transform.transforms: [RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 14
ic| train_loader.dataset.transform.transforms: [RandomErasing(p=0.2, scale=(0.02, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                RandomHorizontalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 15
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbdf9077be0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 16
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbdf9077d60>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 17
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbdf90774c0>,
                                                ToTensor(),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 18
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbdf90761d0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 19
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbec11a4d30>,
                                                ToTensor(),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 20
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbe194f1f30>,
                                                ToTensor(),
                                                RandomCrop(size=(32, 32), padding=[4, 4, 4, 4], pad_if_needed=False, fill=0, padding_mode=constant),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

ic| '#############'
ic| aug: 21
ic| train_loader.dataset.transform.transforms: [<data_processor.RandomPixelChange object at 0x7fbe194f0ca0>,
                                                ToTensor(),
                                                RandomHorizontalFlip(p=0.5),
                                                RandomVerticalFlip(p=0.5),
                                                RandomErasing(p=0.2, scale=(0.05, 0.2), ratio=(0.3, 3.3), value=[0.0], inplace=False),
                                                Normalize(mean=tensor([0.4914, 0.4823, 0.4466]), std=tensor([0.2468, 0.2431, 0.2613]))]
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/torch/nn/modules/module.py:1640: FutureWarning:

Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:590: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/data_processor.py:608: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| f"best_augmentation: {best_aug}": 'best_augmentation: 5'
ic| f"selected transform {train_transform}": ('selected transform '
                                              '[TrivialAugmentWide(interpolation=InterpolationMode.NEAREST, '
                                              'num_magnitude_bins=15)]')
ic| self.x.shape: torch.Size([40000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| self.x.shape: torch.Size([10000, 3, 32, 32])
ic| mode: 'T3'
ic| f"Mode {mode}": 'Mode T3'
ic| get_gpu_memory(0): 41391620096
ic| self.total_generations: 3
ic| 'Time remaining:'
ic| metadata['time_remaining']: 65127.00665855408
ic| self.zcost_nas: False
ic| 'creating first generation'
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 20, 'W0': 232, 'WA': 115.89, 'WM': 2.53, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| samples: 100
/home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/.testvenv/lib/python3.10/site-packages/sklearn/base.py:376: InconsistentVersionWarning:

Trying to unpickle estimator SGDRegressor from version 1.4.2 when using version 1.5.0. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations

/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/RegNet.py:299: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy

ic| ranking_prediction_df:                            score
                           robust_panda          128.537826
                           congenial_warthog     115.758532
                           fractal_griffin       114.714060
                           invaluable_shellfish  110.005495
                           glittering_raptor     106.429126
                           jasper_bullmastiff    106.229789
                           inventive_cow         101.632254
                           slim_vicugna           91.698053
                           rebel_coua             85.466214
                           gifted_manul           83.557887
                           mustard_sambar         82.186201
                           cerulean_bullfinch     79.285420
                           teal_quoll             77.329286
                           peridot_lemming        77.190257
                           aquamarine_bobcat      75.304798
                           small_beluga           75.007157
                           grinning_stallion      74.937426
                           translucent_nautilus   74.529391
                           auspicious_oyster      73.472011
                           messy_hedgehog         72.338911
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 112, 'WA': 40.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 112, 'WA': 40.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kvanilla_pillbug
[31m[EVAL] Best accuracy:25.579999923706055[0m
['parents.csv', 'able_sturgeon', 'adventurous_rhino', 'cerise_basilisk', 'chestnut_dove', 'demonic_chamois', 'enigmatic_stallion', 'finicky_flamingo', 'fortunate_roadrunner', 'industrious_rattlesnake', 'inventive_hyena', 'laughing_butterfly', 'lively_panda', 'lyrical_viper', 'masked_ammonite', 'overjoyed_gharial', 'private_trogon', 'sexy_avocet', 'stirring_caribou', 'tall_kiwi', 'vanilla_pillbug', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 27.28
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_2/tests_Sokoto_21_10_2024_07_40/Generation_3/inventive_hyena/config.yaml

=== Training ===
  Allotted compute time remaining: ~18h,36m,32s
Early stopping at epoch 90
[31m[EVAL] Best accuracy:62.62999725341797[0m

=== Predicting ===
  Allotted compute time remaining: ~18h,11m,33s

========== Dataset  CIFAR10   =============================================
  Metadata:
   - input_shape         : [50000, 3, 32, 32]
   - codename            : CIFAR10
   - benchmark           : 90.65
   - num_classes         : 10
   - time_remaining      : 65491.97289466858

=== Processing Data ===
  Allotted compute time remaining: ~18h,11m,31s

=== Performing NAS ===
  Allotted compute time remaining: ~18h,5m,27s
spawn
Created model:  robust_panda
Created model:  congenial_warthog
Created model:  fractal_griffin
Created model:  invaluable_shellfish
Created model:  glittering_raptor
Created model:  jasper_bullmastiff
Created model:  inventive_cow
Created model:  slim_vicugna
Created model:  rebel_coua
Created model:  gifted_manul
Created model:  mustard_sambar
Created model:  cerulean_bullfinch
Created model:  teal_quoll
Created model:  peridot_lemming
Created model:  aquamarine_bobcat
Created model:  small_beluga
Created model:  grinning_stallion
Created model:  translucent_nautilus
Created model:  auspicious_oyster
Created model:  messy_hedgehog
[2K[2Kaquamarine_bobcat
[31m[EVAL] Best accuracy:72.77999877929688[0m
[2K[2Kauspicious_oyster
[31m[EVAL] Best accuracy:69.65999603271484[0m
[2K[2Kcerulean_bullfinch
[31m[EVAL] Best accuracy:68.79999542236328[0m
[2K[2Kcongenial_warthog
[31m[EVAL] Best accuracy:73.75[0m
[2K[2Kfractal_griffin
[31m[EVAL] Best accuracy:72.97999572753906[0m
[2K[2Kgifted_manul
[31m[EVAL] Best accuracy:76.30999755859375[0m
[2K[2Kglittering_raptor
[31m[EVAL] Best accuracy:75.0199966430664[0m
[2K[2Kgrinning_stallion
[31m[EVAL] Best accuracy:72.18999481201172[0m
[2K[2Kinvaluable_shellfish
[31m[EVAL] Best accuracy:72.87999725341797[0m
[2K[2Kinventive_cow
[31m[EVAL] Best accuracy:73.38999938964844[0m
[2K[2Kjasper_bullmastiff
[31m[EVAL] Best accuracy:72.90999603271484[0m
[2K[2Kmessy_hedgehog
[31m[EVAL] Best accuracy:72.15999603271484[0m
[2K[2Kmustard_sambar
[31m[EVAL] Best accuracy:70.7699966430664[0m
[2K[2Kperidot_lemming
[31m[EVAL] Best accuracy:74.20999908447266[0m
[2K[2Krebel_coua
[31m[EVAL] Best accuracy:72.69999694824219[0m
[2K[2Krobust_panda
[31m[EVAL] Best accuracy:75.18000030517578[0m
[2K[2Kslim_vicugna
[31m[EVAL] Best accuracy:71.36000061035156[0m
[2K[2Ksmall_beluga
[31m[EVAL] Best accuracy:76.37999725341797[0m
[2K[2Kteal_quoll
[31m[EVAL] Best accuracy:73.00999450683594[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 112, 'WA': 40.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 112, 'WA': 40.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 112, 'WA': 40.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 2346.619736433029
ic| self.metadata["time_remaining"]: 65127.00665855408
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 112, 'WA': 40.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 112, 'WA': 40.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 112, 'WA': 40.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 112, 'WA': 40.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 13, 'W0': 112, 'WA': 40.0, 'WM': 2.299999999999999, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Ktranslucent_nautilus
[31m[EVAL] Best accuracy:73.33999633789062[0m
['robust_panda', 'congenial_warthog', 'fractal_griffin', 'invaluable_shellfish', 'glittering_raptor', 'jasper_bullmastiff', 'inventive_cow', 'slim_vicugna', 'rebel_coua', 'gifted_manul', 'mustard_sambar', 'cerulean_bullfinch', 'teal_quoll', 'peridot_lemming', 'aquamarine_bobcat', 'small_beluga', 'grinning_stallion', 'translucent_nautilus', 'auspicious_oyster', 'messy_hedgehog', 'population.html', 'config.yaml']
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 76.38
Child: [40.0, 112, 2.35, 11]
Old_chrom: [40.0, 112, 2.299999999999999, 13]
Diff: 0.09634819197336977
[48.0, 112, 2.35, 10]
Child: [44.0, 112, 2.45, 9]
Old_chrom: [48.0, 104, 2.4499999999999984, 9]
Diff: 0.04006411399277149
[36.0, 120, 2.4000000000000004, 8]
Child: [36.0, 120, 2.4000000000000004, 8]
Old_chrom: [40.0, 120, 2.3999999999999986, 9]
Diff: 0.03869048761914512
[36.0, 120, 2.45, np.int64(8)]
Child: [36.0, 120, 2.45, np.int64(8)]
Old_chrom: [40.0, 120, 2.3999999999999986, 9]
Diff: 0.09932438244956052
[28.0, 128, 2.45, np.int64(9)]
Child: [48.0, 104, 2.6500000000000004, 9]
Old_chrom: [48.0, 112, 2.6500000000000004, 10]
Diff: 0.03708791208791209
[56.0, 112, 2.6500000000000004, 9]
Child: [56.0, 112, 2.6500000000000004, 9]
Old_chrom: [48.0, 112, 2.6500000000000004, 10]
Diff: 0.05952380952380952
[48.0, 104, 2.6000000000000005, 10]
Child: [48.0, 104, 2.6000000000000005, 10]
Old_chrom: [48.0, 112, 2.6500000000000004, 10]
Diff: 0.07986467548985247
[56.0, 112, 2.5500000000000007, 10]
Child: [36.0, 120, 2.3000000000000003, 11]
Old_chrom: [40.0, 112, 2.299999999999999, 13]
Diff: 0.0757783981759059
[44.0, 120, 2.3000000000000003, 10]
Child: [44.0, 120, 2.3000000000000003, 10]
Old_chrom: [40.0, 112, 2.299999999999999, 13]
Diff: 0.09363554103304875
[44.0, 120, 2.3000000000000003, 10]
Child: [40.0, 112, 2.5, 11]
Old_chrom: [24.0, 112, 2.4999999999999982, 11]
Diff: 0.08333334476200226
[40.0, 120, 2.55, 11]
Child: [40.0, 120, 2.55, 11]
Old_chrom: [40.0, 120, 2.5, 11]
Diff: 0.06063390625908324
[32.0, 120, 2.5, 12]
Child: [32.0, 120, 2.5, 12]
Old_chrom: [24.0, 112, 2.4999999999999982, 11]
Diff: 0.07875459018324768
[32.0, 128, 2.55, 11]
Child: [44.0, 112, 2.6, 9]
Old_chrom: [48.0, 112, 2.6500000000000004, 10]
Diff: 0.09932438244955971
[52.0, 120, 2.65, 9]
Child: [48.0, 104, 2.8000000000000003, 10]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.019230784349477132
[40.0, 96, 2.85, 9]
Child: [48.0, 104, 2.3999999999999986, 9]
Old_chrom: [48.0, 104, 2.4499999999999984, 9]
Diff: 0.06063390625908324
[56.0, 104, 2.3999999999999986, 10]
Child: [48.0, 112, 2.4499999999999984, 9]
Old_chrom: [48.0, 104, 2.4499999999999984, 9]
Diff: 0.019230769230769232
[40.0, 120, 2.3999999999999986, 8]
Child: [40.0, 120, 2.3999999999999986, 8]
Old_chrom: [40.0, 120, 2.3999999999999986, 9]
Diff: 0.017857142857142856
[40.0, 112, 2.3499999999999988, 8]
Child: [40.0, 112, 2.3499999999999988, 8]
Old_chrom: [40.0, 120, 2.3999999999999986, 9]
Diff: 0.09772181834699534
[32.0, 104, 2.3999999999999986, np.int64(8)]
Child: [48.0, 104, 2.799999999999997, 9]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.03708791208791209
[48.0, 112, 2.799999999999997, 10]
Child: [48.0, 112, 2.799999999999997, 10]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.0
[56.0, 104, 2.849999999999997, 11]
Child: [56.0, 104, 2.849999999999997, 11]
Old_chrom: [56.0, 112, 2.849999999999997, 12]
Diff: 0.03708791208791209
[48.0, 104, 2.799999999999997, 12]
Child: [48.0, 104, 2.799999999999997, 12]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.054945054945054944
[48.0, 112, 2.849999999999997, 12]
Child: [48.0, 112, 2.849999999999997, 12]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.09634819197336895
[40.0, 120, 2.899999999999997, 11]
Child: [40.0, 120, 2.1999999999999993, 9]
Old_chrom: [32.0, 120, 2.1999999999999993, 12]
Diff: 0.09523809523809523
[32.0, 120, 2.1499999999999995, 9]
Child: [48.0, 120, 2.1999999999999993, 9]
Old_chrom: [48.0, 120, 2.1999999999999993, 9]
Diff: 0.0
[48.0, 112, 2.1999999999999993, 9]
Child: [48.0, 112, 2.1999999999999993, 9]
Old_chrom: [48.0, 120, 2.1999999999999993, 9]
Diff: 0.019230769230769232
[56.0, 112, 2.249999999999999, 9]
Child: [40.0, 120, 2.799999999999997, 10]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.060897435897435896
[32.0, 128, 2.7499999999999973, 11]
Child: [32.0, 128, 2.7499999999999973, 11]
Old_chrom: [32.0, 120, 2.799999999999997, 10]
Diff: 0.09772181834699534
[40.0, 128, 2.799999999999997, 11]
Child: [40.0, 96, 2.799999999999997, 9]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.09798534798534797
[48.0, 104, 2.799999999999997, 8]
Child: [48.0, 112, 2.799999999999997, 9]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.017857142857142856
[56.0, 120, 2.799999999999997, 9]
Child: [56.0, 120, 2.799999999999997, 9]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.07875457875457875
[48.0, 112, 2.7499999999999973, 8]
Child: [48.0, 112, 2.7499999999999973, 8]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.09634819197336895
[40.0, 120, 2.6999999999999975, np.int64(8)]
Created model:  adaptable_shrimp
Created model:  agile_turaco
Created model:  artichoke_ibex
Created model:  axiomatic_toucan
Created model:  carrot_firefly
Created model:  classy_coyote
Created model:  classy_rhino
Created model:  functional_chinchilla
Created model:  hissing_mosquito
Created model:  industrious_bat
Created model:  naughty_penguin
Created model:  rare_tapir
Created model:  refined_silkworm
Created model:  serious_squirrel
Created model:  speedy_trout
Created model:  spicy_tuna
Created model:  straight_coati
Created model:  tuscan_earwig
Created model:  vegan_mantis
Created model:  versatile_python
[2K[2Kadaptable_shrimp
[31m[EVAL] Best accuracy:76.40999603271484[0m
[2K[2Kagile_turaco
[31m[EVAL] Best accuracy:74.70999908447266[0m
[2K[2Kartichoke_ibex
[31m[EVAL] Best accuracy:74.58000183105469[0m
[2K[2Kaxiomatic_toucan
[31m[EVAL] Best accuracy:75.68999481201172[0m
[2K[2Kcarrot_firefly
[31m[EVAL] Best accuracy:74.54000091552734[0m
[2K[2Kclassy_coyote
[31m[EVAL] Best accuracy:74.44999694824219[0m
[2K[2Kclassy_rhino
[31m[EVAL] Best accuracy:75.72000122070312[0m
[2K[2Kfunctional_chinchilla
[31m[EVAL] Best accuracy:75.38999938964844[0m
[2K[2Khissing_mosquito
[31m[EVAL] Best accuracy:77.25999450683594[0m
[2K[2Kindustrious_bat
[31m[EVAL] Best accuracy:75.65999603271484[0m
[2K[2Knaughty_penguin
[31m[EVAL] Best accuracy:75.54999542236328[0m
[2K[2Krare_tapir
[31m[EVAL] Best accuracy:73.93000030517578[0m
[2K[2Krefined_silkworm
[31m[EVAL] Best accuracy:76.40999603271484[0m
[2K[2Kserious_squirrel
[31m[EVAL] Best accuracy:76.30999755859375[0m
[2K[2Kspeedy_trout
[31m[EVAL] Best accuracy:75.97999572753906[0m
[2K[2Kspicy_tuna
[31m[EVAL] Best accuracy:74.63999938964844[0m
[2K[2Kstraight_coati
[31m[EVAL] Best accuracy:75.55999755859375[0m
[2K[2Ktuscan_earwig
[31m[EVAL] Best accuracy:76.11000061035156[0m
[2K[2Kvegan_mantis
[31m[EVAL] Best accuracy:75.58999633789062[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 4417.629797935486
ic| self.metadata["time_remaining"]: 65127.00665855408
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 8, 'W0': 120, 'WA': 40.0, 'WM': 2.6999999999999975, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
[2Kversatile_python
[31m[EVAL] Best accuracy:77.1500015258789[0m
['parents.csv', 'adaptable_shrimp', 'agile_turaco', 'artichoke_ibex', 'axiomatic_toucan', 'carrot_firefly', 'classy_coyote', 'classy_rhino', 'functional_chinchilla', 'hissing_mosquito', 'industrious_bat', 'naughty_penguin', 'rare_tapir', 'refined_silkworm', 'serious_squirrel', 'speedy_trout', 'spicy_tuna', 'straight_coati', 'tuscan_earwig', 'vegan_mantis', 'versatile_python', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.26
Child: [46.0, 120, 2.7, 9]
Old_chrom: [52.0, 120, 2.65, 9]
Diff: 0.09188390625908352
[38.0, 120, 2.7, 9]
Child: [50.0, 120, 2.5, 10]
Old_chrom: [40.0, 120, 2.5, 11]
Diff: 0.06994047619047619
[58.0, 128, 2.45, 11]
Child: [42.0, 112, 2.5500000000000003, 9]
Old_chrom: [56.0, 112, 2.5500000000000007, 10]
Diff: 0.09077381523814398
[34.0, 120, 2.6, 10]
Child: [46.0, 120, 2.8000000000000003, 10]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.029647451016143796
[54.0, 112, 2.7500000000000004, 10]
Child: [54.0, 112, 2.7500000000000004, 10]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.09188390625908135
[54.0, 120, 2.7500000000000004, 10]
Child: [44.0, 120, 2.5500000000000003, 9]
Old_chrom: [56.0, 112, 2.5500000000000007, 10]
Diff: 0.09958791780224654
[36.0, 120, 2.6, 10]
Child: [40.0, 120, 2.8000000000000003, 10]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.0608974510161438
[48.0, 120, 2.7500000000000004, 9]
Child: [48.0, 120, 2.7500000000000004, 9]
Old_chrom: [48.0, 112, 2.799999999999997, 10]
Diff: 0.09772181834699345
[40.0, 128, 2.7000000000000006, 10]
Child: [40.0, 112, 2.4000000000000004, 9]
Old_chrom: [40.0, 120, 2.3999999999999986, 9]
Diff: 0.01923078065943816
[40.0, 120, 2.45, 9]
Child: [40.0, 120, 2.45, 9]
Old_chrom: [48.0, 104, 2.4499999999999984, 9]
Diff: 0.08012821655687405
[48.0, 128, 2.45, 9]
Child: [44.0, 120, 2.6500000000000004, 11]
Old_chrom: [52.0, 120, 2.65, 9]
Diff: 0.07738095809528683
[52.0, 120, 2.6000000000000005, 11]
Child: [52.0, 120, 2.6000000000000005, 11]
Old_chrom: [52.0, 120, 2.65, 9]
Diff: 0.09634819197336869
[52.0, 120, 2.6500000000000004, 11]
Child: [36.0, 112, 2.6500000000000004, 10]
Old_chrom: [48.0, 112, 2.6500000000000004, 10]
Diff: 0.0625
[36.0, 104, 2.6000000000000005, 11]
Child: [36.0, 104, 2.6000000000000005, 11]
Old_chrom: [44.0, 120, 2.6, 10]
Diff: 0.09798535369968245
[28.0, 96, 2.6500000000000004, 10]
Child: [40.0, 120, 2.65, 9]
Old_chrom: [52.0, 120, 2.65, 9]
Diff: 0.0625
[40.0, 112, 2.6, 9]
Child: [40.0, 112, 2.6, 9]
Old_chrom: [44.0, 120, 2.6, 10]
Diff: 0.05792124542124542
[32.0, 112, 2.65, 10]
Child: [32.0, 112, 2.65, 10]
Old_chrom: [48.0, 112, 2.6500000000000004, 10]
Diff: 0.08333333904766779
[24.0, 112, 2.6, 9]
Child: [48.0, 112, 2.65, 9]
Old_chrom: [52.0, 120, 2.65, 9]
Diff: 0.04006410256410256
[40.0, 112, 2.6999999999999997, 10]
Child: [40.0, 112, 2.6999999999999997, 10]
Old_chrom: [40.0, 120, 2.6999999999999975, 8]
Diff: 0.05494506772269525
[40.0, 120, 2.65, 10]
Child: [40.0, 120, 2.65, 10]
Old_chrom: [52.0, 120, 2.65, 9]
Diff: 0.08035714285714285
[40.0, 128, 2.65, 11]
Child: [52.0, 104, 2.3999999999999986, 9]
Old_chrom: [48.0, 104, 2.4499999999999984, 9]
Diff: 0.08146723959241657
[52.0, 96, 2.4499999999999984, 9]
Child: [40.0, 120, 2.65, 9]
Old_chrom: [52.0, 120, 2.65, 9]
Diff: 0.0625
[40.0, 112, 2.6999999999999997, 8]
Child: [40.0, 112, 2.6999999999999997, 8]
Old_chrom: [40.0, 120, 2.6999999999999975, 8]
Diff: 0.01923078200840954
[40.0, 104, 2.7499999999999996, 9]
Child: [40.0, 120, 2.35, 10]
Old_chrom: [40.0, 120, 2.3999999999999986, 9]
Diff: 0.07849104911622529
[48.0, 128, 2.4, 9]
Child: [48.0, 128, 2.4, 9]
Old_chrom: [40.0, 120, 2.3999999999999986, 9]
Diff: 0.06089744579495352
[40.0, 136, 2.4499999999999997, 10]
Child: [40.0, 136, 2.4499999999999997, 10]
Old_chrom: [28.0, 128, 2.45, 9]
Diff: 0.09958791780224654
[32.0, 128, 2.4999999999999996, 11]
Child: [32.0, 104, 2.6999999999999975, 8]
Old_chrom: [32.0, 88, 2.6999999999999975, 9]
Diff: 0.05631868131868132
[32.0, 104, 2.6499999999999977, np.int64(8)]
Child: [32.0, 104, 2.6499999999999977, np.int64(8)]
Old_chrom: [28.0, 96, 2.6500000000000004, 10]
Diff: 0.07577840227559193
[40.0, 96, 2.599999999999998, np.int64(8)]
Child: [40.0, 120, 2.899999999999997, 8]
Old_chrom: [40.0, 120, 2.899999999999997, 11]
Diff: 0.05357142857142857
[32.0, 128, 2.9499999999999966, 8]
Child: [32.0, 104, 2.35, 10]
Old_chrom: [32.0, 104, 2.3999999999999986, 8]
Diff: 0.09634819197336815
[32.0, 112, 2.35, 9]
Child: [48.0, 120, 2.899999999999997, 10]
Old_chrom: [40.0, 120, 2.899999999999997, 11]
Diff: 0.05952380952380952
[56.0, 128, 2.899999999999997, 10]
Child: [40.0, 104, 2.3999999999999986, 11]
Old_chrom: [40.0, 120, 2.3999999999999986, 9]
Diff: 0.07417582417582418
[32.0, 104, 2.4499999999999984, 10]
Child: [32.0, 104, 2.4499999999999984, 10]
Old_chrom: [32.0, 104, 2.3999999999999986, 8]
Diff: 0.09634819197336895
[40.0, 112, 2.3999999999999986, 9]
Created model:  capable_cormorant
Created model:  faithful_dingo
Created model:  glittering_bittern
Created model:  golden_pelican
Created model:  great_waxbill
Created model:  interesting_dragonfly
Created model:  jade_sambar
Created model:  lavender_falcon
Created model:  lavender_shark
Created model:  logical_woodlouse
Created model:  poised_emu
Created model:  powerful_firefly
Created model:  proficient_lemming
Created model:  rare_parakeet
Created model:  sepia_ammonite
Created model:  smooth_seagull
Created model:  strong_herring
Created model:  tentacled_hog
Created model:  watchful_unicorn
Created model:  whispering_worm
[2K[2Kcapable_cormorant
[31m[EVAL] Best accuracy:75.50999450683594[0m
[2K[2Kfaithful_dingo
[31m[EVAL] Best accuracy:73.6199951171875[0m
[2K[2Kglittering_bittern
[31m[EVAL] Best accuracy:74.88999938964844[0m
[2K[2Kgolden_pelican
[31m[EVAL] Best accuracy:72.79000091552734[0m
[2K[2Kgreat_waxbill
[31m[EVAL] Best accuracy:76.04999542236328[0m
[2K[2Kinteresting_dragonfly
[31m[EVAL] Best accuracy:75.23999786376953[0m
[2K[2Kjade_sambar
[31m[EVAL] Best accuracy:77.04000091552734[0m
[2K[2Klavender_falcon
[31m[EVAL] Best accuracy:76.27999877929688[0m
[2K[2Klavender_shark
[31m[EVAL] Best accuracy:74.16999816894531[0m
[2K[2Klogical_woodlouse
[31m[EVAL] Best accuracy:76.13999938964844[0m
[2K[2Kpoised_emu
[31m[EVAL] Best accuracy:74.08000183105469[0m
[2K[2Kpowerful_firefly
[31m[EVAL] Best accuracy:75.16999816894531[0m
[2K[2Kproficient_lemming
[31m[EVAL] Best accuracy:76.43000030517578[0m
[2K[2Krare_parakeet
[31m[EVAL] Best accuracy:75.56999969482422[0m
[2K[2Ksepia_ammonite
[31m[EVAL] Best accuracy:75.79000091552734[0m
[2K[2Ksmooth_seagull
[31m[EVAL] Best accuracy:73.20999908447266[0m
[2K[2Kstrong_herring
[31m[EVAL] Best accuracy:76.8699951171875[0m
[2K[2Ktentacled_hog
[31m[EVAL] Best accuracy:76.08000183105469[0m
[2K[2Kwatchful_unicorn
[31m[EVAL] Best accuracy:76.23999786376953[0m
[2Kic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.regnet_space.cfg: CfgNode({'MODEL': CfgNode({'TYPE': 'regnet', 'NUM_CLASSES': 10, 'ACTIVATION_FUN': 'relu', 'ACTIVATION_INPLACE': True, 'SCALING_TYPE': '', 'SCALING_FACTOR': 1.0}), 'REGNET': CfgNode({'STEM_TYPE': 'res_stem_cifar', 'INPUT_CHANNELS': 3, 'STEM_W': 32, 'BLOCK_TYPE': 'res_bottleneck_block', 'STRIDE': 2, 'SE_ON': True, 'SE_R': 0.25, 'DEPTH': 9, 'W0': 112, 'WA': 40.0, 'WM': 2.3999999999999986, 'GROUP_W': 8, 'BOT_MUL': 1.0, 'HEAD_W': 0, 'DOWNSAMPLE': 'avg', 'DROP_RATE': 0.01, 'DROPOUT': 0.2}), 'BN': CfgNode({'EPS': 1e-05, 'MOM': 0.1, 'ZERO_INIT_FINAL_GAMMA': False}), 'LN': CfgNode({'EPS': 1e-05}), 'DESC': ''})
ic| self.total_time: 6484.79993057251
ic| self.metadata["time_remaining"]: 65127.00665855408
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/search_space/utils.py:34: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

ic| metadata: {'benchmark': 90.65,
               'codename': 'CIFAR10',
               'experiment_name': '/home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_2/tests_CIFAR10_21_10_2024_09_54/Generation_3/whispering_worm',
               'input_shape': [50000, 3, 32, 32],
               'mode': 'NAS',
               'num_classes': 10,
               'test_type': 'T3_Proxy/seed_2',
               'time_remaining': 58641.85502934456,
               'train_config_path': 'configs/train/finetuning_generation_adam.yaml'}
ic| cfg_path: 'configs/train/finetuning_generation_adam.yaml'
ic| self.cfg.SOLVER.LR: 0.001
ic| self.cfg.SOLVER.EPOCHS-self.cfg.SOLVER.SWA_START: 10
ic| self.cfg.SOLVER.EPOCHS: 100
/home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/trainer.py:41: FutureWarning:

You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.

[2Kwhispering_worm
[31m[EVAL] Best accuracy:76.08999633789062[0m
['parents.csv', 'capable_cormorant', 'faithful_dingo', 'glittering_bittern', 'golden_pelican', 'great_waxbill', 'interesting_dragonfly', 'jade_sambar', 'lavender_falcon', 'lavender_shark', 'logical_woodlouse', 'poised_emu', 'powerful_firefly', 'proficient_lemming', 'rare_parakeet', 'sepia_ammonite', 'smooth_seagull', 'strong_herring', 'tentacled_hog', 'watchful_unicorn', 'whispering_worm', 'population.html', 'config.yaml']
Error with student:  parents.csv
Error with student:  population.html
Error with student:  config.yaml
Error with correlations
Best new score: 77.04
1
2
3
Loading model: /home/woody/iwb3/iwb3021h/THESIS_RESULTS/T3_Proxy/seed_2/tests_CIFAR10_21_10_2024_09_54/Generation_2/hissing_mosquito/config.yaml

=== Training ===
  Allotted compute time remaining: ~16h,17m,21s
[31m[EVAL] Best accuracy:91.97999572753906[0m

=== Predicting ===
  Allotted compute time remaining: ~15h,46m,41s

rm -Rf /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/labels
mkdir /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/predictions
rsync -avr --exclude='**/*x.npy' --exclude='**/train*.npy' --exclude='**/valid*.npy'   --include='**/test_y.npy' datasets/* /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/labels/
sending incremental file list
CIFAR10/
CIFAR10/cifar-10-python.tar.gz
CIFAR10/metadata
CIFAR10/test_y.npy
ImageNet16-120/
ImageNet16-120/metadata
ImageNet16-120/test_y.npy
Sudoku/
Sudoku/Example Image with Corresponding Sudoku Grid.png
Sudoku/README
Sudoku/metadata
Sudoku/test_y.npy
Sudoku/Sokoto/
Sudoku/Sokoto/augmentation_results.json
Sudoku/Sokoto/aug_0/
Sudoku/Sokoto/aug_0/student_best
Sudoku/Sokoto/aug_0/worklog.txt
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/
Sudoku/Sokoto/aug_0/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_1/
Sudoku/Sokoto/aug_1/student_best
Sudoku/Sokoto/aug_1/worklog.txt
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/
Sudoku/Sokoto/aug_1/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_2/
Sudoku/Sokoto/aug_2/student_best
Sudoku/Sokoto/aug_2/worklog.txt
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/
Sudoku/Sokoto/aug_2/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_3/
Sudoku/Sokoto/aug_3/student_best
Sudoku/Sokoto/aug_3/worklog.txt
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/
Sudoku/Sokoto/aug_3/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_4/
Sudoku/Sokoto/aug_4/student_best
Sudoku/Sokoto/aug_4/worklog.txt
Sudoku/Sokoto/aug_5/
Sudoku/Sokoto/aug_5/student_best
Sudoku/Sokoto/aug_5/worklog.txt
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/
Sudoku/Sokoto/aug_5/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_6/
Sudoku/Sokoto/aug_6/student_best
Sudoku/Sokoto/aug_6/worklog.txt
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/
Sudoku/Sokoto/aug_6/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_7/
Sudoku/Sokoto/aug_7/student_best
Sudoku/Sokoto/aug_7/worklog.txt
Sudoku/Sokoto/aug_8/
Sudoku/Sokoto/aug_8/student_best
Sudoku/Sokoto/aug_8/worklog.txt
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/
Sudoku/Sokoto/aug_8/.ipynb_checkpoints/worklog-checkpoint.txt
Sudoku/Sokoto/aug_9/
Sudoku/Sokoto/aug_9/student_best
Sudoku/Sokoto/aug_9/worklog.txt
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/
Sudoku/Sokoto/aug_9/.ipynb_checkpoints/worklog-checkpoint.txt
Voxel/
Voxel/Rendered Examples.png
Voxel/metadata
Voxel/test_y.npy

sent 620,487,017 bytes  received 951 bytes  112,815,994.18 bytes/sec
total size is 620,331,646  speedup is 1.00
cp -R /home/woody/iwb3/iwb3021h/THESIS_RESULTS/package3/predictions /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3
cp evaluation/score.py /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3/score.py
cd /home/woody/iwb3/iwb3021h/THESIS_RESULTS/scoring3; python3 score.py
===========================================================================
=============    Your Unseen Data 2024 Submission is scoring     =============
===========================================================================
== Scoring Voxel ==
Raw Score:    83.620
Adj Score:    4.283
Model Params: 844,866
Runtime:      10,009.7s
== Scoring ImageNet16-120 ==
Raw Score:    36.900
Adj Score:    -1.768
Model Params: 1,385,806
Runtime:      24,463.5s
== Scoring Sudoku ==
Raw Score:    62.780
Adj Score:    6.278
Model Params: 1,618,046
Runtime:      8,030.2s
== Scoring CIFAR10 ==
Raw Score:    91.860
Adj Score:    1.294
Model Params: 3,165,446
Runtime:      8,691.3s
===========================
Final Score: 10.087
=== JOB_STATISTICS ===
=== current date     : Mon 21 Oct 2024 12:14:05 PM CEST
= Job-ID             : 915604 on tinygpu
= Job-Name           : /home/woody/iwb3/iwb3021h/THESIS_RESULTS/hpcruns/evonas
= Job-Command        : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024/evonas_job_full_main_3.sh
= Initial workdir    : /home/hpc/iwb3/iwb3021h/NAS_CHALLENGE/NAS_Challenge_AutoML_2024
= Queue/Partition    : a100
= Slurm account      : iwb3 with QOS=normal
= Requested resources:  for 23:59:00
= Elapsed runtime    : 14:15:32
= Total RAM usage    : 6.0 GiB of requested  GiB (%)   
= Node list          : tg093
= Subm/Elig/Start/End: 2024-10-20T19:12:31 / 2024-10-20T19:12:31 / 2024-10-20T21:58:33 / 2024-10-21T12:14:05
======================
=== Quota infos ======
    Path              Used     SoftQ    HardQ    Gracetime  Filec    FileQ    FiHaQ    FileGrace    
    /home/hpc          102.9G   104.9G   209.7G        N/A     196K     500K   1,000K        N/A    
    /home/woody        808.7G  1000.0G  1500.0G        N/A     250K   5,000K   7,500K        N/A    
======================
=== GPU utilization ==
gpu_name, gpu_bus_id, pid, gpu_utilization [%], mem_utilization [%], max_memory_usage [MiB], time [ms]
NVIDIA A100-SXM4-40GB, 00000000:01:00.0, 712429, 23 %, 4 %, 8966 MiB, 51205377 ms
